{"version":3,"sources":["lib/api/BuiltinAggregation.ts","lib/api/Table.ts","lib/api/ContextEntry.ts","lib/api/DataType.ts","lib/api/EnumUtils.ts","lib/api/FunctionKind.ts","lib/api/HitPolicy.ts","lib/api/LogicType.ts","lib/i18n/locales/en.ts","lib/i18n/setup.ts","lib/components/EditExpressionMenu/DataTypeSelector.tsx","lib/components/EditExpressionMenu/EditTextInline.tsx","lib/components/PopoverMenu/PopoverMenu.tsx","lib/context/BoxedExpressionGlobalContext.tsx","lib/components/EditExpressionMenu/EditExpressionMenu.tsx","lib/components/Resizer/common/index.ts","lib/components/Resizer/dom/Cell.ts","lib/components/Resizer/dom/DOMSession.ts","lib/components/Resizer/dom/ResizerSupervisorDOM.ts","lib/components/Resizer/Resizer.tsx","lib/components/Resizer/ResizerSupervisor.tsx","lib/components/Table/EditableCell.tsx","lib/components/Table/TableBody.tsx","lib/components/Table/TableHandlerMenu.tsx","lib/components/Table/TableHandler.tsx","lib/components/Table/TableHeader.tsx","lib/components/Table/Table.tsx","lib/components/LiteralExpression/LiteralExpression.tsx","lib/components/LiteralExpression/PMMLLiteralExpression.tsx","lib/components/RelationExpression/RelationExpression.tsx","lib/components/ContextExpression/ContextEntryExpression.tsx","lib/components/ContextExpression/ContextEntryExpressionCell.tsx","lib/components/ContextExpression/ContextEntryInfo.tsx","lib/components/ContextExpression/ContextEntryInfoCell.tsx","lib/components/ContextExpression/ContextExpression.tsx","lib/components/DecisionTableExpression/DecisionTableExpression.tsx","lib/components/DecisionTableExpression/HitPolicySelector.tsx","lib/components/ListExpression/ListExpression.tsx","lib/components/InvocationExpression/InvocationExpression.tsx","lib/components/FunctionExpression/EditParameters.tsx","lib/components/FunctionExpression/FunctionKindSelector.tsx","lib/components/FunctionExpression/FunctionExpression.tsx","lib/components/LogicTypeSelector/LogicTypeSelector.tsx","lib/hooks/Hooks.ts","lib/components/ExpressionContainer/ExpressionContainer.tsx","lib/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx","lib/index.tsx","index.tsx"],"names":["BuiltinAggregation","TableHeaderVisibility","TableOperation","DataType","DEFAULT_ENTRY_INFO_MIN_WIDTH","DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH","getHandlerConfiguration","i18n","groupName","group","items","name","rowOperations","insertAbove","type","RowInsertAbove","insertBelow","RowInsertBelow","delete","RowDelete","clear","RowClear","generateNextAvailableEntryName","entryInfos","namePrefix","lastIndex","length","candidateName","entryWithCandidateName","_","getEntryKey","row","entryRecord","original","entryInfo","dataType","resetEntry","entryExpression","uid","FunctionKind","HitPolicy","LogicType","getEnumKeyByEnumValue","myEnum","enumValue","keys","Object","filter","x","en","en_common","addParameter","builtInAggregator","choose","class","columnOperations","insertLeft","insertRight","columns","context","contextEntry","decisionRule","decisionTable","document","editClause","input","output","editContextEntry","editExpression","editHitPolicy","editParameter","editParameters","editRelation","enterFunction","function","hitPolicy","inputClause","invocation","list","literalExpression","methodSignature","model","outputClause","parameters","pmml","firstSelection","secondSelection","relation","duplicate","rows","ruleAnnotation","selectExpression","selectFunctionKind","selectLogicType","boxedExpressionEditorI18nDefaults","locale","dictionary","boxedExpressionEditorDictionaries","Map","BoxedExpressionEditorI18nContext","React","useBoxedExpressionEditorI18n","useContext","DataTypeSelector","selectedDataType","onDataTypeChange","menuAppendTo","useState","dataTypeSelectOpen","setDataTypeSelectOpen","onDataTypeSelect","useCallback","event","selection","getDataTypes","values","key","SelectOption","value","data-ouia-component-id","onDataTypeFilter","e","RegExp","target","exception","child","test","props","onDataTypeSelectToggle","isOpen","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","EditTextInline","onTextChange","toggle","setToggle","onValueBlur","changedText","trim","onKeyDown","useMemo","pressedEnter","pressedEscape","currentTarget","blur","onClick","className","autoFocus","defaultValue","onBlur","style","borderRadius","width","PopoverMenu","children","arrowPlacement","body","title","appendTo","hasAutoWidth","minWidth","Popover","position","distance","id","reference","headerContent","bodyContent","BoxedExpressionGlobalContext","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","Undefined","selectedExpressionName","onExpressionUpdate","globalContext","boxedExpressionEditorRef","current","undefined","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","onChange","placeholder","DEFAULT_MIN_WIDTH","widthValue","Math","max","round","parseFloat","hashfy","obj","JSON","stringify","Cell","element","depth","lastColumn","rect","parentRow","this","slice","call","classList","c","match","getBoundingClientRect","getParentRow","lastChild","closest","cellWidth","dispatchEvent","CustomEvent","detail","notifyCell","getId","setWidth","fetchChildWidth","isLastColumn","parentRect","right","getRect","isColSpanHeader","refSibling","getParent","parentElement","nextSibling","childrenRects","querySelectorAll","getHeaderType","map","min","BORDER","contains","cssClasses","thead","querySelector","DOMSession","cells","buildCells","fetchCellElements","forEach","cellElement","buildCell","htmlElement","depthLevel","exitingElement","find","cell","push","parent","htmlElements","applyDOMSupervisor","SupervisorExecution","execute","domSession","getCells","sort","c1","c2","refreshWidthAsParent","refreshWidthAsLastGroupColumn","refreshWidthAsLastColumn","Resizer","height","onHorizontalResizeStop","resizerWidth","setResizerWidth","initalResizerWidth","setInitialResizerWidth","setCells","setSupervisorHash","uuid","resizerMinWidth","resizerClassName","useLayoutEffect","listener","addEventListener","removeEventListener","commonWidthValue","getApplicableCells","allCells","currentCell","applicableCells","currentRect","hasSameParent","hasSomeLastColumn","hasParentRelationship","isCellParent","shareSamePosition","cellRect","containsCurrent","isLastGroupColumn","dataset","initialWidth","onResizeStart","onResize","data","newResizerWidth","parseInt","size","delta","celllElement","cellInitialWidth","onResizeStop","minConstraints","axis","handle","ResizerSupervisor","supervisorHash","setTimeout","clearTimeout","READ_MODE","EDIT_MODE","EditableCell","initialValue","index","column","onCellUpdate","setValue","isSelected","setIsSelected","mode","setMode","textarea","useRef","activeElement","focus","setSelectionRange","onDoubleClick","cssClass","onKeyPress","toLowerCase","preventDefault","newValue","altKey","ctrlKey","ref","onFocus","TableBody","tableInstance","headerVisibility","Full","getRowKey","getColumnKey","onColumnsUpdate","renderCell","cellIndex","rowIndex","cellType","allColumns","cellTemplate","render","Td","getTdProps","renderBodyRow","rowProps","getRowProps","Tr","renderAdditiveRow","role","childIndex","Tbody","None","getTableBodyProps","prepareRow","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","groupOperation","MenuGroup","label","operation","MenuList","MenuItem","isDisabled","TableHandler","getColumnPrefix","tableColumns","lastSelectedColumn","lastSelectedRowIndex","tableRows","onRowsUpdate","onRowAdding","showTableHandler","setShowTableHandler","tableHandlerTarget","tableHandlerAllowedOperations","resetRowCustomFunction","placeholderOf","selectedColumn","setSelectedColumn","selectedRowIndex","setSelectedRowIndex","insertBefore","elements","insertAfter","deleteAt","generateNextAvailableColumnName","groupType","getColumnsAtLastLevel","accessor","getLengthOfColumnsByGroupType","generateNextAvailableColumn","columnsLength","nextAvailableColumnName","inlineEditable","updateColumnsThenRows","appendOnColumnChildren","getColumnSearchPredicate","unshift","updateTargetColumns","appendColumnsOnChildren","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowDuplicate","duplicateAfter","groupOperationsDoNotDependOnColumn","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","TableHeader","editColumnLabel","skipLastHeaderGroup","getColumnLabel","updateColumnNameInRows","prevColumnName","newColumnName","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","columnToUpdate","parentName","parentColumns","computeColumnKey","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderCellInfoLabel","renderHeaderCellInfo","headerCellElement","columnWidth","columnToBeFound","renderResizableHeaderCell","headerProps","thProps","getThProps","isColspan","join","getCssClass","expression","renderColumn","isCountColumn","getHeaderGroups","headerGroups","renderHeaderGroups","headerGroup","getHeaderGroupProps","headers","renderAtLevelInHeaderGroups","level","Thead","noWrap","LastLevel","SecondToLastLevel","columnId","originalId","columnToCompare","Table","tableId","controllerCell","defaultCell","headerLevels","tableRef","currentControllerCell","setCurrentControllerCell","generateNumberOfRowsSubColumnRecursively","disableResizing","hideFilter","generateNumberOfRowsColumn","numberOfRowsColumn","setTableHandlerTarget","toString","setTableHandlerAllowedOperations","setLastSelectedColumn","setLastSelectedRowIndex","onColumnsUpdateCallback","onRowsUpdateCallback","updatedTableCells","onRowUpdate","updatedRow","updatedRows","defaultColumn","cellRef","contextMenuIsAvailable","targetIsContainedInCurrentTable","contextMenuAvailableForTarget","tableHandlerStateUpdate","currentlyOpenedHandlerCallback","setCurrentlyOpenedHandlerCallback","columnCanBeDeleted","columnsAtLastLevel","groupTypeForCurrentColumn","columnsByGroupType","atLeastTwoColumnsOfTheSameGroupType","getColumnOperations","useTable","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","useBlockLayout","useResizeColumns","TableComposable","getTableProps","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","literalExpressionWidth","spreadLiteralExpressionDefinition","expressionDefinition","logicType","window","beeApi","broadcastLiteralExpressionDefinition","onContentChange","renderElementWithResizeHandler","renderLiteralExpressionHeader","getBodyContent","_number","_columnId","PMMLLiteralExpression","selected","selectOpen","setSelectOpen","onSelectToggle","updatedSelection","getOptions","getSelection","showingPlaceholder","placeholderText","noOptionsLabel","aria-placeholder","single","RelationExpression","relationProps","spreadRelationExpressionDefinition","broadcastRelationExpressionDefinition","convertColumnsForTheTable","convertRowsForTheTable","tableRow","onSavingRows","onSavingColumns","columnInstance","ContextEntryExpression","onExpressionResetting","expressionContainerRef","getLogicTypeSelectorRef","onLogicTypeUpdating","onLogicTypeResetting","selectedExpression","getPlacementRef","ContextEntryExpressionCell","updatedEntryInfo","nameAndDataTypeSynchronized","ContextEntryInfo","onContextEntryUpdate","editInfoPopoverLabel","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","renderEntryDefinition","additionalCssClass","renderEntryDefinitionWithPopoverMenu","ContextEntryInfoCell","updatedExpression","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","contextEntries","result","renderResult","entryInfoWidth","entryExpressionWidth","noHandlerMenu","expressionColumnName","expressionColumnDataType","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setExpressionWidth","setRows","spreadContextExpressionDefinition","updatedDefinition","Context","broadcastContextExpressionDefinition","expressionColumn","generatedName","getHeaderVisibility","DecisionTableColumnType","BUILT_IN_AGGREGATION_AVAILABILITY","Collect","HitPolicySelector","onBuiltInAggregatorSelect","onHitPolicySelect","selectedBuiltInAggregator","selectedHitPolicy","hitPolicySelectOpen","setHitPolicySelectOpen","builtInAggregatorSelectOpen","setBuiltInAggregatorSelectOpen","builtInAggregatorSelectDisabled","setBuiltInAggregatorSelectDisabled","onHitPolicySelectToggle","onBuiltInAggregatorSelectToggle","hitPolicySelectionCallback","updatedHitPolicy","hitPolicySupportsAggregation","renderHitPolicyItems","builtInAggregatorSelectionCallback","renderBuiltInAggregationItems","renderAggregator","EMPTY_SYMBOL","DECISION_NODE_DEFAULT_NAME","DecisionTableExpression","Unique","aggregation","annotations","rules","inputEntries","outputEntries","annotationEntries","InputClause","OutputClause","Annotation","generateHandlerConfigurationByColumn","configuration","getEditColumnLabel","setSelectedHitPolicy","selectedAggregation","setSelectedAggregation","decisionName","decisionDataType","singleOutputChildDataType","inputColumns","outputColumns","annotationColumns","annotation","evaluateColumns","rule","rowArray","spreadDecisionTableExpressionDefinition","groupedColumns","DecisionTable","broadcastDecisionTableExpressionDefinition","synchronizeDecisionNodeDataTypeWithSingleOutputColumnDataType","decisionNodeColumn","updatedSingleOutputChildDataType","updatedColumns","fillMissingCellValues","filledRow","ListExpression","generateLiteralExpression","nextId","initialListOfItems","item","listItems","setListItems","listWidth","setListWidth","listTableGetRowKey","List","listItem","broadcastListExpressionDefinition","DEFAULT_PARAMETER_NAME","DEFAULT_PARAMETER_DATA_TYPE","InvocationExpression","bindingEntries","invokedFunction","functionName","setFunctionName","broadcastInvocationExpressionDefinition","onBlurCallback","updatedExpressionColumn","setRowsCallback","entries","getRowKeyCallback","resetEntryCallback","EditParameters","setParameters","onNameChange","onParameterRemove","Button","parameter","icon","iconPosition","FunctionKindSelector","selectedFunctionKind","onFunctionKindSelect","functionKindSelectionCallback","hide","renderFunctionKindItems","FunctionExpression","parametersWidth","formalParameters","functionKind","Feel","pmmlParams","editParametersPopoverAppendTo","extractContextEntriesFromJavaProps","javaProps","String","noClearAction","method","extractContextEntriesFromPmmlProps","param","modelsFromDocument","extractParametersFromPmmlProps","parametersFromModel","evaluateRows","Java","Pmml","setSelectedFunctionKind","retrieveModelValue","documentValue","contextProps","setParametersBasedOnDocumentAndModel","documentHasBeenChanged","modelHasBeenChanged","parametersFromPmmlProps","extendDefinitionBasedOnFunctionKind","definition","methodName","modelValue","spreadFunctionExpressionDefinition","broadcastFunctionExpressionDefinition","kind","LogicTypeSelector","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","eventTarget","hideContextMenu","showContextMenu","pageX","pageY","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","targetElement","useContextMenuHandler","renderExpression","Relation","Invocation","Function","getSelectableLogicTypes","renderLogicTypeItems","getArrowPlacement","getAppendToPlacement","onLogicTypeSelect","buildLogicSelectorMenu","executeClearAction","buildContextMenu","top","left","toLocaleUpperCase","shouldClearContextMenuBeOpened","notClickedOnTable","clickedOnTableRemainderContent","clickedOnAllowedTableSection","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","previousSelectedExpression","resetExpressionDefinition","BoxedExpressionEditor","defaults","dictionaries","initialLocale","navigator","language","ctx","Provider","renderBoxedExpressionEditor","selector","ReactDOM","getElementById","App","Any","Number","setUpdatedExpression"],"mappings":"4sBAgBYA,E,8FAAAA,K,aAAAA,E,QAAAA,E,UAAAA,E,QAAAA,E,SAAAA,M,SC8CAC,EAQAC,E,iBARAD,O,eAAAA,I,yBAAAA,I,yCAAAA,I,gBAAAA,M,cAQAC,O,uCAAAA,I,yCAAAA,I,+BAAAA,I,mCAAAA,I,mCAAAA,I,yBAAAA,I,uBAAAA,I,gCAAAA,M,KC1BL,IC5BKC,ED4BCC,EAA+B,IAC/BC,EAAqC,IAErCC,EAA0B,SACrCC,EACAC,GAFqC,MAGP,CAC9B,CACEC,MAAOD,EACPE,MAAO,CACL,CAAEC,KAAMJ,EAAKK,cAAcC,YAAaC,KAAMZ,EAAea,gBAC7D,CAAEJ,KAAMJ,EAAKK,cAAcI,YAAaF,KAAMZ,EAAee,gBAC7D,CAAEN,KAAMJ,EAAKK,cAAcM,OAAQJ,KAAMZ,EAAeiB,WACxD,CAAER,KAAMJ,EAAKK,cAAcQ,MAAON,KAAMZ,EAAemB,cAKhDC,EAAiC,SAAjCA,EACXC,EACAC,GAEY,IADZC,EACW,uDADSF,EAAWG,OAEzBC,EAAa,UAAMH,EAAN,YAAkC,IAAdC,EAAkB,EAAIA,GACvDG,EAAyBC,OAAON,EAAY,CAAEZ,KAAMgB,IAC1D,OAAOC,EAAyBN,EAA+BC,EAAYC,EAAYC,EAAY,GAAKE,GAG7FG,EAAc,SAACC,GAC1B,IAAMC,EAAcD,EAAIE,SACxB,OAAOD,EAAYE,UAAUvB,KAAOqB,EAAYE,UAAUC,UAG/CC,EAAa,SAACL,GAAD,mBAAC,eACtBA,GADqB,IAExBM,gBAAiB,CAAEC,IAAMP,EAAIM,gBAAoCC,S,SC/DvDnC,K,wBAAAA,E,UAAAA,E,kBAAAA,E,kBAAAA,E,YAAAA,E,yBAAAA,E,0CAAAA,E,gBAAAA,E,gBAAAA,E,YAAAA,E,iDAAAA,M,KCAL,ICGKoC,ECHAC,ECAAC,EHACC,EAAwB,SACnCC,EACAC,GAEA,IAAMC,EAAOC,OAAOD,KAAKF,GAAQI,QAAO,SAACC,GAAD,OAAOL,EAAOK,IAAMJ,KAC5D,OAAOC,EAAKnB,OAAS,EAAImB,EAAK,GAAK,O,SCFzBN,K,YAAAA,E,YAAAA,E,aAAAA,M,cCHAC,K,gBAAAA,E,cAAAA,E,oBAAAA,E,UAAAA,E,kBAAAA,E,uBAAAA,E,4BAAAA,M,cCAAC,K,wBAAAA,E,uCAAAA,E,gDAAAA,E,kBAAAA,E,+BAAAA,E,oBAAAA,E,oBAAAA,E,wBAAAA,E,aAAAA,M,wDCGCQ,EAA6B,2BACrCC,MADqC,IAExCC,aAAc,gBACdC,kBAAmB,qBACnBC,OAAQ,YACRC,MAAO,QACPlC,MAAO,QACPmC,iBAAkB,CAChBrC,OAAQ,SACRsC,WAAY,cACZC,YAAa,gBAEfC,QAAS,UACTC,QAAS,UACTC,aAAc,gBACdzB,SAAU,YACV0B,aAAc,gBACdC,cAAe,iBACf5C,OAAQ,SACR6C,SAAU,WACVC,WAAY,CACVC,MAAO,oBACPC,OAAQ,sBAEVC,iBAAkB,qBAClBC,eAAgB,kBAChBC,cAAe,kBACfC,cAAe,iBACfC,eAAgB,kBAChBC,aAAc,gBACdC,cAAe,iBACfC,SAAU,WACVC,UAAW,aACXC,YAAa,eACbC,WAAY,aACZC,KAAM,OACNC,kBAAmB,qBACnBC,gBAAiB,mBACjBC,MAAO,QACPtE,KAAM,OACNuE,aAAc,gBACdC,WAAY,aACZC,KAAM,CACJC,eAAgB,6BAChBC,gBAAiB,4BAEnBC,SAAU,WACV3E,cAAe,CACbQ,MAAO,QACPF,OAAQ,SACRsE,UAAW,YACX3E,YAAa,eACbG,YAAa,gBAEfyE,KAAM,OACNC,eAAgB,kBAChBC,iBAAkB,oBAClBC,mBAAoB,uBACpBC,gBAAiB,sBCtDNC,EAA6E,CACxFC,OAAQ,KACRC,WAAY/C,GAEDgD,EAAiF,IAAIC,IAAI,CAAC,CAAC,KAAMjD,KACjGkD,EAAmCC,gBAC9C,IAGK,SAASC,IACd,OAAOC,qBAAWH,G,WCDPI,EAAmE,SAAC,GAI1E,IAHLC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,aAEQnG,EAAS8F,IAAT9F,KAER,EAAoDoG,oBAAS,GAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KAEMC,EAAmBC,uBACvB,SAACC,EAAOC,GACNJ,GAAsB,GACtBJ,EAAiBQ,KAEnB,CAACR,IAGGS,EAAeH,uBAAY,WAC/B,OAAOlF,MAAMiB,OAAOqE,OAAOhH,IAAW,SAACiH,GAAD,OACpC,cAACC,EAAA,EAAD,CAAwBC,MAAOF,EAAKG,yBAAwBH,EAA5D,SACGA,GADgBA,QAIpB,IAEGI,EAAmBT,uBACvB,SAACU,GACC,IAAIxD,EACJ,IACEA,EAAQ,IAAIyD,OAAOD,EAAEE,OAAOL,MAAO,KACnC,MAAOM,GACP,OAAOV,IAET,MAA0B,KAAnBO,EAAEE,OAAOL,MAAeJ,IAAenE,QAAO,SAAC8E,GAAD,OAAW5D,EAAM6D,KAAKD,EAAME,MAAMT,UAAUJ,MAEnG,CAACA,IAGGc,EAAyBjB,uBAAY,SAACkB,GAAD,OAAYpB,EAAsBoB,KAAS,IAEtF,OACE,cAACC,EAAA,EAAD,CACExB,aAAcA,EACdyB,OAAO,4BACPC,QAASC,IAAcC,UACvBC,mBAAoBhI,EAAK8C,OACzBmF,SAAUR,EACVS,SAAU3B,EACV4B,SAAUlB,EACVS,OAAQrB,EACR+B,WAAYnC,EACZoC,iBAAe,EACfC,4BAA6BtI,EAAK8C,OAXpC,SAaG6D,OC3DM4B,EAA+D,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAczB,EAAY,EAAZA,MAC3F,EAA4BX,oBAAS,GAArC,mBAAOqC,EAAP,KAAeC,EAAf,KAEMC,EAAcnC,uBAClB,SAACC,GACC,IAAMmC,EAAcnC,EAAMW,OAAOL,MAC7BzF,OAAOsH,EAAYC,SACrBL,EAAaI,GAEfF,GAAU,KAEZ,CAACF,IAGGM,EAAYC,mBAChB,kBAAM,SAACtC,GACL,IAAMuC,EAA0C,UAA3B1H,YAAYmF,EAAMI,KACjCoC,EAA2C,WAA3B3H,YAAYmF,EAAMI,KACpCmC,GACFvC,EAAMyC,cAAcC,OAElBF,GACFP,GAAU,MAGd,IAGIU,EAAUL,mBACd,kBAAM,WACJL,GAAU,MAEZ,IAGF,OAAOD,EACL,mBAAGY,UAAU,qBAAqBD,QAASA,EAA3C,SACGrC,IAGH,uBACExG,KAAK,OACL+I,WAAS,EACTC,aAAcxC,EACdyC,OAAQb,EACRc,MAAO,CAAEC,aAAc,QAASC,MAAO,QACvCb,UAAWA,K,kBClCJc,G,OAAyD,SAAC,GAS9C,IARvBC,EAQsB,EARtBA,SACAC,EAOsB,EAPtBA,eACAC,EAMsB,EANtBA,KACAC,EAKsB,EALtBA,MACAC,EAIsB,EAJtBA,SACAZ,EAGsB,EAHtBA,UACAa,EAEsB,EAFtBA,aACAC,EACsB,EADtBA,SAEA,OACE,cAACC,EAAA,EAAD,CACEpD,yBAAuB,0BACvBqC,UAAS,+BAA0BA,EAAY,IAAMA,EAAY,IACjEa,aAAcA,EACdC,SAAUA,EACVE,SAAS,SACTC,SAAU,EACVC,GAAG,gBACHC,UAAWV,EACXG,SAAUA,EACVQ,cACE,qBAAKpB,UAAU,sBAAsBrC,yBAAuB,gCAA5D,SACGgD,IAGLU,YAAaX,EAff,SAiBGF,MCrCMc,EAA+B9E,gBAC1C,ICeW+E,EAAkB,kBAElBC,EAAuE,SAAC,GAUrD,IAAD,YAT7BhB,EAS6B,EAT7BA,SACAI,EAQ6B,EAR7BA,SACAH,EAO6B,EAP7BA,eACAE,EAM6B,EAN7BA,MACAc,EAK6B,EAL7BA,UACAC,EAI6B,EAJ7BA,cAI6B,IAH7B9E,wBAG6B,MAHVrG,EAASoL,UAGC,EAF7BC,EAE6B,EAF7BA,uBACAC,EAC6B,EAD7BA,mBAEMC,EAAgBpF,qBAAW4E,GACzB3K,EAAS8F,IAAT9F,KACRgK,EAAK,UAAGA,SAAH,QAAYhK,EAAK6D,eACtBiH,EAAS,UAAGA,SAAH,QAAgB9K,EAAKI,KAC9B2K,EAAa,UAAGA,SAAH,QAAoB/K,EAAK4B,SACtCqI,EAAQ,oBAAGA,SAAH,kBAAekB,EAAcC,gCAA7B,aAAe,EAAwCC,eAAvD,aAAkEC,EAE1E,MAAgClF,mBAASH,GAAzC,mBAAOrE,EAAP,KAAiB2J,EAAjB,KACA,EAA4CnF,mBAAS6E,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACRD,EAAkBR,KACjB,CAACA,IAEJS,qBAAU,WACRH,EAAYtF,KACX,CAACA,IAEJ,IAAM0F,EAAyBnF,uBAC7B,SAACC,GACCgF,EAAkBhF,EAAMW,OAAOL,OACZ,SAAfN,EAAMlG,MACR2K,EAAmB,CACjB9K,KAAMqG,EAAMW,OAAOL,MACnBnF,eAIN,CAACA,EAAUsJ,IAGPhF,EAAmBM,uBACvB,SAAC5E,GACC2J,EAAY3J,GACZsJ,EAAmB,CACjB9K,KAAMoL,EACN5J,SAAUA,MAGd,CAAC4J,EAAgBN,IAGnB,OACE,cAAC,EAAD,CACElB,MAAOA,EACPF,eAAgBA,EAChBG,SAAUA,EACVF,KACE,sBAAKV,UAAU,uBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,gCAAQyB,IACR,uBACEvK,KAAK,OACLgK,GAAG,kBACHvD,yBAAuB,uBACvBD,MAAOyE,EACPI,SAAUD,EACVnC,OAAQmC,EACRtC,UAAU,iCACVwC,YAAajB,OAGjB,sBAAKvB,UAAU,uBAAf,UACE,gCAAQ0B,IACR,cAAC,EAAD,CAAkB9E,iBAAkBrE,EAAUsE,iBAAkBA,UArBxE,SA0BG2D,K,kBChHMiC,EAAoB,IAKpBC,EAAa,SAACpC,GACzB,OAAOqC,KAAKC,IAAID,KAAKE,MAAMC,WAAWxC,EAAQ,KAAMmC,IAMzCM,EAAS,WAAuB,IAAtBC,EAAqB,uDAAf,GAC3B,OAAOC,KAAKC,UAAUF,I,wBCPXG,EAAb,WAME,WAAmBC,EAA6B5C,EAAyB6C,GAAgB,yBAAtED,UAAqE,KAAxC5C,WAAwC,KAAf6C,QAAe,KALhFnC,QAKgF,OAJhFoC,gBAIgF,OAHhFC,UAGgF,OAFhFC,eAEgF,EAN1F,yCAQE,WAIE,OAHKC,KAAKvC,KACRuC,KAAKvC,GAAKjJ,QAAQ,GAAGyL,MAAMC,KAAKF,KAAKL,QAAQQ,WAAWzK,QAAO,SAAC0K,GAAD,OAAeA,EAAEC,MAAM,eAAe,IAEhGL,KAAKvC,KAZhB,qBAeE,WAIE,OAHKuC,KAAKF,OACRE,KAAKF,KAAOE,KAAKL,QAAQW,yBAEpBN,KAAKF,OAnBhB,0BAsBE,WACyB,IAAD,EAAjBE,KAAKH,aACRG,KAAKH,YAAa,UAAAG,KAAKO,sBAAL,eAAqBC,aAAcR,KAAKL,QAAQc,QAAQ,WAE5E,OAAOT,KAAKH,aA1BhB,sBA6BE,SAAShD,GACP,IAAM6D,EAAYzB,EAAWpC,IDjBP,SAACY,GAAyD,IAA7CZ,EAA4C,uDAA5BmC,EACrDtI,SAASiK,cACP,IAAIC,YAAYnD,EAAI,CAClBoD,OAAQ,CAAEhE,YCeZiE,CAAWd,KAAKe,QAASL,GACzBV,KAAKL,QAAQhD,MAAME,MAAQ6D,EAAY,OAhC3C,kCAmCE,WACMV,KAAKjD,SAAS1I,OAAS,GACzB2L,KAAKgB,SAAShB,KAAKiB,kBAxCD,MAGxB,sCAyCE,WACE,GAAKjB,KAAKkB,eAAV,CAIA,IAAMC,EAAanB,KAAKO,eAAgBD,wBAEpCa,GACFnB,KAAKgB,SAAS9B,KAAKE,MAAM+B,EAAWC,OAASlC,KAAKE,MAAMY,KAAKqB,UAAU1L,GAnD9D,MAEf,2CAqDE,WAAuC,IAAD,IACpC,GAAKqK,KAAKsB,kBAAV,CAIA,IAAMC,EAAU,UAAGvB,KAAKwB,mBAAR,iBAAG,EAAkBC,qBAArB,aAAG,EAAiCC,YAEpD,GAAKH,EAAL,CAIA,IACMI,EADW,GAAG1B,MAAMC,KAAMqB,EAA2BK,iBAA3B,IAAD,OAAiD5B,KAAK6B,mBACtDC,KAAI,SAAC1B,GAAD,OAAoBA,EAAEE,2BACnD3K,EAAIuJ,KAAK6C,IAAL,MAAA7C,KAAI,YAAQyC,EAAcG,KAAI,SAAC1B,GAAD,OAAgBA,EAAEzK,OACpDyL,EAAQlC,KAAKC,IAAL,MAAAD,KAAI,YAAQyC,EAAcG,KAAI,SAAC1B,GAAD,OAAgBA,EAAEgB,WAE9DpB,KAAKgB,SAASI,EAAQzL,EAAIqM,OArE9B,6BAwEE,WAA4B,IAAD,EACzB,OAAO,UAAAhC,KAAKwB,mBAAL,eAAkBrB,UAAU8B,SAAS,qBAAqB,IAzErE,2BA4EE,WAAyB,IAAD,EAChBC,GAAc,UAAAlC,KAAKwB,mBAAL,eAAkBrB,YAAa,GAEnD,OAAI+B,EAAWD,SAAS,SACf,QAGLC,EAAWD,SAAS,UACf,SAGF,eAvFX,uBA0FE,WACE,OAAOjC,KAAKL,QAAQ8B,gBA3FxB,0BA8FE,WAIE,OAHKzB,KAAKD,YACRC,KAAKD,UAAYC,KAAKL,QAAQc,QAAQ,OAEjCT,KAAKD,YAlGhB,6BAqGE,WACE,IAAMoC,EAAQnC,KAAKL,QAAQyC,cAAc,gBACzC,OAAOnD,EAAU,OAACkD,QAAD,IAACA,OAAD,EAACA,EAAO7B,wBAAwBzD,WAvGrD,KCFawF,EAAb,iDACUC,WADV,8CAGE,WAIE,YAHmB9D,IAAfwB,KAAKsC,QACPtC,KAAKsC,MAAQtC,KAAKuC,cAEbvC,KAAKsC,QAPhB,wBAUE,WAAsB,IAAD,OACbA,EAAgB,GAItB,OAHAtC,KAAKwC,kBAAkB9L,SAASuG,MAAMwF,SAAQ,SAACC,GAC7C,EAAKC,UAAUD,EAAaJ,EAAO,MAE9BA,IAfX,uBAkBE,SAAkBM,EAA0BN,EAAeO,GAA2B,IAAD,OAC7EC,EAAiBR,EAAMS,MAAK,SAAC3C,GAAD,OAAOA,EAAET,UAAYiD,KACvD,GAAIE,EACF,OAAOA,EAGT,IAAME,EAAO,IAAItD,EACfkD,EACA5C,KAAKwC,kBAAkBI,GACpBd,KAAI,SAACtH,GAAD,OAAW,EAAKmI,UAAUnI,EAAO8H,EAAOO,EAAa,MACzDnN,QAAO,SAAC0K,GAAD,OAAOA,EAAER,OAASiD,EAAa,KACzCA,GAKF,OAFAP,EAAMW,KAAKD,GAEJA,IAlCX,+BAqCE,SAA0BE,GACxB,IAAMC,EAAeD,EAAOtB,iBAxCC,oBAyC7B,MAAO,GAAG3B,MAAMC,KAAKiD,OAvCzB,KCOaC,EAAqB,YAChC,IAAIC,GAAsBC,WAGtBD,E,WAGJ,aAAe,yBAFfE,gBAEc,EACZvD,KAAKuD,WAAa,IAAIlB,E,2CAGxB,WACE,IAAMC,EAAQtC,KAAKuD,WAAWC,WAAWC,MAAK,SAACC,EAAIC,GAAL,OAAYA,EAAG/D,MAAQ8D,EAAG9D,SAExE0C,EAAMG,QAAQzC,KAAK4D,sBACnBtB,EAAMG,QAAQzC,KAAK6D,+BACnBvB,EAAMmB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG9D,MAAQ+D,EAAG/D,SAAO6C,QAAQzC,KAAK8D,4B,kCAG3D,SAA6Bd,GAC3BA,EAAKY,yB,sCAGP,SAAiCZ,GAC/BA,EAAKc,6B,2CAGP,SAAsCd,GACpCA,EAAKa,oC,KCrBIE,G,OAAiD,SAAC,GAMxD,IALLhH,EAKI,EALJA,SAKI,IAJJiH,cAII,MAJK,OAIL,EAHJ3G,EAGI,EAHJA,SACA4G,EAEI,EAFJA,uBACApH,EACI,EADJA,MAMA,EAAwCvD,mBAASuD,GAAjD,mBAAOqH,EAAP,KAAqBC,EAArB,KACA,EAAqD7K,mBAAS,GAA9D,mBAAO8K,EAAP,KAA2BC,EAA3B,KACA,EAA0B/K,mBAAiB,IAA3C,mBAAOgJ,EAAP,KAAcgC,EAAd,KACQC,EAAsBtL,qBAAW4E,GAAjC0G,kBAMF9G,EAAKxB,mBAAQ,WACjB,MAAM,QAAN,OAAeuI,iBACd,IAEGC,EAAkBxI,mBAAQ,WAC9B,cAAOoB,QAAP,IAAOA,IAAY2B,IAClB,CAAC3B,IAEEqH,EAAmBzI,mBAAQ,WAE/B,MAAM,GAAN,OAD+B,SAAX+H,EAAoB,0BAA4B,GACpE,YAAyBvG,KACxB,CAACuG,EAAQvG,IAMZkH,2BAAgB,WACd,SAASC,EAASjL,GAChB,IAAMkD,EAAQqC,KAAKE,MAAMzF,EAAMkH,OAAOhE,OACtCsH,EAAgBtH,GACM,OAAtBoH,QAAsB,IAAtBA,KAAyBpH,GAI3B,OADAnG,SAASmO,iBAAiBpH,EAAImH,GACvB,WACLlO,SAASoO,oBAAoBrH,EAAImH,MAElC,CAACnH,EAAIwG,EAAwBC,IAMhC,IAAMjF,EAAavF,sBAAYqL,EAAkB,IAE3CC,EAAqBtL,uBAAY,SAACuL,EAAkBC,GACxD,IAAMC,EAA0B,GAC1BjC,EAASgC,EAAYvF,QAAQc,QAAQ,SACrC2E,EAAcF,EAAY7D,UAE1BgE,EAAgB,SAACrC,GAAD,cAAgBE,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQjB,SAASe,EAAKrD,UAa5D,GAAIuF,EAAYhE,eACd+D,EACGvP,QAAO,SAACsN,GAAD,OAAUA,EAAK9B,kBACtBuB,SAAQ,SAACO,GACRmC,EAAgBlC,KAAKD,UAEpB,CACL,IAAIsC,GAAoB,EAExBL,EAASxC,SAAQ,SAACO,GAChB,IAAMuC,EAAwBF,EAAcrC,IAtB3B,SAACA,GAAD,uBAAgBA,EAAKrD,eAArB,aAAgB,EAAcsC,SAASiD,EAAYvF,SAsBf6F,CAAaxC,GAC5DyC,EAtBc,SAACzC,GACvB,IAAM0C,EAAW1C,EAAK3B,UACtB,OAAOqE,EAAS/P,GAAKyP,EAAYzP,GAAK+P,EAAStE,OAASgE,EAAYhE,MAoBxCuE,CAAgB3C,IAlBpB,SAACA,GACzB,QAAKkC,EAAY5D,mBAGV0B,EAAK3B,UAAUD,QAAUgE,EAAYhE,MAcSwE,CAAkB5C,GACjEuC,GAAyBE,IAC3BN,EAAgBlC,KAAKD,GACjBA,EAAK9B,iBACPoE,GAAoB,OAKtBA,GACFL,EACGvP,QAAO,SAACsN,GACP,OAAOA,EAAK9B,iBAAmBmE,EAAcrC,MAE9CP,SAAQ,SAACO,GACRmC,EAAgBlC,KAAKD,MAS7B,OAJAmC,EAAgB1C,SAAQ,SAACO,GACvBA,EAAKrD,QAAQkG,QAAQC,aAAe9C,EAAKrD,QAAQhD,MAAME,SAGlDrI,SAAS2Q,GAAiB,SAACnC,GAAD,OAAUA,EAAKjC,aAC/C,IAEGgF,EAAgBrM,uBAAY,WAChC,IAAMuL,GAAW,IAAI5C,GAAamB,WAC5B0B,EAAcD,EAASlC,MAAK,SAAC3C,GAAD,OAAOA,EAAEW,UAAYtD,KACjD0H,EAAkBH,EAAmBC,EAAUC,GAC/CY,EAAe7G,EAAWiG,EAAY7D,UAAUxE,OAEtDyH,EAASa,GACTd,EAAuByB,KACtB,CAACd,EAAoBvH,EAAIwB,IAEtB+G,EAAWtM,uBACf,SAAClF,EAAGyR,GACF,IAAMC,EAAkBC,SAASF,EAAKG,KAAKvJ,MAAQ,IACnDyF,EAAMG,SAAQ,SAACO,GACb,IAAMqD,EAAQH,EAAkB9B,EAC1BkC,EAAetD,EAAKrD,QAG1B,KAFmBqD,EAAKjC,UAAYtD,GAEnB,CACf,IAAM8I,EAAmBJ,SAASG,EAAaT,QAAQC,aAAe,IACtEQ,EAAa3J,MAAME,MAAQ0J,EAAmBF,EAAQ,WAI5D,CAAC/D,EAAO7E,EAAI2G,IAGRoC,EAAe9M,uBACnB,SAAClF,EAAGyR,GACF,IAAMC,EAAkBjH,EAAWgH,EAAKG,KAAKvJ,OAE7CyF,EAAMG,SAAQ,SAACO,GACb,IAAMqD,EAAQH,EAAkB9B,EAC1BmC,EAAmBtH,EAAW+D,EAAKrD,QAAQkG,QAAQC,cACzD9C,EAAKhC,SAASuF,EAAmBF,MAGnC9B,EAAkB,OAEpB,CAACjC,EAAO8B,EAAoBG,EAAmBtF,IAGjD,OAAOhD,mBAAQ,WACb,OACE,cAAC,eAAD,CACEM,UAAWmI,EACX7H,MAAOqH,EACPuC,eAAgB,CAAChC,EAAiB,GAClCT,OAAQ,EACR0C,KAAK,IACLV,SAAUA,EACVQ,aAAcA,EACdT,cAAeA,EACfY,OACE,qBAAKpK,UAAU,cAAf,SACE,qBAAKA,UAAU,sCAAf,SACE,qBAAKA,UAAU,qCAZvB,SAiBGQ,MAIJ,CAAC2H,EAAkBsB,EAAUQ,EAAcT,EAAehJ,MCzLlD6J,EAAqE,SAAC,GAAkB,IAAhB7J,EAAe,EAAfA,SAC3E8J,EAAmB5N,qBAAW4E,GAA9BgJ,eAOR,OALAjI,qBAAU,WACR,IAAMnB,EAAKqJ,WAAW1D,EAAoB,GAC1C,OAAO,kBAAM2D,aAAatJ,MACzB,CAACoJ,IAEG,mCAAG9J,KCbCiK,I,OAAY,4BACZC,GAAY,2BASZC,GAA2D,SAAC,GAK/C,IAJjBC,EAIgB,EAJvBlN,MACOmN,EAGgB,EAHvB1S,IAAO0S,MACG3J,EAEa,EAFvB4J,OAAU5J,GACV6J,EACuB,EADvBA,aAEA,EAA0BhO,mBAAS6N,GAAnC,mBAAOlN,EAAP,KAAcsN,EAAd,KACA,EAAoCjO,oBAAS,GAA7C,mBAAOkO,EAAP,KAAmBC,EAAnB,KACA,EAAwBnO,mBAAS0N,IAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACMC,EAAWC,iBAA4B,MAE7CjJ,qBAAU,WACR2I,EAASJ,KACR,CAACA,IAEJ,IAAMrI,EAAWpF,uBAAY,SAACU,GAC5BuN,EAAQV,IACRM,EAASnN,EAAEE,OAAOL,SACjB,IAEGyC,EAAShD,uBAAY,WACzBiO,EAAQX,IACRS,GAAc,GAEdH,EAAaF,EAAO3J,EAAIxD,KACvB,CAACwD,EAAI2J,EAAOnN,EAAOqN,IAEhBlM,EAAW1B,uBAAY,WAAO,IAAD,IACjC+N,GAAc,GAEV/Q,SAASoR,gBAAkBF,EAASrJ,UAIxC,UAAAqJ,EAASrJ,eAAT,SAAkBwJ,QAClB,UAAAH,EAASrJ,eAAT,SAAkByJ,kBAAkB/N,EAAM5F,OAAQ4F,EAAM5F,WACvD,CAAC4F,IAEEgO,EAAgBvO,uBAAY,WAChCiO,EAAQV,MACP,IAEGiB,EAAWxO,uBAAY,WAE3B,MAAM,iBAAN,OADsB8N,EAAa,0BAA4B,GAC/D,YAAyCE,KACxC,CAACF,EAAYE,IAEVS,EAAazO,uBACjB,SAACC,GACC,GAAgC,UAA5BA,EAAMI,IAAIqO,cAMd,GAFAzO,EAAM0O,iBAEFX,IAASV,GAAb,CAKA,IAAMsB,EAAW3O,EAAMW,OAAOL,MAE1BN,EAAM4O,QAAU5O,EAAM6O,QACxBjB,EAAS,GAAD,OAAIe,EAAJ,QAIVf,EAASe,GACTX,EAAQX,UAZNW,EAAQV,MAcZ,CAACS,IAGH,OAAOzL,mBACL,kBACE,mCACE,sBAAKgM,cAAeA,EAAe3L,QAASlB,EAAUmB,UAAW2L,IAAjE,UACE,+BAAOjO,IACP,0BACEwO,IAAKb,EACL3N,MAAOA,GAAS,GAChByO,QAAStN,EACT+M,WAAYA,EACZrJ,SAAUA,EACVpC,OAAQA,WAKhB,CAACuL,EAAe7M,EAAU8M,EAAUjO,EAAOkO,EAAYrJ,EAAUpC,K,0DClFxDiM,GAAqD,SAAC,GAO5D,IANLC,EAMI,EANJA,cACA7L,EAKI,EALJA,SAKI,IAJJ8L,wBAII,MAJejW,EAAsBkW,KAIrC,EAHJC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEMC,EAAaxP,uBACjB,SAACyP,EAAmBnG,EAAYoG,GAC9B,IAAMC,EAAyB,IAAdF,EAAkB,eAAiB,YAC9C9B,EAASuB,EAAcU,WAAWH,GAkBlCI,EACU,IAAdJ,EACE,mCAAGC,EAAW,IAEd,cAAC,EAAD,CAASvM,MAnBkB,kBAAzB,OAAOwK,QAAP,IAAOA,OAAP,EAAOA,EAAQxK,OACjB,OAAOwK,QAAP,IAAOA,OAAP,EAAOA,EAAQxK,MAEVmC,EAgBuBiF,uBAVf,SAACpH,GACZwK,EAAOrG,YALI,SAACnE,GAAmB,IAAD,EAC5B,OAANwK,QAAM,IAANA,GAAA,UAAAA,EAAQrG,gBAAR,cAAAqG,EAAmBxK,GACnB+L,EAAcU,WAAWH,GAAWtM,MAAQA,EAI1CmE,CAASnE,GACM,OAAfoM,QAAe,IAAfA,KAAkBL,EAAcvS,WAOhC,SACE,mCAAG2M,EAAKwG,OAAO,YAIrB,OACE,wBAACC,GAAA,EAAD,2BACMb,EAAcc,WAAWP,EAAWC,IAD1C,IAEErP,IAAG,UAAKiP,EAAahG,EAAKqE,QAAvB,YAAkC8B,GACrCjP,yBAAwB,qBAAuBiP,EAC/C5M,UAAS,UAAK8M,KAEbE,KAIP,CAACP,EAAcC,EAAiBL,IAG5Be,EAAgBjQ,uBACpB,SAAChF,EAAU0U,GACT,IAAMQ,EAAQ,2BAAQlV,EAAImV,eAAZ,IAA2BlN,MAAO,KAChD,OACE,wBAACmN,GAAA,EAAD,yBACEvN,UAAU,aACNqN,GAFN,IAGE7P,IAAG,UAAKgP,EAAUrU,GAAf,YAAuB0U,GAC1BtO,OAAQ,kBAAoBsO,IAE3B1U,EAAI4N,MAAMR,KAAI,SAACkB,EAAYmG,GAAb,OAAmCD,EAAWC,EAAWnG,EAAMoG,SAIpF,CAACL,EAAWG,IAGRa,EAAoB9N,mBACxB,kBACE,eAAC6N,GAAA,EAAD,CAAIvN,UAAU,yBAAd,UACE,cAACkN,GAAA,EAAD,CAAIO,KAAK,OAAOzN,UAAU,aAA1B,SACE,yBAFJ,OAIGQ,QAJH,IAIGA,OAJH,EAIGA,EAAU+E,KAAI,SAACtH,EAAOyP,GACrB,OACE,cAACR,GAAA,EAAD,CAAIO,KAAK,OAAwBzN,UAAU,wBAA3C,SACG/B,GADkByP,WAO7B,CAAClN,IAGH,OACE,eAACmN,GAAA,EAAD,yBACE3N,UAAS,UAAKsM,IAAqBjW,EAAsBuX,KAAO,iBAAmB,KAC/EvB,EAAcwB,qBAFpB,cAIGxB,EAAcxQ,KAAK0J,KAAI,SAACpN,EAAU0U,GAEjC,OADAR,EAAcyB,WAAW3V,GAClBiV,EAAcjV,EAAK0U,MAE3BrM,EAAWgN,EAAoB,U,iDCvGzBO,GAAmE,SAAC,GAI1E,IAHLC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,YAEA,OACE,cAACC,GAAA,EAAD,CACE5P,OAAO,gCACPyB,UAAU,qBACVnB,SAAU,SAACzB,EAAOgR,GAAR,OAAmBF,EAAYE,IAH3C,SAKGJ,EAAqBzI,KAAI,SAAC8I,GAAD,OACxB,cAACC,GAAA,EAAD,CAEEC,MAAOF,EAAexX,MACtBmJ,UACE/H,QAAQoW,EAAevX,OAAO,SAAC0X,GAAD,OAAgBvW,WAAWgW,EAAmBO,EAAUtX,SAClF,8BACA,GANR,SASE,cAACuX,GAAA,EAAD,UACGJ,EAAevX,MAAMyO,KAAI,SAACiJ,GAAD,OACxB,cAACE,GAAA,EAAD,CACE/Q,yBAAwB,iCAAmC6Q,EAAUzX,KAErEqX,OAAQI,EAAUtX,KAClByX,YAAa1W,WAAWgW,EAAmBO,EAAUtX,MAJvD,SAMGsX,EAAUzX,MAJNyX,EAAUtX,YAZhBmX,EAAexX,aCmBjB+X,GAA2D,SAAC,GAelE,IAdLC,EAcI,EAdJA,gBACAC,EAaI,EAbJA,aACAC,EAYI,EAZJA,mBACAC,EAWI,EAXJA,qBACAC,EAUI,EAVJA,UACAC,EASI,EATJA,aACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,iBACAC,EAMI,EANJA,oBACAC,EAKI,EALJA,mBACAtB,EAII,EAJJA,qBACAuB,EAGI,EAHJA,8BAGI,IAFJC,8BAEI,MAFqB,iBAAO,IAE5B,EADJ9C,EACI,EADJA,gBAEM5K,EAAgBpF,qBAAW4E,GAEjC,EAA4CvE,mBAASgS,EAAmBU,eAAiBV,GAAzF,mBAAOW,EAAP,KAAuBC,EAAvB,KACA,EAAgD5S,mBAASiS,GAAzD,mBAAOY,EAAP,KAAyBC,EAAzB,KAEAxN,qBAAU,WACRsN,EAAkBZ,EAAmBU,eAAiBV,KACrD,CAACA,IAEJ1M,qBAAU,WACRwN,EAAoBb,KACnB,CAACA,IAEJ,IAAMc,EAAe,SAAoBC,EAAelF,EAAezH,GAAlD,4BAChB2M,EAASrM,MAAM,EAAGmH,IADF,CAEnBzH,GAFmB,YAGhB2M,EAASrM,MAAMmH,MAGdmF,EAAc,SAAoBD,EAAelF,EAAezH,GAAlD,4BACf2M,EAASrM,MAAM,EAAGmH,EAAQ,IADX,CAElBzH,GAFkB,YAGf2M,EAASrM,MAAMmH,EAAQ,MAStBoF,EAAW,SAAoBF,EAAelF,GAAnC,4BACZkF,EAASrM,MAAM,EAAGmH,IADN,YAEZkF,EAASrM,MAAMmH,EAAQ,MAStBqF,EAAqF/S,uBACzF,SAACtF,EAAWsY,GACV,IAAMpY,EAAa,UAAM8W,EAAgBsB,IAAtB,OAAmCtY,GAEtD,OADgCI,OAAOmY,GAAsBtB,EAAa9M,SAAU,CAAEqO,SAAUtY,IAC/DmY,EAAgCrY,EAAY,EAAGsY,GAAapY,IAE/F,CAAC8W,EAAiBC,IAGdwB,EAAgCnT,uBAAY,SAACrD,EAAmBqW,GAAuB,IAAD,EAE1F,iBAD2BlY,UAAU6B,GAAS,SAACgR,GAAD,OAA4BA,EAAOqF,aACvDA,UAA1B,aAAO,EAA+BrY,SACrC,IAEGyY,EAA8BpT,uBAAY,WAC9C,IAAMgT,EAAYT,EAAeS,UAC3BxK,EAAa+J,EAAe/J,WAC5B7L,EAAUsW,GAAsBtB,EAAa9M,SAC7CwO,EAAgBL,EAAYG,EAA8BxW,EAASqW,GAAa,EAAIrW,EAAQhC,OAC5F2Y,EAA0BP,EAAgCM,EAAeL,GAE/E,OAAO,yBACLE,SAAUI,EACVlC,MAAOkC,GACHf,EAAenX,SAAW,CAAEA,SAAUhC,EAASoL,WAAc,IAHnE,IAIE+O,eAAgBhB,EAAegB,eAC/BP,YACAxK,iBAED,CAACuK,EAAiCI,EAA+BZ,EAAgBZ,IAG9E6B,EAAwBxT,uBAAY,WACxCuP,EAAgB,YAAIoC,EAAa9M,UACjCkN,EAAa,YAAID,EAAUjN,YAC1B,CAAC0K,EAAiBwC,EAAcJ,EAAcG,IAE3C2B,EAAyBzT,uBAC7B,SAACqR,GACC,IAAMhO,EAAYvI,OAAO6W,EAAa9M,QAAS6O,GAAyBnB,IACrE5V,QACC0U,IAAcsB,EAChBtP,EAAUsQ,QAAQP,KACT/B,IAAcwB,GACvBxP,EAAUkG,KAAK6J,OAGnB,CAACA,EAA6Bb,EAAgBZ,IAG1CiC,EAAsB,SAACvC,GAC3B,GAAIkB,EAAe/I,OAAQ,CACzB,IAAMA,EAAS1O,OAAO6W,EAAa9M,QAAS6O,GAAyBnB,EAAe/I,SACpFA,EAAO7M,QAAU0U,EACf7H,EAAO7M,QACP7B,YAAY0O,EAAO7M,QAAS+W,GAAyBnB,IACrDa,UAGEb,EAAesB,yBAA2B/Y,UAAUyX,EAAe5V,SACrE8W,EAAuBpC,GAEvBM,EAAa9M,QAAUwM,EACrBM,EAAa9M,QACb/J,YAAY6W,EAAa9M,QAAS6O,GAAyBnB,IAC3Da,KAINI,KAGIM,EAAoB9T,uBACxB,SAAC+T,GACC,OAAQA,GACN,KAAK5a,EAAe6a,iBAClBJ,EAAoBjB,GACpB,MACF,KAAKxZ,EAAe8a,kBAClBL,EAAoBf,GACpB,MACF,KAAK1Z,EAAe+a,aAClBN,EAAoBd,GACpB,MACF,KAAK3Z,EAAea,eAClB+X,EAAaY,EAAab,EAAUjN,QAAS4N,EAAkBT,MAC/D,MACF,KAAK7Y,EAAee,eAClB6X,EAAac,EAAYf,EAAUjN,QAAS4N,EAAkBT,MAC9D,MACF,KAAK7Y,EAAeiB,UAClB2X,EAAae,EAAShB,EAAUjN,QAAS4N,IACzC,MACF,KAAKtZ,EAAemB,SAClByX,GApG4Ba,EAoGPd,EAAUjN,QApGY6I,EAoGH+E,EApGhC,sBACXG,EAASrM,MAAM,EAAGmH,IADP,CAEd2E,EAAuBO,EAASlF,KAFlB,YAGXkF,EAASrM,MAAMmH,EAAQ,OAkGpB,MACF,KAAKvU,EAAegb,aAClBpC,EAlHe,SAAoBa,EAAelF,GAAnC,4BAClBkF,EAASrM,MAAM,EAAGmH,EAAQ,IADR,CAErB5S,YAAY8X,EAASlF,KAFA,YAGlBkF,EAASrM,MAAMmH,EAAQ,KA+GP0G,CAAetC,EAAUjN,QAAS4N,IAvGvC,IAAoBG,EAAelF,EAyG/CwE,GAAoB,KAGtB,CACEkB,EACAI,EACAxB,EACAD,EACAU,EACAP,EACAP,EACAG,IAQEvY,EAA0BgJ,mBAAQ,WACtC,OALyC,SACzCsO,GADyC,OAEK/V,UAAU+V,GAGpDwD,CAAmCxD,GAC9BA,EAEFA,GAAmC,OAAd0B,QAAc,IAAdA,OAAA,EAAAA,EAAgBS,YAAa,MACxD,CAACnC,EAAD,OAAuB0B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAgBS,YAE1C,OAAOzQ,mBACL,0BACE,cAACqB,EAAA,EAAD,CACEf,UAAU,gBACVyR,cAAY,EACZC,WAAW,EACXzQ,SAAU,EACVD,SAAU,QACV2Q,UAAWvC,EACXwC,YAAa,kBAAMvC,GAAoB,IACvCwC,WAAY,SAACC,GAAD,cAAkBA,QAAlB,IAAkBA,OAAlB,EAAkBA,KAC9B3Q,UAAW,kBAAMmO,GACjB1O,SAAQ,oBAAEkB,EAAcC,gCAAhB,aAAE,EAAwCC,eAA1C,aAAqDC,EAC7DZ,YACE,cAAC,GAAD,CACE2M,qBAAsBtX,EACtBuX,kBAAmBsB,EACnBrB,YAAa+C,QAKrB,CACE7B,EACAtN,EAAcC,yBACdrL,EACA6Y,EACA0B,EACA5B,EACAC,K,yCCpOOyC,GAAyD,SAAC,GAUhE,IATL1F,EASI,EATJA,cACA4C,EAQI,EARJA,UACAC,EAOI,EAPJA,aACA8C,EAMI,EANJA,gBAMI,IALJ1F,wBAKI,MALejW,EAAsBkW,KAKrC,EAJJ0F,EAII,EAJJA,oBACAxF,EAGI,EAHJA,aACAqC,EAEI,EAFJA,aACApC,EACI,EADJA,gBAEMwF,EAA4D/U,uBAChE,SAACgT,GACC,OAAIlY,WAAW+Z,IAAoB/Z,MAAM+Z,EAAiB7B,GACjD6B,EAAgB7B,GAEM,kBAApB6B,EACFA,OADT,IAIF,CAACA,IAGGG,EAAyBhV,uBAC7B,SAACiV,EAAwBC,GAAzB,OACEnD,EACEjX,MAAMgX,EAAUjN,SAAS,SAACsQ,GACxB,IAAMC,EAAoBD,EAAWF,GAGrC,cAFOE,EAAWF,GAClBE,EAAWD,GAAiBE,EACrBD,QAGb,CAACpD,EAAcD,IAMXuD,EAGsErV,uBAC1E,SAAC2N,EAAQ2H,GACP,OAAO,YAA8B,IAAD,IAA1B1b,YAA0B,MAAnB,GAAmB,EAAfwB,EAAe,EAAfA,SACb6Z,EAAiBtH,EAAOyD,MAC1BmE,EAAiB5D,EAAa9M,QAAQyQ,GAC1C,GAAI3H,EAAOzH,MAAQ,EAAG,CACpB,IAAMsP,EAAa7H,EAAOnE,OAAQzF,GAC5B0R,EAAiB3a,OAAO6W,EAAa9M,QAAS,CAAEqO,SAAUsC,IAAiC7Y,QACjG4Y,EAAiBza,OAAO2a,EAAe,CAAEvC,SAAU+B,IAErDM,EAAenE,MAAQxX,EACvB2b,EAAerC,SAAWtZ,EAC1B2b,EAAena,SAAWA,EAC1BmU,EAAgB,YAAIoC,EAAa9M,UAC7BjL,IAASqb,GACXD,EAAuBC,EAAgBrb,MAI7C,CAAC2V,EAAiBoC,EAAcqD,IAG5BU,EAAmB1V,uBACvB,SAAC2N,EAAwB2H,GAAzB,sBACKhG,EAAa3B,GADlB,aAC6B,UAAAA,EAAOnE,cAAP,eAAezF,KAAM,GADlD,YACwDuR,KACxD,CAAChG,IAGGqG,EAAoB3V,uBACxB,SAAC2N,EAAwB2H,GAAzB,OACE,wBAACM,GAAA,EAAD,2BACMjI,EAAOkI,kBADb,IAEEhT,UAAU,iCACVxC,IAAKqV,EAAiB/H,EAAQ2H,KAE9B,qBAAKzS,UAAU,cAAciT,2BAAyB,2BAAtD,SACGnI,EAAOyD,WAId,CAACsE,IAGGK,EAAsB/V,uBAC1B,SAAC2N,EAAwB2H,GACvB,OAAI3H,EAAO4F,eAEP,cAAC,EAAD,CACEhT,MAAOoN,EAAOyD,MACdpP,aAAc,SAACzB,GAAD,OAAW8U,EAA6B1H,EAAQ2H,EAArCD,CAAkD,CAAEzb,KAAM2G,OAIlF,mBAAGsC,UAAU,qBAAb,SAAmC8K,EAAOyD,UAEnD,CAACiE,IAGGW,EAAuBhW,uBAC3B,SAAC2N,EAAQ2H,GAAT,OACE,sBAAKzS,UAAU,mBAAmBiT,2BAAyB,qCAA3D,UACGnI,EAAOsI,kBAAoBtI,EAAOsI,kBAAoBF,EAAoBpI,EAAQ2H,GAClF3H,EAAOvS,SAAW,oBAAGyH,UAAU,+BAAb,cAA8C8K,EAAOvS,SAArD,OAAsE,UAG7F,CAAC2a,IAGGxL,EAAyBvK,uBAC7B,SAAC2N,EAAQuI,GACP,IAAMC,EAAkBxI,EAAO2E,eAAiB3E,EAC5C4H,EAAiBza,OAAO6W,EAAa9M,QAAS6O,GAAyByC,IACvExI,EAAOnE,SACT+L,EAAiBza,OACfmY,GAAsBtB,EAAa9M,SACnC6O,GAAyB/F,KAG7B4H,EAAepS,MAAQ+S,EACvB3G,EAAgBoC,EAAa9M,WAE/B,CAAC0K,EAAiBoC,IAGdyE,EAA4BpW,uBAChC,SAAC2N,EAAQ2H,GAAiB,IAAD,EACjBe,EAAW,2BACZ1I,EAAOkI,kBADK,IAEf5S,MAAO,KAEHqT,EAAUpH,EAAcqH,WAAW5I,EAAQ2H,GAC3CnS,EAAQwK,EAAOxK,OAASmC,EACxBkR,GAAY,UAAA7I,EAAOhR,eAAP,eAAgBhC,QAAS,IAAK,EAmBhD,OACE,wBAACib,GAAA,EAAD,uCAAQS,GAAiBC,GAAzB,IAAkCzT,UAlBhB,WAClB,IAAM2F,EAAa,GAanB,OAZKmF,EAAOvS,UACVoN,EAAWe,KAAK,qBAEdiN,GACFhO,EAAWe,KAAK,kBAEdoE,EAAO2E,gBACT9J,EAAWe,KAAKoE,EAAO2E,cAAc9J,YACrCA,EAAWe,KAAKoE,EAAO2E,cAAcU,YAEvCxK,EAAWe,KAAKoE,EAAOqF,WAAa,IACpCxK,EAAWe,KAAKoE,EAAOnF,YAAc,IAC9BA,EAAWiO,KAAK,KAIsBC,GAAerW,IAAKqV,EAAiB/H,EAAQ2H,KACxF,cAAC,EAAD,CAASnS,MAAOA,EAAOoH,uBAAwB,SAAC2L,GAAD,OAAiB3L,EAAuBoD,EAAQuI,IAA/F,SACE,qBAAKrT,UAAU,cAAciT,2BAAyB,2BAAtD,SACGnI,EAAOvS,SACN,cAAC,EAAD,CACEoI,MAAOuR,EAAepH,EAAOqF,WAC7BvO,uBAAwBkJ,EAAOyD,MAC/B3R,iBAAkBkO,EAAOvS,SACzBsJ,mBAAoB,SAACiS,GAAD,OAAgBtB,EAA6B1H,EAAQ2H,EAArCD,CAAkDsB,IAJxF,SAOGX,EAAqBrI,EAAQ2H,IAFzBI,EAAiB/H,EAAQ2H,IAKhCU,EAAqBrI,EAAQ2H,UAOzC,CACEI,EACAX,EACAM,EACA9K,EACAyL,EACA9G,IAIE0H,EAAe5W,uBACnB,SAAC2N,EAAwB2H,GAAzB,OACE3H,EAAOkJ,cAAgBlB,EAAkBhI,EAAQ2H,GAAec,EAA0BzI,EAAQ2H,KACpG,CAACK,EAAmBS,IAGhBU,EAAkB9W,uBACtB,SAACkP,GACC,OAAO4F,EAAsBha,YAAYoU,EAAc6H,cAAgB7H,EAAc6H,eAEvF,CAACjC,IAGGkC,EAAqBzU,mBACzB,kBACEuU,EAAgB5H,GAAe9G,KAAI,SAAC6O,GAClC,iCAA+BA,EAAYC,uBAA3C,IAAkEjU,MAAO,KAAjE5C,EAAR,EAAQA,IAAQW,EAAhB,mBACA,OACE,cAACoP,GAAA,EAAD,2BAAkBpP,GAAlB,aACGiW,EAAYE,QAAQ/O,KAAI,SAACuF,EAAwB2H,GAAzB,OACvBsB,EAAajJ,EAAQ2H,QAFhBjV,QAOf,CAACyW,EAAiBF,EAAc1H,IAG5BkI,EAA8BpX,uBAClC,SAACqX,GAAD,OACE,cAACjH,GAAA,EAAD,UACGtV,MAAMoU,EAAc6H,aAA+BM,GAAQF,QAAQ/O,KAClE,SAACuF,EAAwB2H,GAAzB,OAAiDsB,EAAajJ,EAAQ2H,UAI5E,CAACsB,EAAc1H,EAAc6H,eAG/B,OAAQ5H,GACN,KAAKjW,EAAsBkW,KACzB,OAAO,cAACkI,GAAA,EAAD,CAAOC,QAAM,EAAb,SAAeP,IACxB,KAAK9d,EAAsBse,UACzB,OAAO,cAACF,GAAA,EAAD,CAAOC,QAAM,EAAb,SAAeH,GAA6B,KACrD,KAAKle,EAAsBue,kBACzB,OAAO,cAACH,GAAA,EAAD,CAAOC,QAAM,EAAb,SAAeH,GAA6B,KACrD,QACE,OAAO,OC9OAnE,GAAoG,SAApGA,EACXtW,GAD+G,IAE/GuJ,EAF+G,uDAEvG,EAFuG,OAI/GpL,UAAU6B,GAAS,SAACgR,GAClB,OAAI7S,MAAM6S,EAAQ,WACTzH,EAAQ,EAAI+M,EAAsBtF,EAAOhR,QAAUuJ,EAAQ,GAAKyH,EAAOhR,QAEzEgR,MAGE+F,GAAqG,SAChH/F,GAEA,IAAM+J,EAAW/J,EAAOgK,YAAchK,EAAO5J,IAAM4J,EAAOuF,SAC1D,OAAO,SAAC0E,GACN,OAAOA,EAAgB7T,KAAO2T,GAAYE,EAAgB1E,WAAawE,IAI9DG,GAA6C,SAAC,GAmBxC,IAlBjBC,EAkBgB,EAlBhBA,QACAzU,EAiBgB,EAjBhBA,SAiBgB,IAhBhBqO,uBAgBgB,MAhBE,iBAAM,WAgBR,EAfhBmD,EAegB,EAfhBA,gBACAtF,EAcgB,EAdhBA,gBACAwC,EAagB,EAbhBA,aAagB,IAZhBC,mBAYgB,MAZF,iBAAO,IAYL,MAXhB+F,sBAWgB,MA1CY,IA0CZ,EAVhBC,EAUgB,EAVhBA,YACAtZ,EASgB,EAThBA,KACA/B,EAQgB,EARhBA,QACAkU,EAOgB,EAPhBA,qBACA1B,EAMgB,EANhBA,iBAMgB,IALhB8I,oBAKgB,MALD,EAKC,MAJhBnD,2BAIgB,aAHhBzF,iBAGgB,MAHJ,SAACrU,GAAD,OAASA,EAAI+I,IAGT,MAFhBuL,oBAEgB,MAFD,SAAC3B,GAAD,OAAYA,EAAO5J,IAElB,EADhBsO,EACgB,EADhBA,uBAEM6F,EAAW/J,iBAAyB,MAEpCxJ,EAAgBpF,qBAAW4E,GAEjC,EAA0DvE,mBAASmY,GAAnE,mBAAOI,EAAP,KAA8BC,EAA9B,KAEMC,EAAmGrY,uBACvG,SAAC2N,EAAQsK,GACgB,IAAD,EAAlBA,EAAe,IACjBnd,SAAS6S,EAAQ,CACfhR,QAAS,CACP,CACEyU,MAAOjC,IAAqBjW,EAAsBkW,KAtD/B,IAsDiE+I,EACpFjF,SAvDmB,IAwDnBvP,SAAU,GACVR,MAAO,GACPmV,iBAAiB,EACjBzB,eAAe,EACf0B,YAAY,OAKlB,OAAI5K,QAAJ,IAAIA,GAAJ,UAAIA,EAAQhR,eAAZ,aAAI,EAAiBhC,SACnB0d,EAAyC1K,EAAOhR,QAAQ,GAAIsb,EAAe,MAIjF,CAACE,EAAuBhJ,IAGpBqJ,EAA6BxY,uBACjC,SAACmY,EAA6Cxb,GAC5C,IAAM8b,EAAqB,CACzBrH,MAAO+G,EACPjF,SA9EsB,IA+EtB/P,MAAO,GACPQ,SAAU,GACVkT,eAAe,GAGjB,OADAwB,EAAyCI,EAAoBR,GACvD,CAAEQ,GAAR,mBAA+B9b,MAEjC,CAAC0b,EAA0CJ,IAGvCtG,EAAexD,iBAAiBqK,EAA2BL,EAAuBxb,IAClFmV,EAAY3D,iBAAqBzP,GACvC,EAAgDkB,oBAAS,GAAzD,mBAAOqS,EAAP,KAAyBC,EAAzB,KACA,EAAoDtS,mBAAS5C,SAASuG,MAAtE,mBAAO4O,EAAP,KAA2BuG,EAA3B,KACA,EAA0E9Y,mBACxE9E,SAAS3B,GAAgBiP,KAAI,SAACiJ,GAAD,OAAe5E,SAAS4E,EAAUsH,gBADjE,oBAAOvG,GAAP,MAAsCwG,GAAtC,MAGA,GAAoDhZ,mBAAS,IAA7D,qBAAOgS,GAAP,MAA2BiH,GAA3B,MACA,GAAwDjZ,oBAAU,GAAlE,qBAAOiS,GAAP,MAA6BiH,GAA7B,MAEA5T,qBAAU,WACRyM,EAAa9M,QAAU2T,EAA2BT,EAAgBpG,EAAa9M,QAAQ0B,MAAM,IAC7F6R,EAAyBL,KACxB,CAACA,EAAgBS,IAEpBtT,qBAAU,WACRyM,EAAa9M,QAAU2T,EAA2BL,EAAuBxb,KAGxE,CAACA,IAEJuI,qBAAU,WACR4M,EAAUjN,QAAUnG,IAGnB,CAACA,IAEJ,IAAMqa,GAA0B/Y,uBAC9B,SAACrD,GACCgV,EAAa9M,QAAUlI,EACR,OAAf4S,QAAe,IAAfA,KAAkB5S,EAAQ4J,MAAM,MAElC,CAACgJ,IAGGyJ,GAAuBhZ,uBAC3B,SAACtB,GACCoT,EAAUjN,QAAUnG,EACR,OAAZqT,QAAY,IAAZA,KAAerT,KAEjB,CAACqT,IAGGnE,GAAe5N,uBACnB,SAAC0P,EAAkBgI,EAAkBnX,GACnC,IAAM0Y,EAAiB,YAAOnH,EAAUjN,SACxCoU,EAAkBvJ,GAAUgI,GAAYnX,EACxCyY,GAAqBC,KAEvB,CAACD,KAGGE,GAAclZ,uBAClB,SAAC0P,EAAkByJ,GACjB,IAAMC,EAAW,YAAOtH,EAAUjN,SAClCuU,EAAY1J,GAAYyJ,EACxBH,GAAqBI,KAEvB,CAACJ,KAGGK,GAAgB,CACpBrT,KAAMhG,uBAAY,SAACsZ,GACjB,IAAM3L,EAAS2L,EAAQ3L,OACvB,OAAIA,EAAOkJ,cACFyC,EAAQ/Y,MAERyX,EAAcA,EAAYrK,EAAO5J,IAAIuV,GAAW9L,GAAa8L,KAIrE,KAGCC,GAAyB,SAAC3Y,GAC9B,IAAM4Y,EAAkC5Y,EAAOmG,QAAQ,WAAamR,EAASrT,QACvE4U,GAAiC7Y,EAAO6F,UAAU8B,SAtKjB,yBAuKvC,OAAOiR,GAAmCC,GAGtCC,GAA0B,SAAC9Y,EAAqB+M,GAA4B,IAAD,IAC/E+K,EAAsB9X,GACtB,UAAA+D,EAAcgV,sCAAd,cAAAhV,GAA+C,GAC/CuN,GAAoB,GACpB,UAAAvN,EAAciV,yCAAd,cAAAjV,GAAkD,kBAAMuN,KACxD2G,GAAsBlL,IAYlBkM,GAAqB,SAACvE,GAC1B,OAAOA,EAAc,GAVqB,SAACA,GAAyB,IAAD,EAC7DwE,EAAqB7G,GAAsBtB,EAAa9M,SACxDkV,EAAyB,UAAID,EAAmBxE,UAAvB,aAAG,EAAqDtC,UACjFgH,EAAqBlf,UAAUgf,GAAoB,SAACnM,GAAD,OAA4BA,EAAOqF,aAC5F,OAAO+G,EACHC,EAAmBD,GAA2Bpf,OAAS,EACvDgX,EAAa9M,QAAQlK,OAAS,EAIRsf,CAAoC3E,IAG1D4E,GAAsB,SAAC5E,GAAD,OACV,IAAhBA,EACI,GADJ,CAGMnc,EAAe6a,iBACf7a,EAAe8a,mBAJrB,mBAKU4F,GAAmBvE,GAAe,CAACnc,EAAe+a,cAAgB,MAsCxEhF,GAAgBiL,oBACpB,CACExd,QAASgV,EAAa9M,QACtB0H,KAAMuF,EAAUjN,QAChBwU,iBACAzL,gBACAsL,eACA3C,WA1Ce,SAAC5I,GAAD,MAA6B,CAC9CyM,cAAe,SAAC1Z,GACd,IAAM4U,EAAcxa,YAClBmY,GAAsBtB,EAAa9M,QAAS8I,EAAOzH,OACnDwN,GAAyB/F,IAErB/M,EAASF,EAAEE,OACXyZ,GAA8B1M,EAAO2M,uBACvCf,GAAuB3Y,IAAWyZ,IACpC3Z,EAAEiO,iBACFiK,GAAiCsB,GAAoB5E,IACrDoE,GAAwB9Y,EAAQ+M,OAgClCqC,WA3Be,SAACsF,EAAqB5F,GAAtB,MAA4C,CAC7D0K,cAAe,SAAC1Z,GACd,IAAME,EAASF,EAAEE,OACb2Y,GAAuB3Y,KACzBF,EAAEiO,iBACFiK,GAAiC,GAAD,mBAC3BsB,GAAoB5E,IADO,CAE9Bnc,EAAea,eACfb,EAAee,gBAHe,YAI1B4X,EAAUjN,QAAQlK,OAAS,EAAI,CAACxB,EAAeiB,WAAa,IAJlC,CAK9BjB,EAAemB,SACfnB,EAAegb,gBAEjBuF,GAAwB9Y,EAAQqS,GAAsB/D,GAAcvS,QAASsb,GAAc3C,IAC3FwD,GAAwBpJ,QAe5B6K,kBACAC,qBAGF,OACE,sBAAK3X,UAAS,0BAAqBiV,GAAnC,UACE,eAAC2C,GAAA,EAAD,yBAAiBpZ,QAAQ,WAAc6N,GAAcwL,iBAArD,IAAsE3L,IAAKmJ,EAA3E,UACE,cAAC,GAAD,CACEhJ,cAAeA,GACf2F,gBAAiBA,EACjB1F,iBAAkBA,EAClB2F,oBAAqBA,EACrBhD,UAAWA,EACXC,aAAciH,GACdrH,aAAcA,EACdrC,aAAcA,EACdC,gBAAiBwJ,KAEnB,cAAC,GAAD,CACE7J,cAAeA,GACfG,UAAWA,EACXC,aAAcA,EACdC,gBAAiBwJ,GACjB5J,iBAAkBA,EALpB,SAOG9L,QAGJ4O,GAAoBpB,EACnB,cAAC,GAAD,CACEc,aAAcA,EACdD,gBAAiBA,EACjBb,qBAAsBA,EACtBe,mBAAoBA,GACpBC,qBAAsBA,GACtBC,UAAWA,EACXC,aAAciH,GACdhH,YAAaA,EACbC,iBAAkBA,EAClBC,oBAAqBA,EACrBE,8BAA+BA,GAC/BD,mBAAoBA,EACpBE,uBAAwBA,EACxB9C,gBAAiBwJ,KAEjB,SC/SG4B,GAAqE,SAAC,GASpD,IAR7Bpf,EAQ4B,EAR5BA,IAQ4B,IAP5Bqf,eAO4B,MAPlB,GAOkB,MAN5Bxf,gBAM4B,MANjBhC,EAASoL,UAMQ,MAL5B5K,YAK4B,MALrBwK,EAKqB,EAJ5ByW,EAI4B,EAJ5BA,0BAI4B,IAH5BC,kBAG4B,SAF5BC,EAE4B,EAF5BA,8BACA5X,EAC4B,EAD5BA,MAIA,EAA4CvD,mBAAiBhG,GAA7D,mBAAOoL,EAAP,KAAuBC,EAAvB,KACA,EAAoDrF,mBAAmBxE,GAAvE,mBAAO4f,EAAP,KAA2BC,EAA3B,KACMC,EAA2B/M,iBAAeyM,GAC1CO,EAAyBhN,iBAAehL,GALzB,KAOfiY,EAAoCpb,uBAAY,WAAO,IAAD,IACpDqb,EAA4C,aAChD9f,MACA3B,KAAMoL,EACN5J,SAAU4f,EACVM,UAAW5f,EAAUif,kBACrBC,QAASM,EAAyBrW,SAC7BiW,GAdY,MAcEK,EAAuBtW,QAEtC,GADA,CAAE1B,MAAOgY,EAAuBtW,UAGtCiW,EAAU,OACNC,QADM,IACNA,KAAgCM,GAD1B,UAENE,OAAOC,cAFD,iBAEN,EAAeC,4CAFT,OAEN,SAAsDJ,KACzD,CAACL,EAAoBhW,EAAgB8V,EAAYC,EAA+Bxf,IAE7EmJ,EAAqB1E,uBACzB,YAAiF,IAAD,IAA7E5E,gBAA6E,MAAlEhC,EAASoL,UAAyD,MAA9C5K,YAA8C,MAAvCwK,EAAuC,EAC9Ea,EAAkBrL,GAClBqhB,EAAsB7f,GACG,OAAzByf,QAAyB,IAAzBA,KAA4BjhB,EAAMwB,GAClCggB,MAEF,CAACP,EAA2BO,IAGxBM,EAAkB1b,uBACtB,SAACO,GACC2a,EAAyBrW,QAAUtE,EACnC6a,MAEF,CAACA,IAGG7Q,EAAyBvK,uBAC7B,SAACmD,GACCgY,EAAuBtW,QAAU1B,EACjCiY,MAEF,CAACA,IAGGO,EAAiC3b,uBACrC,SAACiG,GAAD,OACE,cAAC,EAAD,CACE9C,MAAOgY,EAAuBtW,QAC9BlB,SArDe,IAsDf4G,uBAAwBA,EAH1B,SAKGtE,MAGL,CAACsE,IAGGqR,EAAgCrZ,mBAAQ,WAC5C,OACE,qBAAKM,UAAU,4BAAf,SACG8Y,EACC,cAAC,EAAD,CACElX,uBAAwBO,EACxBvF,iBAAkBub,EAClBtW,mBAAoBA,EAHtB,SAKE,sBAAK7B,UAAU,kBAAf,UACE,mBAAGA,UAAU,qCAAb,SAAmDmC,IACnD,oBAAGnC,UAAU,0CAAb,cAAyDmY,EAAzD,iBAMT,CAACA,EAAoBhW,EAAgBN,EAAoBiX,IAEtDE,EAAiBtZ,mBACrB,kBACE,cAAC,GAAD,CACEhC,MAAO2a,EAAyBrW,QAChC7J,IAAK,CAAE0S,MAAO,GACdC,OAAQ,CAAE5J,GAAE,OAAExI,QAAF,IAAEA,IAAO,KACrBqS,aAAc,SAACkO,EAASC,EAAWxb,GAArB,OAA+Bmb,EAAgBnb,QAGjE,CAACmb,EAAiBngB,IAQpB,OALA2J,qBAAU,WAERkW,MACC,CAACA,IAGF,sBAAKvY,UAAU,qBAAf,UACIiY,EAA6C,KAAhCc,EACf,qBAAK/Y,UAAU,0BAAf,SAA0CgZ,QC/GnCG,I,OAA6E,SACxFhb,GACI,IAAD,IACG2D,EAAgBpF,qBAAW4E,GAE3BjE,EAAYiO,iBAAOnN,EAAMib,UAE/B,EAAoCrc,oBAAS,GAA7C,mBAAOsc,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBpc,uBAAY,SAACkB,GAAD,OAAYib,EAAcjb,KAAS,IAEhEQ,EAAW1B,uBACf,SAACC,EAAOoc,GAAsB,IAAD,EAC3BF,GAAc,GACdjc,EAAU2E,QAAUwX,EACpB,UAAArb,EAAM+Z,qCAAN,cAAA/Z,EAAK,2BACAA,GADA,IAEHib,SAAUI,OAGd,CAACrb,IAGGsb,EAAatc,uBAAY,WAC7B,OAAOlF,MAAMkG,EAAMsb,cAAc,SAACjc,GAAD,OAC/B,cAACC,EAAA,EAAD,CAAwBC,MAAOF,EAAKG,yBAAwBH,EAA5D,SACGA,GADgBA,QAIpB,CAACW,IAEEub,EAAevc,uBAAY,WAC/B,OAAOlF,WAAWkG,EAAMsb,aAAcpc,EAAU2E,SAAW3E,EAAU2E,aAAUC,IAC9E,CAAC9D,IAEEwb,EAAqBxc,uBAAY,kBAAMlF,UAAUyhB,OAAiB,CAACA,IAEzE,OACE,cAACpb,EAAA,EAAD,CACE0B,UAAS,kCAA6B2Z,IAAuB,sBAAwB,IACrF7c,aAAY,oBAAEgF,EAAcC,gCAAhB,aAAE,EAAwCC,eAA1C,QAAqD,SACjEzD,OAAO,mCACPqb,gBAAiBzb,EAAM0b,eACvBC,mBAAkB3b,EAAM0b,eACxBrb,QAASC,IAAcsb,OACvBnb,SAAU2a,EACV1a,SAAUA,EACVR,OAAQgb,EACRta,WAAY2a,IAVd,SAYGD,QChDMO,I,cAA6D,SAACC,GACzE,IACQtjB,EAAS8F,IAAT9F,KAEFqX,EAAuB,CAC3B,CACEnX,MAAOF,EAAKmD,QACZhD,MAAO,CACL,CAAEC,KAAMJ,EAAKgD,iBAAiBC,WAAY1C,KAAMZ,EAAe6a,kBAC/D,CAAEpa,KAAMJ,EAAKgD,iBAAiBE,YAAa3C,KAAMZ,EAAe8a,mBAChE,CAAEra,KAAMJ,EAAKgD,iBAAiBrC,OAAQJ,KAAMZ,EAAe+a,gBAG/D,CACExa,MAAOF,EAAKkF,KACZ/E,MAAO,CACL,CAAEC,KAAMJ,EAAKK,cAAcC,YAAaC,KAAMZ,EAAea,gBAC7D,CAAEJ,KAAMJ,EAAKK,cAAcI,YAAaF,KAAMZ,EAAee,gBAC7D,CAAEN,KAAMJ,EAAKK,cAAcM,OAAQJ,KAAMZ,EAAeiB,cAKxDuX,EAAexD,sBACOrJ,IAA1BgY,EAAcngB,QACV,CAAC,CAAE/C,KAxBiB,WAwBQwB,SAAUhC,EAASoL,YAC/CsY,EAAcngB,SAGdmV,EAAY3D,sBAAqCrJ,IAAvBgY,EAAcpe,KAAqB,CAAC,CAAC,KAAOoe,EAAcpe,MAEpFqe,EAAqC/c,uBAAY,WAAO,IAAD,MACrDqb,EAAoB,2BACrByB,GADqB,IAExBngB,QAASgV,EAAa9M,QACtBnG,KAAMoT,EAAUjN,UAElBiY,EAAchC,WAAd,UACIgC,EAAc/B,qCADlB,OACI,OAAA+B,EAA8CzB,GADlD,UAEIE,OAAOC,cAFX,iBAEI,EAAewB,6CAFnB,OAEI,SAAuD3B,KAC1D,CAACyB,IAEEG,EAA4Bjd,uBAChC,kBACElF,MACE6W,EAAa9M,SACb,SAAC8I,GAAD,oBAEIyD,MAAOzD,EAAO/T,KACdsZ,SAAUvF,EAAO/T,KACjBwB,SAAUuS,EAAOvS,UACbuS,EAAOxK,MAAQ,CAAEA,MAAOwK,EAAOxK,OAAU,SAGrD,IAGI+Z,EAAyBld,uBAC7B,kBACElF,MAAMgX,EAAUjN,SAAS,SAAC7J,GAAD,OACvBF,SACE6W,EAAa9M,SACb,SAACsY,EAAsBxP,EAAQ2H,GAE7B,OADA6H,EAASxP,EAAO/T,MAAQoB,EAAIsa,IAAgB,GACrC6H,IAET,SAGN,IAGIC,EAAepd,uBACnB,SAACtB,GACCoT,EAAUjN,QAAU/J,MAAM4D,GAAM,SAACye,GAAD,OAC9BriB,SACE6W,EAAa9M,SACb,SAAC7J,EAAe2S,GAEd,OADA3S,EAAIuO,KAAM4T,EAASxP,EAAO/T,OAAqB,IACxCoB,IAET,OAGJ+hB,MAEF,CAACA,IAGGM,EAAkBrd,uBACtB,SAACrD,GACCgV,EAAa9M,QAAU/J,MAAM6B,GAAS,SAAC2gB,GAAD,MAAqC,CACzE1jB,KAAM0jB,EAAepK,SACrB9X,SAAUkiB,EAAeliB,SACzB+H,MAAOma,EAAena,UAExB4Z,MAEF,CAACA,IAQH,OALA7X,qBAAU,WAER6X,MACC,CAACA,IAGF,qBAAKla,UAAU,sBAAf,SACE,cAAC,GAAD,CACEgS,gBAAiBrb,EAAKiE,aACtBd,QAASsgB,IACTve,KAAMwe,IACN3N,gBAAiB8N,EACjBtL,aAAcqL,EACdvM,qBAAsBA,QC7GjB0M,I,cAA+E,SAAC,GAItF,IAHL5G,EAGI,EAHJA,WACAoE,EAEI,EAFJA,8BACAyC,EACI,EADJA,sBAEMC,EAAyBtP,iBAAuB,MAEhD7S,EAAkB6S,iBAAOwI,GAE/BzR,qBAAU,WACR5J,EAAgBuJ,QAAU/J,OAAO6b,EAAY,gBAG5C,CAACA,EAAW2E,YAEf,IAAMoC,EAA0B1d,uBAAY,WAC1C,OAAOyd,EAAuB5Y,UAC7B,IAEG8Y,EAAsB3d,uBAC1B,SAACsb,GACChgB,EAAgBuJ,QAAQyW,UAAYA,EACpCP,EAA8BjgB,OAAOQ,EAAgBuJ,QAAS,iBAEhE,CAACkW,IAGG6C,EAAuB5d,uBAAY,WACvC1E,EAAgBuJ,QAAQyW,UAAY5f,EAAU8I,UACzB,OAArBgZ,QAAqB,IAArBA,OACAzC,EAA8BjgB,OAAOQ,EAAgBuJ,QAAS,iBAC7D,CAAC2Y,EAAuBzC,IAE3B,OACE,qBAAKlY,UAAU,mBAAmBkM,IAAK0O,EAAvC,SACE,cAAC,GAAD,CACE3C,YAAY,EACZC,8BAA+BA,EAC/B8C,mBAAoBviB,EAAgBuJ,QACpC8Y,oBAAqBA,EACrBC,qBAAsBA,EACtBE,gBAAiBJ,QC3CZK,GAAuF,SAAC,GAI9F,IAHLxR,EAGI,EAHJA,KACOmB,EAEH,EAFJ1S,IAAO0S,MACPwL,EACI,EADJA,YAEMrc,EAAe0P,EAAKmB,GAEpBvS,EAAYgT,iBAAOtR,EAAa1B,WAEhCG,EAAkB6S,iBAAO,aAC7B5S,IAAKsB,EAAavB,gBAAgBC,KAC/BsB,EAAavB,kBAGlB4J,qBAAU,WACR/J,EAAU0J,QAAUhI,EAAa1B,YAChC,CAAC0B,EAAa1B,YAEjB+J,qBAAU,WACR5J,EAAgBuJ,QAAUhI,EAAavB,gBACvC4d,EAAYxL,EAAD,YAAC,eAAY7Q,GAAb,IAA2B1B,UAAWA,EAAU0J,QAASvJ,gBAAiBA,EAAgBuJ,aAGpG,CAAChI,EAAavB,gBAAgBggB,YAEjC,IAAMP,EAAgC/a,uBAAY,SAAC2W,GACjDrb,EAAgBuJ,QAAhB,eAA+B8R,GAC/B,IAAMqH,EAAgB,eAAQ7iB,EAAU0J,SACpChI,EAAaohB,6BAA+BnjB,OAAO6b,EAAW/c,OAASkB,OAAO6b,EAAWvb,YAC3F4iB,EAAiBpkB,KAAO+c,EAAW/c,KACnCokB,EAAiB5iB,SAAWub,EAAWvb,UAEzC8d,EAAYxL,EAAD,YAAC,eAAY7Q,GAAb,IAA2B1B,UAAW6iB,EAAkB1iB,gBAAiBqb,OAGnF,IAEH,OACE,qBAAK9T,UAAU,gCAAf,SACE,cAAC,GAAD,CACE8T,WAAYrb,EAAgBuJ,QAC5BkW,8BAA+BA,EAC/ByC,sBAAuB3gB,EAAa2gB,2BCtC/BU,I,OAAmE,SAAC,GAK1E,IAJLtkB,EAII,EAJJA,KACAwB,EAGI,EAHJA,SACA+iB,EAEI,EAFJA,qBACAC,EACI,EADJA,qBAEA,EAAkCxe,mBAAShG,GAA3C,mBAAOykB,EAAP,KAAkBC,EAAlB,KAEA,EAA0C1e,mBAASxE,GAAnD,mBAAOmjB,EAAP,KAAsBC,EAAtB,KAEAtZ,qBAAU,WACRoZ,EAAa1kB,KACZ,CAACA,IAEJsL,qBAAU,WACRsZ,EAAiBpjB,KAChB,CAACA,IAEJ,IAAMqjB,EAA8Bze,uBAClC,YAAyB,IAAtBpG,EAAqB,EAArBA,KAAMwB,EAAe,EAAfA,SACPkjB,EAAa1kB,GACb4kB,EAAiBpjB,GACjB+iB,EAAqBvkB,EAAMwB,KAE7B,CAAC+iB,IAGGO,EAAwB1e,uBAC5B,SAAC2e,GAAD,OACE,sBAAK9b,UAAS,2BAAsB8b,GAApC,UACE,mBAAG9b,UAAU,gCAAgCW,MAAO6a,EAApD,SACGA,IAEH,oBAAGxb,UAAU,qCAAqCW,MAAO+a,EAAzD,cACIA,EADJ,YAKJ,CAACA,EAAeF,IAGZO,EAAuCrc,mBAC3C,kBACE,cAAC,EAAD,CACEiB,MAAO4a,EACP3Z,uBAAwB4Z,EACxB5e,iBAAkB8e,EAClB7Z,mBAAoB+Z,EAJtB,SAMGC,EAAsB,yBAG3B,CAACN,EAAsBG,EAAeF,EAAWI,EAA6BC,IAGhF,OACE,qBAAK7b,UAAU,aAAf,SACGub,EAAuBQ,EAAuCF,QC9DxDG,GAA2E,SAAC,GAIlF,IAHLtS,EAGI,EAHJA,KACOmB,EAEH,EAFJ1S,IAAO0S,MACPwL,EACI,EADJA,YAEMrc,EAAe0P,EAAKmB,GAEpBvS,EAAYgT,iBAAOtR,EAAa1B,WAChCG,EAAkB6S,iBAAOtR,EAAavB,iBAE5C4J,qBAAU,WACR/J,EAAU0J,QAAUhI,EAAa1B,YAChC,CAAC0B,EAAa1B,YACjB+J,qBAAU,WACR5J,EAAgBuJ,QAAUhI,EAAavB,kBACtC,CAACuB,EAAavB,kBAEjB,IAAM6iB,EAAuBne,uBAC3B,SAACpG,EAAMwB,GACL,IAAM0jB,EAAiB,eAAQxjB,EAAgBuJ,SAC3ChI,EAAaohB,6BAA+BnjB,OAAOlB,IAASkB,OAAOM,KACrE0jB,EAAkBllB,KAAOA,EACzBklB,EAAkB1jB,SAAWA,GAE/B8d,EAAYxL,EAAD,YAAC,eAAY7Q,GAAb,IAA2BvB,gBAAiBwjB,EAAmB3jB,UAAW,CAAEvB,OAAMwB,iBAE/F,CAACyB,EAAc6Q,EAAOwL,IAGxB,OACE,qBAAKrW,UAAU,0BAAf,SACE,cAAC,GAAD,CACEjJ,KAAMuB,EAAU0J,QAAQjL,KACxBwB,SAAUD,EAAU0J,QAAQzJ,SAC5B+iB,qBAAsBA,EACtBC,qBAAsBvhB,EAAauhB,0BClBrCW,GAA6B,iBAC7BC,GAAkC5lB,EAASoL,UAEpCya,GAA2D,SAAC,GAalE,IAZL1jB,EAYI,EAZJA,IAYI,IAXJ3B,YAWI,MAXGmlB,GAWH,MAVJ3jB,gBAUI,MAVO4jB,GAUP,EATJnE,EASI,EATJA,0BACAqE,EAQI,EARJA,eAQI,IAPJC,cAOI,MAPK,GAOL,MANJC,oBAMI,aALJC,sBAKI,MALahmB,EAKb,MAJJimB,4BAII,MAJmBhmB,EAInB,MAHJwhB,kBAGI,aAFJyE,qBAEI,SADJxE,EACI,EADJA,8BAEQvhB,EAAS8F,IAAT9F,KAEFgmB,EAAuBrR,iBAAOvU,GAC9B6lB,EAA2BtR,iBAAO/S,GAExC,EAAgDwE,mBAASuf,GAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAkC/f,mBAASyf,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8CjgB,mBAAS0f,GAAvD,mBAAOQ,EAAP,KAAwBC,EAAxB,KACQlV,EAAsBxL,aAAiB8E,GAAvC0G,kBAEFlO,GAAU4F,mBACd,iBAAM,CACJ,CACE6O,MAAOoO,EAAqB3a,QAC5BqO,SAAUsM,EAAqB3a,QAC/BzJ,SAAUqkB,EAAyB5a,QACnCyV,wBAAwB,EACxB3d,QAAS,CACP,CACEuW,SAAU,YACVoH,wBAAwB,EACxBnX,MAAOyc,EACPtY,SAAUuY,EACVlc,SAAUtK,GAEZ,CACE6Z,SAAU,kBACVoH,wBAAwB,EACxBnX,MAAO2c,EACPxY,SAAUyY,EACVpc,SAAUrK,QAKlB,CAACwmB,EAAiBF,IAGpB,GAAwBhgB,mBACtBsf,GAAkB,CAChB,CACE/jB,UAAW,CACTvB,KAAMmlB,GACN3jB,SAAU4jB,IAEZ1jB,gBAAiB,CACf1B,KAAMmlB,GACN3jB,SAAU4jB,IAEZZ,qBAAsB5kB,EAAK4D,iBAC3B6gB,6BAA6B,KAZnC,qBAAOvf,GAAP,MAAashB,GAAb,MAiBMC,GAAoCjgB,uBAAY,WACpD,IAaO,IAbDkgB,EAAkC,CACtC3kB,MACA+f,UAAW5f,EAAUykB,QACrBvmB,KAAM4lB,EAAqB3a,QAC3BzJ,SAAUqkB,EAAyB5a,QACnCqa,eAAgBxgB,GAChBygB,OAAQrkB,OAAO4kB,EAAkB,cACjCL,eAAgBO,EAChBN,qBAAsBQ,GAGpBhF,EAC2B,OAA7BC,QAA6B,IAA7BA,KAAgCjgB,OAAOolB,EAAmB,CAAC,OAAQ,eAEnErV,EAAkBjF,EAAOsa,IACzB,UAAA3E,OAAOC,cAAP,mBAAe4E,4CAAf,gBAAsDF,MAEvD,CACDJ,EACAF,EACA9E,EACAC,EACA2E,EACAhhB,GACAmM,EACAtP,IAGIgU,GAAkBvP,uBACtB,YAA2C,IAAzCqgB,EAAwC,oBACxCb,EAAqB3a,QAAUwb,EAAiBjP,MAChDqO,EAAyB5a,QAAUwb,EAAiBjlB,SAC3B,OAAzByf,QAAyB,IAAzBA,KAA4B2E,EAAqB3a,QAAS4a,EAAyB5a,SACnFob,OAEF,CAACpF,EAA2BoF,KAGxBjO,GAAchS,uBAAY,WAC9B,IAAMsgB,EAAgB/lB,EACpBO,MAAM4D,IAAM,SAAC1D,GAAD,OAA6BA,EAAIG,aAC7C,gBAEF,MAAO,CACLA,UAAW,CACTvB,KAAM0mB,EACNllB,SAAUhC,EAASoL,WAErBlJ,gBAAiB,CACf1B,KAAM0mB,EACNllB,SAAUhC,EAASoL,WAErB4Z,qBAAsB5kB,EAAK4D,iBAC3B6gB,6BAA6B,KAE9B,CAACzkB,EAAK4D,iBAAkBsB,KAErB6hB,GAAsBvgB,uBAAY,WACtC,OAAO8a,EAAa5hB,EAAsBuX,KAAOvX,EAAsBue,oBACtE,CAACqD,IAiBJ,OAfA5V,qBAAU,WACR+a,OACC,CACDtjB,GACAme,EACAC,EACArc,GACAghB,EACAE,EACAE,EACAvkB,EACAsP,EACAoV,KAIA,qBAAKpd,UAAS,6BAAwBtH,GAAtC,SACE,cAAC,GAAD,CACEuc,QAASvc,EACT0c,aAAc,EACd9I,iBAAkBoR,KAClBvI,YAAa,CAAE7c,UAAW0jB,GAAsBvjB,gBAAiByiB,IACjEphB,QAASA,GACT+B,KAAMA,GACN6Q,gBAAiBA,GACjByC,YAAaA,GACbD,aAAciO,GACdnP,qBAAsB0O,OAAgBza,EAAYvL,EAAwBC,EAAMA,EAAKqD,cACrFwS,UAAWrP,sBAAYjF,EAAa,IACpCsX,uBAAwBrS,sBAAY3E,EAAY,IAZlD,SAcG+jB,EACG,CACE,cAAC,EAAD,CAEEjc,MAAOyc,EACPjc,SAAUtK,EACVkR,uBAAwB,SAACpH,GAAD,OAAW0c,EAAa1c,IAJlD,SAME,qBAAKN,UAAU,iBAAf,uBALI,kBAON,cAAC,EAAD,CAEEM,MAAO2c,EACPnc,SAAUrK,EACViR,uBAAwB,SAACpH,GAAD,OAAW4c,EAAmB5c,IAJxD,SAME,cAAC,GAAD,CACEwT,WAAY+I,EACZ3E,8BAA+B4E,KAP7B,4BAWR7a,O,IChMP0b,G,oBCHCC,I,cAAoC,CAAChlB,EAAUilB,UACxCC,GAAqE,SAAC,GAK5E,IAAD,YAJJC,EAII,EAJJA,0BACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,0BACAC,EACI,EADJA,kBAEQvnB,EAAS8F,IAAT9F,KAER,EAAsDoG,oBAAS,GAA/D,mBAAOohB,EAAP,KAA4BC,EAA5B,KACA,EAAsErhB,oBAAS,GAA/E,mBAAOshB,EAAP,KAAoCC,EAApC,KACA,EAA8EvhB,oBAC3E9E,WAAW2lB,GAAmCM,IADjD,mBAAOK,EAAP,KAAwCC,EAAxC,KAIM1c,EAAgBpF,qBAAW4E,GAE3Bmd,EAA0BthB,uBAAY,SAACkB,GAAD,OAAY+f,EAAuB/f,KAAS,IAClFqgB,EAAkCvhB,uBAAY,SAACkB,GAAD,OAAYigB,EAA+BjgB,KAAS,IAElGsgB,EAA6BxhB,uBACjC,SAACC,EAA8CgR,GAC7C,IAAMwQ,EAAmBxQ,EACnByQ,EAA+B5mB,WAAW2lB,GAAmCgB,GACnFZ,EAAkBY,GACdC,EACFL,GAAmC,IAEnCA,GAAmC,GACnCT,EAA0B,WAE5BK,GAAuB,KAEzB,CAACL,EAA2BC,IAGxBc,EAAuB3hB,uBAC3B,kBACElF,MAAMiB,OAAOqE,OAAO3E,IAAY,SAAC4E,GAAD,OAC9B,cAACC,EAAA,EAAD,CAAwBC,MAAOF,EAAKG,yBAAwBH,EAA5D,SACGA,GADgBA,QAIvB,IAGIuhB,EAAqC5hB,uBACzC,SAACC,EAA8CgR,GAC7C2P,EAA0B3P,GAC1BkQ,GAA+B,KAEjC,CAACP,IAGGiB,EAAgC7hB,uBACpC,kBACElF,MAAMiB,OAAOD,KAAK7C,IAAqB,SAACoH,GAAD,OACrC,cAACC,EAAA,EAAD,CAAwBC,MAAOF,EAAKG,yBAAwBH,EAA5D,SACGA,GADgBA,QAIvB,IAGIyhB,EAAmB9hB,uBAAY,SAAC3D,EAAuCuB,GAC3E,OAAI9C,WAAW2lB,GAAmC7iB,GACzCvB,EAEF,KACN,IAEH,OACE,cAAC,EAAD,CACEmH,MAAOhK,EAAK8D,cACZmG,SAAQ,oBAAEkB,EAAcC,gCAAhB,aAAE,EAAwCC,eAA1C,aAAqDC,EAC7DjC,UAAU,qBACVa,cAAY,EACZH,KACE,sBAAKV,UAAU,uBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,gCAAQrJ,EAAKoE,YACb,cAACuD,EAAA,EAAD,CACE0B,UAAU,sBACVlD,aAAY,oBAAEgF,EAAcC,gCAAhB,aAAE,EAAwCC,eAA1C,QAAqD,SACjEzD,OAAO,sBACPC,QAASC,IAAcsb,OACvBnb,SAAU6f,EACV5f,SAAU8f,EACVtgB,OAAQ8f,EACRpf,WAAYmf,EARd,SAUGY,SAGL,sBAAK9e,UAAU,6BAAf,UACE,gCAAQrJ,EAAK6C,oBACb,cAAC8E,EAAA,EAAD,CACE0B,UAAU,8BACVlD,aAAY,oBAAEgF,EAAcC,gCAAhB,aAAE,EAAwCC,eAA1C,QAAqD,SACjEzD,OAAO,8BACPoQ,WAAY4P,EACZ/f,QAASC,IAAcsb,OACvBnb,SAAU8f,EACV7f,SAAUkgB,EACV1gB,OAAQggB,EACRtf,WAAYjG,EAAsB1C,EAAoB6nB,GATxD,SAWGe,YAnCX,SAyCE,qBAAKhf,UAAU,sBAAf,mBAAyC/H,QAAQimB,IAAjD,OAAsEe,EACpEhB,EACAC,U,SDhHHP,K,oBAAAA,E,sBAAAA,E,yBAAAA,Q,KAML,IACMuB,GAAe,GACfC,GAA6B,WAEtBC,GAAuE,SAAC,GAa9E,IAZL1mB,EAYI,EAZJA,IACAuf,EAWI,EAXJA,WACAC,EAUI,EAVJA,8BAUI,IATJnhB,YASI,MATGooB,GASH,MARJ5mB,gBAQI,MAROhC,EAASoL,UAQhB,EAPJqW,EAOI,EAPJA,0BAOI,IANJjd,iBAMI,MANQnC,EAAUymB,OAMlB,MALJC,mBAKI,MALUlpB,EAAmB,UAK7B,MAJJiE,aAII,MAJI,CAAC,CAAEtD,KAAM,UAAWwB,SAAUhC,EAASoL,YAI3C,MAHJrH,cAGI,MAHK,CAAC,CAAEvD,KAAMooB,GAA4B5mB,SAAUhC,EAASoL,YAG7D,MAFJ4d,mBAEI,MAFU,CAAC,CAAExoB,KAAM,iBAEnB,MADJyoB,aACI,MADI,CAAC,CAAEC,aAAc,CAhBP,KAgBsBC,cAAe,CAACR,IAAeS,kBAAmB,CAACT,MACvF,EACIvoB,EAAS8F,IAAT9F,KAEFkY,EAAkB1R,uBAAY,SAACgT,GACnC,OAAQA,GACN,KAAKwN,GAAwBiC,YAC3B,MAAO,SACT,KAAKjC,GAAwBkC,aAC3B,MAAO,UACT,KAAKlC,GAAwBmC,WAC3B,MAAO,cACT,QACE,MAAO,aAEV,IAEGC,EAAuC5iB,uBAC3C,SAACvG,GAAD,MAAuB,CACrB,CACEC,MAAOD,EACPE,MAAO,CACL,CAAEC,KAAMJ,EAAKgD,iBAAiBC,WAAY1C,KAAMZ,EAAe6a,kBAC/D,CAAEpa,KAAMJ,EAAKgD,iBAAiBE,YAAa3C,KAAMZ,EAAe8a,mBAChE,CAAEra,KAAMJ,EAAKgD,iBAAiBrC,OAAQJ,KAAMZ,EAAe+a,gBAG/D,CACExa,MAAOF,EAAKsD,aACZnD,MAAO,CACL,CAAEC,KAAMJ,EAAKK,cAAcC,YAAaC,KAAMZ,EAAea,gBAC7D,CAAEJ,KAAMJ,EAAKK,cAAcI,YAAaF,KAAMZ,EAAee,gBAC7D,CAAEN,KAAMJ,EAAKK,cAAcM,OAAQJ,KAAMZ,EAAeiB,WACxD,CAAER,KAAMJ,EAAKK,cAAc4E,UAAW1E,KAAMZ,EAAegb,mBAIjE,CAAC3a,IAGKqR,EAAsBtL,qBAAW4E,GAAjC0G,kBAEFtR,EAA0BgJ,mBAAQ,WACtC,IAAMsgB,EAAkE,GAKxE,OAJAA,EAAcd,IAAgBa,EAAqCppB,EAAKmF,gBACxEkkB,EAAcrC,GAAwBiC,aAAeG,EAAqCppB,EAAKqE,aAC/FglB,EAAcrC,GAAwBkC,cAAgBE,EAAqCppB,EAAK2E,cAChG0kB,EAAcrC,GAAwBmC,YAAcC,EAAqCppB,EAAKmF,gBACvFkkB,IACN,CAACD,EAAsCppB,EAAKqE,YAAarE,EAAK2E,aAAc3E,EAAKmF,iBAE9EmkB,EAAqBvgB,mBAAQ,WACjC,IAAMsS,EAAyD,GAG/D,OAFAA,EAAgB2L,GAAwBiC,aAAejpB,EAAKyD,WAAWC,MACvE2X,EAAgB2L,GAAwBkC,cAAgBlpB,EAAKyD,WAAWE,OACjE0X,IACN,CAACrb,EAAKyD,WAAWC,MAAO1D,EAAKyD,WAAWE,SAE3C,EAAkDyC,mBAAShC,GAA3D,mBAAOmjB,EAAP,KAA0BgC,EAA1B,KACA,EAAsDnjB,mBAASuiB,GAA/D,mBAAOa,EAAP,KAA4BC,EAA5B,KAEMpC,EAAoB7gB,uBAAY,SAACiR,GAAD,OAAoB8R,EAAqB9R,KAAsB,IAE/F2P,EAA4B5gB,uBAChC,SAACiR,GAAD,OAAYgS,EAAwBhqB,EAA6BgY,MACjE,IAkFIiS,EAAe/U,iBAAOvU,GACtBupB,EAAmBhV,iBAAO/S,GAC1BgoB,EAA4BjV,iBAAO/U,EAASoL,WAC5C7H,GAAUwR,iBAlFQ,WACtB,IAAMkV,EAAevoB,MACnBoC,GACA,SAACW,GAAD,MACG,CACCuT,MAAOvT,EAAYjE,KACnBsZ,SAAUrV,EAAYjE,KACtBwB,SAAUyC,EAAYzC,SACtB+H,MAAOtF,EAAYsF,MACnB6P,UAAWwN,GAAwBiC,YACnCja,WAAY,4BAGZ8a,EAAgBxoB,MACpBqC,GACA,SAACgB,GAAD,MACG,CACCiT,MAAOjT,EAAavE,KACpBsZ,SAAU/U,EAAavE,KACvBwB,SAAU+C,EAAa/C,SACvB+H,MAAOhF,EAAagF,MACpB6P,UAAWwN,GAAwBkC,aACnCla,WAAY,6BAGZ+a,EAAoBzoB,MACxBsnB,GACA,SAACoB,GAAD,MACG,CACCpS,MAAOoS,EAAW5pB,KAClBsZ,SAAUsQ,EAAW5pB,KACrBuJ,MAAOqgB,EAAWrgB,MAClBoQ,gBAAgB,EAChBP,UAAWwN,GAAwBmC,WACnCna,WAAY,iCA6BlB,MAAO,CAzBc,CACnBwK,UAAWwN,GAAwBiC,YACnCrR,MAAO,QACP8B,SAAU,QACV1K,WAAY,wBACZ7L,QAAS0mB,GAEW,CACpBrQ,UAAWwN,GAAwBkC,aACnCtR,MAAO8R,EAAare,QACpBqO,SAAUgQ,EAAare,QACvBzJ,SAAU+nB,EAAiBte,QAC3B2D,WAAY,yBACZ7L,QAAS2mB,EACTzP,yBAAyB,GAED,CACxBb,UAAWwN,GAAwBmC,WACnCvR,MAAO,cACP8B,SAAU,cACV1K,WAAY,6BACZ7L,QAAS4mB,EACThQ,gBAAgB,IAsBqBkQ,IACnC/kB,GAAOyP,iBAhBXrT,MAAMunB,GAAO,SAACqB,GACZ,IAAMC,EAAQ,sBAAOD,EAAKpB,cAAZ,YAA6BoB,EAAKnB,eAAlC,YAAoDmB,EAAKlB,oBACvE,OAAO1nB,SACLmY,GAAsBtW,GAAQkI,UAC9B,SAACsY,EAAsBxP,EAAQ2H,GAE7B,OADA6H,EAASxP,EAAOuF,UAAYyQ,EAASrO,IAAgByM,GAC9C5E,IAET,QAUAyG,GAA0C5jB,uBAAY,WAC1D,IAoCO,IApCD6jB,EAAiB/oB,UAAUmY,GAAsBtW,GAAQkI,UAAU,SAAC8I,GAAD,OAAYA,EAAOqF,aACtF9V,EAAkBpC,MAAM+oB,EAAerD,GAAwBiC,cAAc,SAAC5kB,GAAD,MAAkB,CACnGjE,KAAMiE,EAAYqV,SAClB9X,SAAUyC,EAAYzC,SACtB+H,MAAOtF,EAAYsF,UAEfhG,EAAmBrC,MAAM+oB,EAAerD,GAAwBkC,eAAe,SAACvkB,GAAD,MAAmB,CACtGvE,KAAMuE,EAAa+U,SACnB9X,SAAU+C,EAAa/C,SACvB+H,MAAOhF,EAAagF,UAEhBif,EAA4BtnB,MAAM+oB,EAAerD,GAAwBmC,aAAa,SAACa,GAAD,MAAiB,CAC3G5pB,KAAM4pB,EAAWtQ,SACjB/P,MAAOqgB,EAAWrgB,UAEdkf,EAA6BvnB,MAAM4D,GAAKmG,SAAS,SAAC7J,GAAD,MAAsB,CAC3EsnB,aAAcxnB,MAAMoC,GAAO,SAACW,GAAD,OAAiB7C,EAAI6C,EAAYjE,SAC5D2oB,cAAeznB,MAAMqC,GAAQ,SAACgB,GAAD,OAAkBnD,EAAImD,EAAavE,SAChE4oB,kBAAmB1nB,MAAMsnB,GAAa,SAACoB,GAAD,OAAgBxoB,EAAIwoB,EAAW5pB,aAGjEyhB,EAA2C,CAC/C9f,MACA+f,UAAW5f,EAAUooB,cACrBlqB,KAAMspB,EAAare,QACnBzJ,SAAU+nB,EAAiBte,QAC3BjH,UAAWmjB,EACXoB,YAAaa,EACb9lB,QACAC,SACAilB,cACAC,SAGEvH,EAC2B,OAA7BC,QAA6B,IAA7BA,KAAgCM,IAEhCxQ,EAAkBjF,EAAOyV,IACzB,UAAAE,OAAOC,cAAP,mBAAeuI,kDAAf,gBAA4D1I,MAE7D,CAACP,EAAYC,EAA+BiI,EAAqBjC,EAAmBlW,EAAmBtP,IAEpGyoB,GAAgEhkB,uBACpE,SAACikB,GACC,GAA2C,IAAvCnpB,OAAOmpB,EAAmBtnB,SAAgB,CAC5C,IAAMunB,EAAoCppB,QAAQmpB,EAAmBtnB,SAA4BvB,SAE7F8oB,IAAqCd,EAA0Bve,SACjEue,EAA0Bve,QAAUqf,EACpCD,EAAmB7oB,SAAW8oB,GACrBD,EAAmB7oB,WAAa+nB,EAAiBte,UAC1Due,EAA0Bve,QAAUof,EAAmB7oB,SACtDN,QAAQmpB,EAAmBtnB,SAA4BvB,SAAW6oB,EAAmB7oB,aAI5F,IAGImU,GAAkBvP,uBACtB,SAACmkB,GACC,IAAMF,EAAqBnpB,OAAOqpB,EAAgB,CAAEnR,UAAWwN,GAAwBkC,eAEvFsB,GAA8DC,GAE9DtnB,GAAQkI,QAAR,YAAsBsf,GACtBjB,EAAare,QAAUof,EAAmB7S,MAC1C+R,EAAiBte,QAAUof,EAAmB7oB,SACrB,OAAzByf,QAAyB,IAAzBA,KAA4BoJ,EAAmB7S,MAAO6S,EAAmB7oB,UACzEwoB,OAEF,CACE/I,EACA+I,GACAI,KAIEI,GAAwBpkB,uBAC5B,SAACoZ,GAAD,OACEte,MAAMse,GAAa,SAACpe,GAAD,OACjBF,SACEmY,GAAsBtW,GAAQkI,UAC9B,SAACwf,EAAuB1W,GAOtB,OANI7S,QAAQE,EAAI2S,EAAOuF,WACrBmR,EAAU1W,EAAOuF,UACfvF,EAAOqF,YAAcwN,GAAwBiC,YAhQzC,IAgQqEV,GAE3EsC,EAAU1W,EAAOuF,UAAYlY,EAAI2S,EAAOuF,UAEnCmR,IAET,SAGN,IAGItS,GAAe/R,uBACnB,SAACoZ,GACC1a,GAAKmG,QAAUuf,GAAsBhL,GACrCwK,OAEF,CAACQ,GAAuBR,KAGpB5R,GAAchS,uBAAY,WAC9B,OAAOlF,SACLmY,GAAsBtW,GAAQkI,UAC9B,SAACsY,EAAsBxP,GAGrB,OAFAwP,EAASxP,EAAOuF,UACdvF,EAAOqF,YAAcwN,GAAwBiC,YAzRnC,IAyR+DV,GACpE5E,IAET,MAED,IAOH,OALAjY,qBAAU,WAER0e,OACC,CAACA,KAGF,qBAAK/gB,UAAS,oCAA+BtH,GAA7C,SACE,cAAC,GAAD,CACE0c,aAAc,EACd9I,iBAAkBjW,EAAsBkW,KACxCsC,gBAAiBA,EACjBmD,gBAAiBiO,EACjBjS,qBAAsBtX,EACtBoD,QAASA,GAAQkI,QACjBnG,KAAMA,GAAKmG,QACX0K,gBAAiBA,GACjBwC,aAAcA,GACdC,YAAaA,GACb+F,eAAgBxV,mBACd,kBACE,cAAC,GAAD,CACEwe,kBAAmBA,EACnBD,0BAA2BkC,EAC3BnC,kBAAmBA,EACnBD,0BAA2BA,MAG/B,CAACA,EAA2BC,EAAmBmC,EAAqBjC,SEhUjEuD,I,OAAqD,SAAC,GAMjD,IALhBxJ,EAKe,EALfA,WACAnhB,EAIe,EAJfA,MACAohB,EAGe,EAHfA,8BACAxf,EAEe,EAFfA,IAEe,IADf4H,aACe,MARiB,IAQjB,EACP3J,EAAS8F,IAAT9F,KAEFqX,EAAkDtO,mBACtD,iBAAM,CACJ,CACE7I,MAAOF,EAAKkF,KACZ/E,MAAO,CACL,CAAEC,KAAMJ,EAAKK,cAAcC,YAAaC,KAAMZ,EAAea,gBAC7D,CAAEJ,KAAMJ,EAAKK,cAAcI,YAAaF,KAAMZ,EAAee,gBAC7D,CAAEN,KAAMJ,EAAKK,cAAcM,OAAQJ,KAAMZ,EAAeiB,WACxD,CAAER,KAAMJ,EAAKK,cAAcQ,MAAON,KAAMZ,EAAemB,eAI7D,CACEd,EAAKK,cAAcQ,MACnBb,EAAKK,cAAcM,OACnBX,EAAKK,cAAcC,YACnBN,EAAKK,cAAcI,YACnBT,EAAKkF,OAIH6lB,EAA4BvkB,uBAChC,iBACG,CACCzE,IAAKipB,OACL5qB,KAAM,GACNwB,SAAUhC,EAASoL,UACnB8W,UAAW5f,EAAUif,kBACrBC,QAAS,MAEb,IAGI6J,EAAqBzkB,uBAAY,WACrC,OAAIlF,UAAUnB,GACL,CAAC,CAAE2B,gBAAiBipB,MAEpBzpB,MAAMnB,GAAO,SAAC+qB,GAAD,MAAW,CAAEppB,gBAAiBopB,QAEnD,CAACH,EAA2B5qB,IAE/B,EAAkCiG,mBAAS6kB,KAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAkChlB,mBAASuD,GArDX,KAqDhC,mBAAO0hB,EAAP,KAAkBC,EAAlB,KACQja,EAAsBtL,qBAAW4E,GAAjC0G,kBAEFka,EAAqB/kB,uBAAY,SAAChF,GAAD,OAAeA,EAAIE,SAAgCI,gBAAgBC,MAAM,IAE1GyW,EAAchS,uBAClB,iBAAO,CACL1E,gBAAiBipB,OAEnB,CAACA,IAGHrf,qBAAU,WACR,IASO,IATDgb,EAA+B,CACnC3kB,MACA+f,UAAW5f,EAAUspB,KACrB7hB,MAAO0hB,EACPlrB,MAAOmB,MAAM6pB,GAAW,SAACM,GAAD,OAA0BA,EAAS3pB,oBAGzDwf,EAC2B,OAA7BC,QAA6B,IAA7BA,KAAgCmF,IAEhCrV,EAAkBjF,EAAOsa,IACzB,UAAA3E,OAAOC,cAAP,mBAAe0J,yCAAf,gBAAmDhF,MAEpD,CAAC2E,EAAWF,EAAW7J,EAAYC,EAA+Bxf,EAAKsP,IAE1E,IAAMwH,EAAyBrS,uBAAY,SAAChF,GAC1C,MAAO,CAAEM,gBAAiB,CAAEC,IAAMP,EAAIM,gBAAoCC,QACzE,IAEGwW,EAAe/R,uBAAY,SAACtB,GAChCkmB,EAAalmB,KACZ,IAEG/B,EAAU4F,mBAAQ,iBAAM,CAAC,CAAE2Q,SAAU,OAAQ/P,MAAO0hB,EAAWvd,SAAUwd,MAAiB,CAACD,IAEjG,OAAOtiB,mBACL,kBACE,qBAAKM,UAAU,kBAAf,SACE,cAAC,GAAD,CACEiV,QAASvc,EACT4T,iBAAkBjW,EAAsBuX,KACxCuH,YAAa,CAAEja,KAAMggB,IACrBphB,QAASA,EACT+B,KAAMimB,EACN5S,aAAcA,EACdC,YAAaA,EACbnB,qBAAsBA,EACtBxB,UAAW0V,EACX1S,uBAAwBA,QAI9B,CACE1V,EACAkU,EACA8T,EACAI,EACA/S,EACAD,EACAM,EACA9W,MClHA4pB,I,OAAyB,OACzBC,GAA8BhsB,EAASoL,UAEhC6gB,GAAiE,SAAC,GAYvD,IAXtBC,EAWqB,EAXrBA,eAWqB,IAVrBlqB,gBAUqB,MAVVgqB,GAUU,MATrB/F,sBASqB,MATJhmB,EASI,MARrBimB,4BAQqB,MAREhmB,EAQF,MAPrBisB,uBAOqB,MAPH,GAOG,EANrBzK,EAMqB,EANrBA,WACAQ,EAKqB,EALrBA,UAKqB,IAJrB1hB,YAIqB,MAJdurB,GAIc,EAHrBtK,EAGqB,EAHrBA,0BACAE,EAEqB,EAFrBA,8BACAxf,EACqB,EADrBA,IAEQ/B,EAAS8F,IAAT9F,KAER,EAAwBoG,mBACtB0lB,GAAkB,CAChB,CACEnqB,UAAW,CACTvB,KAAMurB,GACN/pB,SAAUgqB,IAEZ9pB,gBAAiB,CACf1B,KAAMurB,GACN/pB,SAAUgqB,IAEZhH,qBAAsB5kB,EAAK+D,cAC3B0gB,6BAA6B,KAZnC,mBAAOvf,EAAP,KAAashB,EAAb,KAiBA,EAAkCpgB,mBAASyf,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8CjgB,mBAAS0f,GAAvD,mBAAOQ,EAAP,KAAwBC,EAAxB,KACA,EAAwCngB,mBAAS2lB,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACQ5a,EAAsBtL,qBAAW4E,GAAjC0G,kBAER3F,qBAAU,WACR,IAiBO,IAjBAmb,EAAP,YAA2B1jB,EAAQkI,QAAnC,MAEMqb,EAAqC,CACzC3kB,MACA+f,YACA1hB,KAAMymB,EAAiBnN,SACvB9X,SAAUilB,EAAiBjlB,SAC3BkqB,eAAgB5mB,EAChB6mB,gBAAiBC,EACjBnG,eAAgBO,EAChBN,qBAAsBQ,GAGlBnJ,EAAa7b,OAAOolB,EAAmB,CAAC,OAAQ,aAElDpF,EAC2B,OAA7BC,QAA6B,IAA7BA,KAAgCpE,IAEhC9L,EAAkBjF,EAAO+Q,IACzB,UAAA4E,OAAOC,cAAP,mBAAekK,+CAAf,gBAAyDxF,MAE1D,CACDJ,EACA0F,EACA5F,EACA9E,EACAQ,EACAP,EACArc,EACAmM,EACAtP,IAGF,IAAMoqB,EAAiB3lB,uBAAY,SAACC,GAClCwlB,EAAgBxlB,EAAMW,OAAOL,SAC5B,IAEG0V,EACJ,qBAAKpT,UAAU,gCAAf,SACE,uBACEA,UAAU,yCACV9I,KAAK,OACLsL,YAAa7L,EAAKkE,cAClBqF,aAAcyiB,EACdxiB,OAAQ2iB,MAKRhpB,EAAUwR,iBAAO,CACrB,CACEiD,MAAOxX,EACPsZ,SAAUtZ,EACVwB,WACAkf,wBAAwB,EACxB3d,QAAS,CACP,CACEsZ,oBACA/C,SAAU,qBACVoH,wBAAwB,EACxB3d,QAAS,CACP,CACEuW,SAAU,YACVoH,wBAAwB,EACxBnX,MAAOyc,EACPtY,SAAUuY,EACVlc,SAAUtK,GAEZ,CACE6Z,SAAU,kBACVoH,wBAAwB,EACxBnX,MAAO2c,EACPxY,SAAUyY,EACVpc,SAAUrK,SAQhBiW,EAAkBvP,uBACtB,YAA2C,IAAzCqgB,EAAwC,oBACf,OAAzBxF,QAAyB,IAAzBA,KAA4BwF,EAAiBjP,MAAiBiP,EAAiBjlB,UAE/E,IAAOwqB,EAAP,YAAkCjpB,EAAQkI,QAA1C,MACA+gB,EAAwBxU,MAAQiP,EAAiBjP,MACjDwU,EAAwB1S,SAAWmN,EAAiBnN,SACpD0S,EAAwBxqB,SAAWilB,EAAiBjlB,WAEtD,CAACyf,IAGG7I,EAAchS,uBAAY,WAC9B,IAAMsgB,EAAgB/lB,EACpBO,MAAM4D,GAAM,SAAC1D,GAAD,OAA6BA,EAAIG,aAC7C,KAEF,MAAO,CACLA,UAAW,CACTvB,KAAM0mB,EACNllB,SAAUgqB,IAEZ9pB,gBAAiB,CACf1B,KAAM0mB,EACNllB,SAAUgqB,IAEZhH,qBAAsB5kB,EAAK+D,cAC3B0gB,6BAA6B,KAE9B,CAACzkB,EAAK+D,cAAemB,IAElB6hB,GAAsBvgB,uBAAY,WACtC,OAAO8a,EAAa5hB,EAAsBue,kBAAoBve,EAAsBkW,OACnF,CAAC0L,IAEE+K,GAAkB7lB,uBAAY,SAAC8lB,GAAD,OAAa9F,EAAQ8F,KAAU,IAC7DC,GAAoB/lB,uBAAY,SAAChF,GAAD,OAASD,EAAYC,KAAM,IAC3DgrB,GAAqBhmB,uBAAY,SAAChF,GAAD,OAASK,EAAWL,KAAM,IAEjE,OAAOuH,mBACL,kBACE,qBAAKM,UAAS,gCAA2BtH,GAAzC,SACE,cAAC,GAAD,CACEuc,QAASvc,EACT0c,aAAc,EACd9I,iBAAkBoR,KAClBzL,qBAAmB,EACnBkD,YAAa,CAAE7c,UAAW0jB,GAAsBvjB,gBAAiByiB,IACjEphB,QAASA,EAAQkI,QACjBnG,KAAMA,EACN6Q,gBAAiBA,EACjByC,YAAaA,EACbD,aAAc8T,GACdhV,qBAAsBtX,EAAwBC,EAAMA,EAAK4E,YACzDiR,UAAW0W,GACX1T,uBAAwB2T,SAI9B,CACEzF,GACAwF,GACAvsB,EACA+V,EACAyC,EACAgU,GACAtnB,EACAmnB,GACAtqB,K,4BCtMO0qB,GAA+D,SAAC,GAAmC,IAAjC7nB,EAAgC,EAAhCA,WAAY8nB,EAAoB,EAApBA,cACjF1sB,EAAS8F,IAAT9F,KAEF4C,EAAe4D,uBAAY,WAC/BkmB,GAAc,SAAC9nB,GAAD,4BACTA,GADS,CAEZ,CACExE,KAAMW,EAA+B6D,EAAY,KACjDhD,SAAUhC,EAASoL,kBAGtB,CAAC0hB,IAEEC,EAAenmB,uBACnB,SAAC0N,GAAD,OAAmB,SAACzN,GAAD,OACjBimB,GAAc,SAAC9nB,GAEb,OADAA,EAAWsP,GAAO9T,KAAOqG,EAAMW,OAAOL,MAC/B,YAAInC,SAEf,CAAC8nB,IAGGxmB,EAAmBM,uBACvB,SAAC0N,GAAD,OAAmB,SAACtS,GAClB8qB,GAAc,SAAC9nB,GAEb,OADAA,EAAWsP,GAAOtS,SAAWA,EACtB,YAAIgD,SAGf,CAAC8nB,IAGGE,EAAoBpmB,uBACxB,SAAC0N,GAAD,OAAmB,kBACjBwY,GAAc,SAAC9nB,GAAD,4BAAoBA,EAAWmI,MAAM,EAAGmH,IAAxC,YAAmDtP,EAAWmI,MAAMmH,EAAQ,WAC5F,CAACwY,IAGH,OACE,sBAAKrjB,UAAU,oBAAf,UACE,cAACwjB,GAAA,EAAD,CAAQhlB,QAAQ,WAAWuB,QAASxG,EAAcyG,UAAU,gBAA5D,SACGrJ,EAAK4C,eAER,qBAAKyG,UAAU,uBAAf,SACG/H,MAAMsD,GAAY,SAACkoB,EAAW5Y,GAC7B,OACE,sBAAwC7K,UAAU,kBAAlD,UACE,uBACEA,UAAU,iBACV9I,KAAK,OACLiJ,OAAQmjB,EAAazY,GACrB3K,aAAcujB,EAAU1sB,OAE1B,cAAC,EAAD,CACE6F,iBAAkB6mB,EAAUlrB,SAC5BsE,iBAAkBA,EAAiBgO,GACnC/N,aAAa,WAEf,cAAC0mB,GAAA,EAAD,CACEhlB,QAAQ,SACRwB,UAAU,mBACV0jB,KAAM,cAAC,KAAD,IACNC,aAAa,OACb5jB,QAASwjB,EAAkB1Y,GAL7B,SAOGlU,EAAKW,WAnBV,UAAamsB,EAAU1sB,KAAvB,YAA+B8T,aC/C9B+Y,I,OAA2E,SAAC,GAGlF,IAAD,IAFJC,EAEI,EAFJA,qBACAC,EACI,EADJA,qBAEQntB,EAAS8F,IAAT9F,KAEFmL,EAAgBpF,qBAAW4E,GAE3ByiB,EAAgC5mB,uBACpC,SAAC6mB,GAAD,OAAsB,SAAC5mB,EAA0BgR,GAC/C0V,EAAqB1V,GACrB4V,OAEF,CAACF,IAGGG,EAA0B9mB,uBAC9B,kBACElF,MAAMiB,OAAOqE,OAAO5E,IAAe,SAAC6E,GAAD,OACjC,cAACkR,GAAA,EAAD,CAAoBN,OAAQ5Q,EAAKG,yBAAwBH,EAAzD,SACGA,GADYA,QAInB,IAGF,OACE,cAAC,EAAD,CACEmD,MAAOhK,EAAKqF,mBACZ4E,SAAQ,oBAAEkB,EAAcC,gCAAhB,aAAE,EAAwCC,eAA1C,aAAqDC,EAC7DjC,UAAU,wBACVa,cAAY,EACZH,KAAM,SAACsjB,GAAD,OACJ,cAAC7V,GAAA,EAAD,CAAMtP,SAAUklB,EAA8BC,GAA9C,SACE,cAACvV,GAAA,EAAD,UAAWwV,SAPjB,SAWE,qBAAKjkB,UAAU,yBAAf,SAAyC/H,QAAQ4rB,SCrB1CK,GAA6D,SAAC/lB,GACzE,IAAMgmB,OACsBliB,IAA1B9D,EAAMgmB,gBAAgC1tB,EAAqC0H,EAAMgmB,gBAC7EC,OAA8CniB,IAA3B9D,EAAMimB,iBAAiC,GAAKjmB,EAAMimB,iBACrEC,OAAsCpiB,IAAvB9D,EAAMkmB,aAA6B1rB,EAAa2rB,KAAOnmB,EAAMkmB,aAClF,EAA0BtnB,mBAASonB,GAAnC,mBAAO7jB,EAAP,KAAcmE,EAAd,KAEQ9N,EAAS8F,IAAT9F,KAER,EAAoE+F,qBAAW4E,GAAvES,EAAR,EAAQA,yBAA0BiG,EAAlC,EAAkCA,kBAAmBuc,EAArD,EAAqDA,WAErD,EAAoCxnB,mBAASqnB,GAA7C,mBAAO7oB,EAAP,KAAmB8nB,EAAnB,KAEMtsB,EAAOuU,sBAAsBrJ,IAAf9D,EAAMpH,KAfY,MAeoCoH,EAAMpH,MAC1EwB,EAAW+S,sBAA0BrJ,IAAnB9D,EAAM5F,SAAyBhC,EAASoL,UAAYxD,EAAM5F,UAE5E4B,EAAWmR,iBAAQnN,EAA4BhE,UAC/CkB,EAAQiQ,iBAAQnN,EAA4B9C,OAE5CmpB,EAAgCrnB,uBAAY,WAChD,OAAO,kBAAM4E,EAAyBC,WACrC,CAACD,IAEEqR,EAAoB1T,mBACxB,kBACE,cAAC,EAAD,CACEiB,MAAOhK,EAAKgE,eACZiG,SAAU4jB,IACVxkB,UAAU,4BACVc,SAAS,QACTJ,KAAM,cAAC,GAAD,CAAgBnF,WAAYA,EAAY8nB,cAAeA,IAL/D,SAOE,qBAAKrjB,UAAS,0BAAqB/H,UAAUsD,GAAc,mBAAqB,IAAhF,SACE,mBAAGyE,UAAU,qBAAb,SACG/H,UAAUsD,GACP5E,EAAKgE,eADR,WAEO1C,OACFA,MAAMsD,GAAY,SAACkoB,GAAD,OAAeA,EAAU1sB,QAC3C,MAJL,aAUT,CAACytB,EAA+B7tB,EAAKgE,eAAgBY,IAGjDqlB,EAAkBzjB,uBACtB,iBACE,CACE,CACEoR,MAAOxX,EAAKiL,QACZqO,SAAUtZ,EAAKiL,QACfzJ,SAAUA,EAASyJ,QACnByV,wBAAwB,EACxB3d,QAAS,CACP,CACEsZ,oBACA/C,SAAU,aACVoH,wBAAwB,EACxBnX,MAAOA,EACPQ,SAAUrK,QAKpB,CAAC2c,EAAmB9S,IAGhBmkB,EAAqCtnB,uBACzC,SAACunB,GACC,MAAO,CACL,CACEpsB,UAAW,CAAEvB,KAAMJ,EAAK+C,MAAOnB,SAAUhC,EAASouB,QAClDlsB,gBAAiB,CACfmsB,eAAe,EACfnM,UAAW5f,EAAUif,kBACrBC,QAAS2M,EAAUhrB,QAGvB,CACEpB,UAAW,CAAEvB,KAAMJ,EAAKyE,gBAAiB7C,SAAUhC,EAASouB,QAC5DlsB,gBAAiB,CACfmsB,eAAe,EACfnM,UAAW5f,EAAUif,kBACrBC,QAAS2M,EAAUG,YAK3B,CAACluB,EAAK+C,MAAO/C,EAAKyE,kBAGd0pB,EAAqC3nB,uBAAY,WACrD,MAAO,CACL,CACE7E,UAAW,CAAEvB,KAAMJ,EAAKwD,SAAU5B,SAAUhC,EAASouB,QACrDlsB,gBAAiB,CACfmsB,eAAe,EACfnM,UAAW5f,EAAUsgB,sBACrBU,eAAgBljB,EAAK6E,KAAKC,eAC1Bge,WAAY,kBAAMxhB,MAAMssB,EAAY,aACpCnL,SAAUjf,EAAS6H,UAGvB,CACE1J,UAAW,CAAEvB,KAAMJ,EAAK0E,MAAO9C,SAAUhC,EAASouB,QAClDlsB,gBAAiB,CACfmsB,eAAe,EACfnM,UAAW5f,EAAUsgB,sBACrBU,eAAgBljB,EAAK6E,KAAKE,gBAC1B+d,WAAY,wBACVxhB,MAAA,UAAMA,OAAOssB,GAAY,SAACQ,GAAD,OAAWA,EAAM5qB,WAAaA,EAAS6H,kBAAhE,aAAM,EAAoEgjB,mBAAoB,UAChG5L,SAAU/d,EAAM2G,aAIrB,CAACrL,EAAKwD,SAAUxD,EAAK0E,MAAO1E,EAAK6E,KAAKC,eAAgB9E,EAAK6E,KAAKE,gBAAiB6oB,IAE9EU,EAAiC9nB,uBAAY,WAAO,IAAD,IACvD,OACE,UAAAlF,OAAA,UAAOA,OAAOssB,EAAY,CAAEpqB,SAAUA,EAAS6H,iBAA/C,aAAO,EAAoDgjB,mBAAoB,CAC7E3pB,MAAOA,EAAM2G,iBADf,eAEIkjB,sBAAuB,KAG5B,IAEGC,EAAehoB,uBACnB,SAACknB,GACC,OAAQA,GACN,KAAK1rB,EAAaysB,KAChB,IAAMV,EAAkDvmB,EACxD,MAAO,CACL,CACE1F,gBAAiB,CACfggB,UAAW5f,EAAUykB,QACrBsH,eAAe,EACfrI,cAAc,EACdG,eAAe,EACfL,eAAgBoI,EAAmCC,MAK3D,KAAK/rB,EAAa0sB,KAChB,MAAO,CACL,CACE5sB,gBAAiB,CACfggB,UAAW5f,EAAUykB,QACrBsH,eAAe,EACfrI,cAAc,EACdG,eAAe,EACfL,eAAgByI,OAKxB,KAAKnsB,EAAa2rB,KAClB,QAEE,MAAO,CACL,CAAE7rB,gBAFoD0F,EAEzB2V,YAAc,CAAE2E,UAAW5f,EAAUif,wBAK1E,CAAC2M,EAAoCK,EAAoC3mB,IAGrErE,EAAUwR,iBAAOsV,KACvB,EAAwD7jB,mBAASsnB,GAAjE,mBAAOR,EAAP,KAA6ByB,EAA7B,KACA,EAAwBvoB,mBAASooB,EAAatB,IAA9C,mBAAOhoB,EAAP,KAAashB,EAAb,KAEMoI,EAAqBpoB,uBACzB,SAACqoB,EAAuBC,GAAxB,uBACED,IAAkBrrB,EAAS6H,SACvB/J,WAAA,UACGA,MAAMwtB,EAAapJ,eAAgB,UADtC,iBACG,EAAuC5jB,uBAD1C,aACE,EAAwFghB,aAD1F,UAEGxhB,MAAMwtB,EAAapJ,eAAgB,UAFtC,iBAEG,EAAuC5jB,uBAF1C,aAEE,EAAwF2gB,UAF1F,UAIGnhB,MAAMwtB,EAAapJ,eAAgB,UAJtC,iBAIG,EAAuC5jB,uBAJ1C,aAIE,EAAwF2gB,SAE1F,KACN,IAGIsM,EAAuCvoB,uBAC3C,SAACwoB,EAAiCC,GAIhC,GAHID,GACFtC,EAAc,IAEZuC,EAAqB,CACvB,IAAMC,EAA0BZ,IAC3BhtB,UAAU4tB,IACbxC,EAAcwC,MAIpB,CAACZ,IAGGa,GAAsC3oB,uBAC1C,SAAC4oB,EAA2B1B,GAC1B,OAAQA,GACN,KAAK1rB,EAAaysB,KAAO,IAAD,UAChBK,EAAY,UAAGxtB,QAAQ4D,UAAX,aAAG,EAAepD,gBAC9BuH,GACJ,UAAC/H,MAAMwtB,EAAapJ,eAAgB,UAApC,iBAAC,EAAuC5jB,uBAAxC,eAAoFsf,UAAW,GAC3FiO,GACJ,UAAC/tB,MAAMwtB,EAAapJ,eAAgB,UAApC,iBAAC,EAAuC5jB,uBAAxC,eAAoFsf,UAAW,GACjG,OAAO9f,SAAS8tB,EAAY,CAAErsB,MAAOsG,EAAW6kB,OAAQmB,IAE1D,KAAKrtB,EAAa0sB,KAAO,IAAD,MAChBI,EAAY,UAAGxtB,QAAQ4D,UAAX,aAAG,EAAepD,gBAC9B+sB,GACJ,UAACvtB,MAAMwtB,EAAapJ,eAAgB,UAApC,iBAAC,EAAuC5jB,uBAAxC,eAAwF2gB,WAAY,GAChG6M,EAAaV,EAAmBC,EAAeC,GAC/CE,EAAyBH,IAAkBrrB,EAAS6H,QACpD4jB,EAAsBK,IAAe5qB,EAAM2G,QAIjD,OAHA7H,EAAS6H,QAAUwjB,EACnBnqB,EAAM2G,QAAUikB,EAChBP,EAAqCC,EAAwBC,GACtD3tB,SAAS8tB,EAAY,CAAE5rB,SAAUqrB,EAAenqB,MAAO4qB,IAEhE,KAAKttB,EAAa2rB,KAClB,QAAU,IAAD,EACP,OAAOrsB,SAAS8tB,EAAY,CAAEjS,WAAU,UAAE7b,QAAQ4D,UAAV,aAAE,EAAepD,qBAI/D,CAAC8sB,EAAoB1pB,EAAM6pB,IAGvBQ,GAAqC/oB,uBAAY,WACrD,IAesB,EAEf,IAjBAqgB,EAAP,YAA2B1jB,EAAQkI,QAAnC,MAEMqb,EAAmCyI,GACvC,CACEptB,IAAKyF,EAAMzF,IACX+f,UAAWta,EAAMsa,UACjB1hB,KAAMymB,EAAiBnN,SACvB9X,SAAUilB,EAAiBjlB,SAC3B8rB,aAAcR,EACdO,iBAAkB7oB,EAClB4oB,gBAAiB7jB,GAEnBujB,GAGE1lB,EAAM8Z,WACR,UAAA9Z,EAAM+Z,qCAAN,cAAA/Z,EAAsClG,OAAOolB,EAAmB,CAAC,OAAQ,eAEzErV,EAAkBjF,EAAOlH,IACzB,UAAA6c,OAAOC,cAAP,mBAAewN,6CAAf,gBAAuD9I,MAExD,CAACyI,GAAqC9d,EAAmBzM,EAAY4C,EAAO0lB,EAAsBhoB,EAAMyE,IAErGod,GAAsBvgB,uBAAY,WACtC,OAAOgB,EAAM8Z,WAAa5hB,EAAsBse,UAAYte,EAAsBkW,OACjF,CAACpO,EAAM8Z,aAEJ6L,GAAuB3mB,uBAC3B,SAACiR,GACC,IAAMgY,EAAOhY,EACbkX,EAAwBc,GAExBjJ,EAAQ,CAAC,CAAE1kB,gBAAiB,CAAEggB,UAAW5f,EAAU8I,cAEnD4I,YAAW,WACT4S,EAAQgI,EAAaiB,MACpB,KAEL,CAACjB,IAGGzY,GAAkBvP,uBACtB,YAA2C,IAAD,EAAxCqgB,EAAwC,oBACxC,UAAArf,EAAM6Z,iCAAN,cAAA7Z,EAAkCqf,EAAiBjP,MAAiBiP,EAAiBjlB,UACrFkM,EAAS+Y,EAAiBld,OAE1B,IAAOyiB,EAAP,YAAkCjpB,EAAQkI,QAA1C,MACA+gB,EAAwBxU,MAAQiP,EAAiBjP,MACjDwU,EAAwB1S,SAAWmN,EAAiBnN,SACpD0S,EAAwBxqB,SAAWilB,EAAiBjlB,SACpD2tB,OAEF,CAACpsB,EAASqE,EAAO+nB,KAGnB7jB,qBAAU,WAER6jB,OACC,CAACrqB,EAAMqqB,KAEV7jB,qBAAU,WACRvI,EAAQkI,QAAU4e,MAGjB,CAACrlB,IAEJ,IAAMiU,GAAyBrS,uBAAY,SAAChF,GAE1C,OADAmtB,EAAwB3sB,EAAa2rB,MAC9B9rB,EAAWL,KACjB,IAEH,OACE,qBAAK6H,UAAS,8BAAyB7B,EAAMzF,KAA7C,SACE,cAAC,GAAD,CACEsV,qBAAsB,CACpB,CACEnX,MAAOoB,YAAYtB,EAAKmE,UACxBhE,MAAO,CAAC,CAAEC,KAAMJ,EAAKK,cAAcQ,MAAON,KAAMZ,EAAemB,aAGnEqC,QAASA,EAAQkI,QACjB0K,gBAAiBA,GACjB7Q,KAAMA,EACNqT,aAAciO,EACd/H,aAAc,EACd9I,iBAAkBoR,KAClBxI,eAAgBxV,mBACd,kBACE,cAAC,GAAD,CACEmkB,qBAAsBA,EACtBC,qBAAsBA,OAG1B,CAACA,GAAsBD,IAEzB1O,YAAa,CAAE5Z,WAAY2f,IAC3B1L,uBAAwBA,QC3TnB6W,GAAqE,SAAC,GAQ5E,IAPLrL,EAOI,EAPJA,mBACAF,EAMI,EANJA,oBACAC,EAKI,EALJA,qBACA/C,EAII,EAJJA,0BACAiD,EAGI,EAHJA,gBAGI,IAFJhD,kBAEI,SADJC,EACI,EADJA,8BAEQvhB,EAAS8F,IAAT9F,KAEFmL,EAAgBpF,qBAAW4E,GAE3BwS,EAAa7b,SAAS+iB,EAAoB,CAC9CtiB,IAAKsiB,EAAmBtiB,KAAOipB,OAC/B1J,aACAD,4BACAE,kCAGIoO,EAAsB,SAAC7N,GAAD,OAA4BxgB,UAAUwgB,IAAcA,IAAc5f,EAAU8I,WAExG,EAAkD5E,mBAASupB,EAAoBxS,EAAW2E,YAA1F,mBAAO8N,EAAP,KAA0BC,EAA1B,KAEAnkB,qBAAU,WACRmkB,EAAqBF,EAAoBtL,EAAmBvC,cAC3D,CAACuC,EAAmBvC,YAEvB,MC3EK,WAQL,IAAMgO,EAAanb,iBAAuB,MAE1C,EAAwBvO,mBAAS,OAAjC,mBAAO2pB,EAAP,KAAaC,EAAb,KACA,EAAwB5pB,mBAAS,OAAjC,mBAAO6pB,EAAP,KAAaC,EAAb,KACA,EAAoD9pB,oBAAS,GAA7D,mBAAO+pB,EAAP,KAA2BC,EAA3B,KACMC,EAAc1b,mBAEd2b,EAAkB9pB,uBAAY,WAClC2pB,GAAsBC,GAAsB,KAC3C,CAACD,IAEEI,EAAkB/pB,uBACtB,SAACC,GACKqpB,EAAWzkB,SAAWykB,EAAWzkB,UAAY5E,EAAMW,SACrDX,EAAM0O,iBACNkb,EAAYhlB,QAAU5E,EAAMW,OAC5B4oB,EAAQ,GAAD,OAAIvpB,EAAM+pB,MAAV,OACPN,EAAQ,GAAD,OAAIzpB,EAAMgqB,MAAV,OACPL,GAAsB,MAG1B,CAACJ,EAASE,IAcZ,OAXAxkB,qBAAU,WAIR,OAHAlI,SAASmO,iBAAiB,QAAS2e,GACnC9sB,SAASmO,iBAAiB,cAAe2e,GACzC9sB,SAASmO,iBAAiB,cAAe4e,GAClC,WACL/sB,SAASoO,oBAAoB,QAAS0e,GACtC9sB,SAASoO,oBAAoB,cAAe0e,GAC5C9sB,SAASoO,oBAAoB,cAAe2e,OAIzC,CACLG,eAAgBZ,EAChBa,gBAAiBZ,EACjBa,gBAAiBX,EACjBY,sBAAuBV,EACvBW,yBAA0BV,EAC1BW,cAAeV,EAAYhlB,SDiCzB2lB,GANFN,EADF,EACEA,eACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,gBACAC,EAJF,EAIEA,sBACAC,EALF,EAKEA,yBACAC,EANF,EAMEA,cAGIE,EAAmBloB,mBAAQ,WAC/B,OAAQoU,EAAW2E,WACjB,KAAK5f,EAAUif,kBACb,OAAO,cAAC,GAAD,eAAwBhE,IACjC,KAAKjb,EAAUsgB,sBACb,OAAO,cAAC,GAAD,eAA4BrF,IACrC,KAAKjb,EAAUgvB,SACb,OAAO,cAAC,GAAD,eAAyB/T,IAClC,KAAKjb,EAAUykB,QACb,OAAO,cAAC,GAAD,eAAwBxJ,IACjC,KAAKjb,EAAUooB,cACb,OAAO,cAAC,GAAD,eAA8BnN,IACvC,KAAKjb,EAAUivB,WACb,OAAO,cAAC,GAAD,eAA2BhU,IACpC,KAAKjb,EAAUspB,KACb,OAAO,cAAC,GAAD,eAAqBrO,IAC9B,KAAKjb,EAAUkvB,SACb,OAAO,cAAC,GAAD,eAAwB9vB,WAAW6b,EAAY,CAAEuQ,aAAc1rB,EAAa2rB,SACrF,QACE,OAAOxQ,EAAW2E,aAIrB,CAAC3E,EAAW2E,YAETuP,EAA0B7qB,uBAC9B,kBACEjE,OAAOqE,OAAO1E,GAAWM,QACvB,SAACsf,GAAD,OAAgBxgB,WAAW,CAACY,EAAU8I,UAAW9I,EAAUsgB,uBAAwBV,QAEvF,IAGIwP,EAAuB9qB,uBAC3B,kBACElF,MAAM+vB,KAA2B,SAACxqB,GAAD,OAC/B,cAACkR,GAAA,EAAD,CAAoBN,OAAQ5Q,EAA5B,SACGA,GADYA,QAInB,CAACwqB,IAGGE,EAAoB/qB,uBAAY,kBAAM8d,MAAkC,CAACA,IAEzEkN,EAAuBhrB,uBAAY,WAAO,IAAD,IAC7C,2BAAO2E,EAAcC,gCAArB,aAAO,EAAwCC,eAA/C,QAA0DkmB,IACzD,CAACA,EAAmBpmB,EAAcC,2BAE/BqmB,EAAoBjrB,uBACxB,SAACC,EAA0BgR,GACzBoY,GAAqB,GAErB1L,EAD0B1M,KAG5B,CAAC0M,IAGGuN,EAAyBlrB,uBAC7B,kBACE,cAAC,EAAD,CACEwD,MAAOhK,EAAKsF,gBACZwE,eAAgBynB,EAChBtnB,SAAUunB,IACVnoB,UAAU,qBACVa,cAAY,EACZH,KACE,cAACyN,GAAA,EAAD,CAAMtP,SAAUupB,EAAhB,SACE,cAAC3Z,GAAA,EAAD,UAAWwZ,YAKnB,CAACtxB,EAAKsF,gBAAiBisB,EAAmBC,EAAsBC,EAAmBH,IAG/EK,EAAqBnrB,uBAAY,WACrCqpB,GAAqB,GACrBiB,GAAyB,GACzB1M,MACC,CAACA,EAAsB0M,IAEpBc,EAAmBprB,uBACvB,wBACE,qBACE6C,UAAU,+CACVI,MAAO,CACLooB,IAAKjB,EACLkB,KAAMnB,GAJV,SAOE,cAACnZ,GAAA,EAAD,CAAMnO,UAAU,qBAAhB,SACE,cAACsO,GAAA,EAAD,CAAWC,OAAO,iBAACuF,QAAD,IAACA,OAAD,EAACA,EAAY2E,iBAAb,QAA0B5f,EAAU8I,WAAW+mB,oBAAjE,SACE,cAACja,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAUC,YAAa4X,EAAmBxmB,QAASuoB,EAAnD,SACG3xB,EAAKa,kBAOlB,CAAC+vB,EAAiBD,EAAiBxT,EAAW2E,UAAW8N,EAAmB+B,EAAoB3xB,EAAKa,QAGjGmxB,EAAiCjpB,mBAAQ,WAC7C,IAAMkpB,EAAoB3wB,QAAA,OAASyvB,QAAT,IAASA,OAAT,EAASA,EAA+BxjB,QAAQ,UACpE2kB,GAAkC5wB,QAAA,OAASyvB,QAAT,IAASA,OAAT,EAASA,EAA+BxjB,QAAQ,2BAClF4kB,EAA+BF,GAAqBC,EAE1D,OAAQ7N,EAAmB4J,eAAiB4C,GAAyBsB,IACpE,CAACtB,EAAuBxM,EAAmB4J,cAAe8C,IAE7D,OACE,sBACE1nB,UAAS,8BAAyBumB,EAAoB,sBAAwB,0BAC9Era,IAAKmb,EAFP,UAIGd,EAAoBqB,EAAmBjxB,EAAKoF,iBAC3CwqB,EAA+C,KAA3B8B,IACrBM,EAAiCJ,IAAqB,SEnMhDQ,GAAyF,SACpG5qB,GAEA,IAAMyc,EAAyBtP,iBAAuB,MAEtD,EAAoDvO,mBAASoB,EAAM6c,oBAAnE,mBAAOA,EAAP,KAA2BgO,EAA3B,KAEMC,EAAkC9rB,uBAAY,SAAC+rB,EAAaC,GAChEH,GAAsB,SAACI,GAAD,mBAAC,eAClBA,GADiB,IAEpBryB,KAAMmyB,EACN3wB,SAAU4wB,SAEX,IAEGrO,EAAsB3d,uBAAY,SAACsb,GACvCuQ,GAAsB,SAACI,GAAD,mBAAC,eAClBA,GADiB,IAEpB3Q,UAAWA,SAEZ,IAEGsC,EAAuB5d,uBAAY,WACvC6rB,GAAsB,SAACI,GAAiD,IAAD,IAC/DnN,EAAoB,CACxBvjB,IAAK0wB,EAA2B1wB,IAChC3B,KAAMqyB,EAA2BryB,KACjCwB,SAAU6wB,EAA2B7wB,SACrCkgB,UAAW5f,EAAU8I,WAGvB,OADA,UAAA+W,OAAOC,cAAP,mBAAe0Q,iCAAf,gBAA2CpN,GACpCA,OAER,IAEGpB,EAA0B1d,uBAAY,WAC1C,OAAOyd,EAAuB5Y,UAC7B,IAEH,OACE,sBAAKhC,UAAU,uBAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,mBAAhB,SAAoCgb,EAAmBjkB,OACvD,uBAAMiJ,UAAU,kBAAhB,cAAoCgb,EAAmBvC,WAAa5f,EAAU8I,UAA9E,UAGF,qBACE3B,UAAU,2BACVkM,IAAK0O,EACLjd,yBAAuB,uBAHzB,SAKE,cAAC,GAAD,CACEqd,mBAAoBA,EACpBF,oBAAqBA,EACrBC,qBAAsBA,EACtB/C,0BAA2BiR,EAC3BhO,gBAAiBJ,UC3CrByO,GAA4E,SAChFnrB,GAEA,MAA4EpB,oBAAS,kBAAM9E,cAA3F,mBAAO6e,EAAP,KAAuCC,EAAvC,KACMhV,EAA2BuJ,iBAAuB,MACxD,EAA4CvO,mBAASgG,EAAO5E,EAAMqa,uBAAlE,mBAAOlO,EAAP,KAAuBtC,EAAvB,KAEA,OAAOtI,mBACL,kBACE,cAAC,2BAAD,CACE6pB,SAAUrtB,EACVstB,aAAcntB,EACdotB,cAAeC,UAAUC,SACzBC,IAAKrtB,EAJP,SAME,cAAC+E,EAA6BuoB,SAA9B,CACEnsB,MAAO,CACL6mB,WAAYpmB,EAAMomB,WAClBja,iBACAtC,oBACAjG,2BACA+U,iCACAC,qCAPJ,SAUE,cAAC,EAAD,UACE,qBAAK/W,UAAU,0BAA0BkM,IAAKnK,EAA9C,SACE,cAAC,GAAD,eAAyB5D,EAAMqa,iCAOzC,CAACra,EAAMqa,wBClDXE,OAAOoR,4BAA8B,SAACC,EAAkBhE,GACtDiE,SACE,cAAC,GAAD,CAAuBxR,qBAAsB,CAAEwC,mBAAoB+K,KACnE5rB,SAAS8vB,eAAeF,KCQrB,IAAMG,GAA+B,WAE1C,IAAMlP,EAAsC,CAC1CjkB,KAAM,kBACNwB,SAAUhC,EAASoL,WAGf4iB,EAAa,CACjB,CACEpqB,SAAU,cACV6qB,mBAAoB,CAClB,CACE3pB,MAAO,iBACP6pB,oBAAqB,CACnB,CAAEnuB,KAAM,SAAUwB,SAAUhC,EAAS4zB,KACrC,CAAEpzB,KAAM,SAAUwB,SAAUhC,EAAS4zB,KACrC,CAAEpzB,KAAM,SAAUwB,SAAUhC,EAAS4zB,SAK7C,CACEhwB,SAAU,kBACV6qB,mBAAoB,CAClB,CACE3pB,MAAO,mBACP6pB,oBAAqB,CACnB,CAAEnuB,KAAM,KAAMwB,SAAUhC,EAAS6zB,QACjC,CAAErzB,KAAM,KAAMwB,SAAUhC,EAAS6zB,aAO3C,EAAkDrtB,mBAASie,GAA3D,mBAAOiB,EAAP,KAA0BoO,EAA1B,KAEM7R,EAAiD,CAAEwC,sBAczD,OAXAtC,OAAOC,OAAS,CACd0Q,0BAA2B,SAACtD,GAAD,OAAiCsE,EAAqBtE,IACjFnN,qCAAsC,SAACmN,GAAD,OAAwCsE,EAAqBtE,IACnG5L,sCAAuC,SAAC4L,GAAD,OAA+BsE,EAAqBtE,IAC3FxI,qCAAsC,SAACwI,GAAD,OAA8BsE,EAAqBtE,IACzF1D,kCAAmC,SAAC0D,GAAD,OAA2BsE,EAAqBtE,IACnFlD,wCAAyC,SAACkD,GAAD,OAAiCsE,EAAqBtE,IAC/FI,sCAAuC,SAACJ,GAAD,OAA+BsE,EAAqBtE,IAC3F7E,2CAA4C,SAAC6E,GAAD,OAAoCsE,EAAqBtE,KAIrG,sBAAK/lB,UAAU,WAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,GAAD,CAAuBwY,qBAAsBA,EAAsB+L,WAAYA,MAEjF,qBAAKvkB,UAAU,eAAf,SACE,8BAAMiD,KAAKC,UAAU+Y,EAAmB,KAAM,WAMtD+N,SAAgB,cAAC,GAAD,IAAS7vB,SAAS8vB,eAAe,W","file":"static/js/main.6cdcdc0d.chunk.js","sourcesContent":["/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum BuiltinAggregation {\n  \"<None>\" = \"\",\n  SUM = \"+\",\n  COUNT = \"#\",\n  MIN = \"<\",\n  MAX = \">\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport * as React from \"react\";\nimport { Column as ReactTableColumn, DataRecord, Row as ReactTableRow } from \"react-table\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** Gets the prefix to be used for the next column name */\n  getColumnPrefix?: (groupType?: string) => string;\n  /** Optional label, that may depend on column, to be used for the popover that appears when clicking on column header */\n  editColumnLabel?: string | { [groupType: string]: string };\n  /** Top-left cell custom content */\n  controllerCell?: string | JSX.Element;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: ReactTableColumn[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: ReactTableColumn[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration?: TableHandlerConfiguration;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Number of levels in the header, 0-based */\n  headerLevels?: number;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup?: boolean;\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey?: (row: ReactTableRow) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey?: (column: ReactTableColumn) => string;\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n}\n\n/** Possible status for the visibility of the Table's Header */\nexport enum TableHeaderVisibility {\n  Full,\n  LastLevel,\n  SecondToLastLevel,\n  None,\n}\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n  RowClear,\n  RowDuplicate,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type GroupOperationsByColumnType = { [columnGroupType: string]: GroupOperations[] };\n\nexport type TableHandlerConfiguration = GroupOperations[] | GroupOperationsByColumnType;\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n  /** Set column width */\n  setWidth?: (width: string | number) => void;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport { ExpressionProps } from \"./ExpressionProps\";\nimport * as _ from \"lodash\";\nimport { DataRecord, Row } from \"react-table\";\nimport { TableHandlerConfiguration, TableOperation } from \"./Table\";\nimport { BoxedExpressionEditorI18n } from \"../i18n\";\n\nexport interface EntryInfo {\n  /** Entry name */\n  name: string;\n  /** Entry data type */\n  dataType: DataType;\n}\n\nexport interface ContextEntryRecord {\n  entryInfo: EntryInfo;\n  /** Entry expression */\n  entryExpression: ExpressionProps;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel?: string;\n  /** True, for synchronizing name and dataType parameters, between entryInfo and entryExpression */\n  nameAndDataTypeSynchronized?: boolean;\n  /** Callback to be invoked on expression resetting */\n  onExpressionResetting?: () => void;\n}\n\nexport type ContextEntries = ContextEntryRecord[];\n\nexport const DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nexport const DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const getHandlerConfiguration = (\n  i18n: BoxedExpressionEditorI18n,\n  groupName: string\n): TableHandlerConfiguration => [\n  {\n    group: groupName,\n    items: [\n      { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n      { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n      { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n    ],\n  },\n];\n\nexport const generateNextAvailableEntryName = (\n  entryInfos: EntryInfo[],\n  namePrefix: string,\n  lastIndex: number = entryInfos.length\n): string => {\n  const candidateName = `${namePrefix}-${lastIndex === 0 ? 1 : lastIndex}`;\n  const entryWithCandidateName = _.find(entryInfos, { name: candidateName });\n  return entryWithCandidateName ? generateNextAvailableEntryName(entryInfos, namePrefix, lastIndex + 1) : candidateName;\n};\n\nexport const getEntryKey = (row: Row): string => {\n  const entryRecord = row.original as ContextEntryRecord;\n  return entryRecord.entryInfo.name + entryRecord.entryInfo.dataType;\n};\n\nexport const resetEntry = (row: DataRecord): DataRecord => ({\n  ...row,\n  entryExpression: { uid: (row.entryExpression as ExpressionProps).uid },\n});\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const getEnumKeyByEnumValue = <T extends { [index: string]: string }>(\n  myEnum: T,\n  enumValue: string\n): keyof T | null => {\n  const keys = Object.keys(myEnum).filter((x) => myEnum[x] == enumValue);\n  return keys.length > 0 ? keys[0] : null;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps } from \"./ExpressionProps\";\nimport { EntryInfo } from \"./ContextEntry\";\n\nexport enum FunctionKind {\n  Feel = \"FEEL\",\n  Java = \"JAVA\",\n  Pmml = \"PMML\",\n}\n\nexport interface FeelFunctionProps {\n  /** Feel Function */\n  functionKind: FunctionKind.Feel;\n  /** The Expression related to the function */\n  expression?: ExpressionProps;\n}\n\nexport interface JavaFunctionProps {\n  /** Java Function */\n  functionKind: FunctionKind.Java;\n  /** Java class */\n  class?: string;\n  /** Method signature */\n  method?: string;\n}\n\ninterface PMMLParam {\n  document: string;\n  modelsFromDocument?: {\n    model: string;\n    parametersFromModel?: EntryInfo[];\n  }[];\n}\n\nexport type PMMLParams = PMMLParam[];\n\nexport interface PmmlFunctionProps {\n  /** Pmml Function */\n  functionKind: FunctionKind.Pmml;\n  /** Selected PMML document */\n  document?: string;\n  /** Selected PMML model */\n  model?: string;\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HitPolicy {\n  Unique = \"UNIQUE\",\n  First = \"FIRST\",\n  Priority = \"PRIORITY\",\n  Any = \"ANY\",\n  Collect = \"COLLECT\",\n  RuleOrder = \"RULE ORDER\",\n  OutputOrder = \"OUTPUT ORDER\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  PMMLLiteralExpression = \"PMML Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  addParameter: \"Add parameter\",\n  builtInAggregator: \"Builtin Aggregator\",\n  choose: \"Choose...\",\n  class: \"class\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionRule: \"DECISION RULE\",\n  decisionTable: \"Decision Table\",\n  delete: \"Delete\",\n  document: \"document\",\n  editClause: {\n    input: \"Edit Input Clause\",\n    output: \"Edit Output Clause\",\n  },\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editHitPolicy: \"Edit Hit Policy\",\n  editParameter: \"Edit Parameter\",\n  editParameters: \"Edit parameters\",\n  editRelation: \"Edit Relation\",\n  enterFunction: \"Enter function\",\n  function: \"Function\",\n  hitPolicy: \"Hit Policy\",\n  inputClause: \"INPUT CLAUSE\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  methodSignature: \"method signature\",\n  model: \"model\",\n  name: \"Name\",\n  outputClause: \"OUTPUT CLAUSE\",\n  parameters: \"PARAMETERS\",\n  pmml: {\n    firstSelection: \"First select PMML document\",\n    secondSelection: \"Second select PMML model\",\n  },\n  relation: \"Relation\",\n  rowOperations: {\n    clear: \"Clear\",\n    delete: \"Delete\",\n    duplicate: \"Duplicate\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  ruleAnnotation: \"RULE ANNOTATION\",\n  selectExpression: \"Select expression\",\n  selectFunctionKind: \"Select Function Kind\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { DataType } from \"../../api\";\n\nexport interface DataTypeSelectorProps {\n  /** The pre-selected data type */\n  selectedDataType: DataType;\n  /** On DataType selection callback */\n  onDataTypeChange: (dataType: DataType) => void;\n  /** By default the menu will be appended inline, but it is possible to append on the parent or on other elements */\n  menuAppendTo?: HTMLElement | \"inline\" | (() => HTMLElement) | \"parent\";\n}\n\nexport const DataTypeSelector: React.FunctionComponent<DataTypeSelectorProps> = ({\n  selectedDataType,\n  onDataTypeChange,\n  menuAppendTo,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      onDataTypeChange(selection);\n    },\n    [onDataTypeChange]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key} data-ouia-component-id={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <Select\n      menuAppendTo={menuAppendTo}\n      ouiaId=\"edit-expression-data-type\"\n      variant={SelectVariant.typeahead}\n      typeAheadAriaLabel={i18n.choose}\n      onToggle={onDataTypeSelectToggle}\n      onSelect={onDataTypeSelect}\n      onFilter={onDataTypeFilter}\n      isOpen={dataTypeSelectOpen}\n      selections={selectedDataType}\n      hasInlineFilter\n      inlineFilterPlaceholderText={i18n.choose}\n    >\n      {getDataTypes()}\n    </Select>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useMemo, useState } from \"react\";\nimport * as _ from \"lodash\";\n\nexport interface EditTextInlineProps {\n  /** Text value */\n  value: string;\n  /** Callback executed when text changes */\n  onTextChange: (updatedValue: string) => void;\n}\n\nexport const EditTextInline: React.FunctionComponent<EditTextInlineProps> = ({ onTextChange, value }) => {\n  const [toggle, setToggle] = useState(true);\n\n  const onValueBlur = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const changedText = event.target.value;\n      if (_.size(changedText.trim())) {\n        onTextChange(changedText);\n      }\n      setToggle(true);\n    },\n    [onTextChange]\n  );\n\n  const onKeyDown = useMemo(\n    () => (event: React.KeyboardEvent<HTMLInputElement>) => {\n      const pressedEnter = _.lowerCase(event.key) === \"enter\";\n      const pressedEscape = _.lowerCase(event.key) === \"escape\";\n      if (pressedEnter) {\n        event.currentTarget.blur();\n      }\n      if (pressedEscape) {\n        setToggle(true);\n      }\n    },\n    []\n  );\n\n  const onClick = useMemo(\n    () => () => {\n      setToggle(false);\n    },\n    []\n  );\n\n  return toggle ? (\n    <p className=\"pf-u-text-truncate\" onClick={onClick}>\n      {value}\n    </p>\n  ) : (\n    <input\n      type=\"text\"\n      autoFocus\n      defaultValue={value}\n      onBlur={onValueBlur}\n      style={{ borderRadius: \"0.5em\", width: \"100%\" }}\n      onKeyDown={onKeyDown}\n    />\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Additional classname to be used for the popover */\n  className?: string;\n  /** True to have width automatically computed */\n  hasAutoWidth?: boolean;\n  /** Popover min width */\n  minWidth?: string;\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n  className,\n  hasAutoWidth,\n  minWidth,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className={`popover-menu-selector${className ? \" \" + className : \"\"}`}\n      hasAutoWidth={hasAutoWidth}\n      minWidth={minWidth}\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { PMMLParams } from \"../api\";\n\nexport interface BoxedExpressionGlobalContextProps {\n  pmmlParams?: PMMLParams;\n  supervisorHash: string;\n  setSupervisorHash: (hash: string) => void;\n  boxedExpressionEditorRef: React.RefObject<HTMLDivElement>;\n  currentlyOpenedHandlerCallback: React.Dispatch<React.SetStateAction<boolean>>;\n  setCurrentlyOpenedHandlerCallback: React.Dispatch<\n    React.SetStateAction<React.Dispatch<React.SetStateAction<boolean>>>\n  >;\n}\n\nexport const BoxedExpressionGlobalContext = React.createContext<BoxedExpressionGlobalContextProps>(\n  {} as BoxedExpressionGlobalContextProps\n);\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DataTypeSelector } from \"./DataTypeSelector\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n  appendTo = appendTo ?? globalContext.boxedExpressionEditorRef?.current ?? undefined;\n\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeChange = useCallback(\n    (dataType: DataType) => {\n      setDataType(dataType);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: dataType,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <DataTypeSelector selectedDataType={dataType} onDataTypeChange={onDataTypeChange} />\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_MIN_WIDTH = 150;\n\n/*\n * Returns a valid width value.\n */\nexport const widthValue = (width: number | string | undefined | null): number => {\n  return Math.max(Math.round(parseFloat(width + \"\")), DEFAULT_MIN_WIDTH);\n};\n\n/*\n * Generates a global supervisor hash for a given object.\n */\nexport const hashfy = (obj = {}): string => {\n  return JSON.stringify(obj);\n};\n\n/*\n * Propagate Cell width from DOM to React state.\n */\nexport const notifyCell = (id: string, width: number = DEFAULT_MIN_WIDTH): void => {\n  document.dispatchEvent(\n    new CustomEvent(id, {\n      detail: { width },\n    })\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport { notifyCell, widthValue } from \"../common\";\n\nconst RESIZER_PADDING = 14;\nconst BORDER = 1;\n\nexport class Cell {\n  private id?: string;\n  private lastColumn?: boolean;\n  private rect?: DOMRect;\n  private parentRow?: HTMLTableRowElement | null;\n\n  constructor(public element: HTMLElement, public children: Cell[], public depth: number) {}\n\n  getId(): string {\n    if (!this.id) {\n      this.id = _.first([].slice.call(this.element.classList).filter((c: string) => c.match(/uuid-/g))) || \"\";\n    }\n    return this.id;\n  }\n\n  getRect(): DOMRect {\n    if (!this.rect) {\n      this.rect = this.element.getBoundingClientRect();\n    }\n    return this.rect;\n  }\n\n  isLastColumn(): boolean {\n    if (!this.lastColumn) {\n      this.lastColumn = this.getParentRow()?.lastChild === this.element.closest(\"th, td\");\n    }\n    return this.lastColumn;\n  }\n\n  setWidth(width: number): void {\n    const cellWidth = widthValue(width);\n    notifyCell(this.getId(), cellWidth);\n    this.element.style.width = cellWidth + \"px\";\n  }\n\n  refreshWidthAsParent(): void {\n    if (this.children.length > 0) {\n      this.setWidth(this.fetchChildWidth() + RESIZER_PADDING);\n    }\n  }\n\n  refreshWidthAsLastColumn(): void {\n    if (!this.isLastColumn()) {\n      return;\n    }\n\n    const parentRect = this.getParentRow()!.getBoundingClientRect();\n\n    if (parentRect) {\n      this.setWidth(Math.round(parentRect.right) - Math.round(this.getRect().x) - BORDER);\n    }\n  }\n\n  refreshWidthAsLastGroupColumn(): void {\n    if (!this.isColSpanHeader()) {\n      return;\n    }\n\n    const refSibling = this.getParent()?.parentElement?.nextSibling;\n\n    if (!refSibling) {\n      return;\n    }\n\n    const children = [].slice.call((refSibling as HTMLElement).querySelectorAll(`.${this.getHeaderType()}`));\n    const childrenRects = children.map((c: HTMLElement) => c.getBoundingClientRect());\n    const x = Math.min(...childrenRects.map((c: DOMRect) => c.x));\n    const right = Math.max(...childrenRects.map((c: DOMRect) => c.right));\n\n    this.setWidth(right - x - BORDER * 2);\n  }\n\n  isColSpanHeader(): boolean {\n    return this.getParent()?.classList.contains(\"colspan-header\") || false;\n  }\n\n  private getHeaderType() {\n    const cssClasses = (this.getParent()?.classList || []) as DOMTokenList;\n\n    if (cssClasses.contains(\"input\")) {\n      return \"input\";\n    }\n\n    if (cssClasses.contains(\"output\")) {\n      return \"output\";\n    }\n\n    return \"annotation\";\n  }\n\n  private getParent() {\n    return this.element.parentElement;\n  }\n\n  private getParentRow() {\n    if (!this.parentRow) {\n      this.parentRow = this.element.closest(\"tr\");\n    }\n    return this.parentRow;\n  }\n\n  private fetchChildWidth() {\n    const thead = this.element.querySelector(\"thead, tbody\");\n    return widthValue(thead?.getBoundingClientRect().width);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cell } from \"./\";\n\nexport const CELL_CSS_SELECTOR = \".react-resizable\";\n\nexport class DOMSession {\n  private cells: Cell[] | undefined;\n\n  getCells(): Cell[] {\n    if (this.cells === undefined) {\n      this.cells = this.buildCells();\n    }\n    return this.cells;\n  }\n\n  private buildCells() {\n    const cells: Cell[] = [];\n    this.fetchCellElements(document.body).forEach((cellElement) => {\n      this.buildCell(cellElement, cells, 0);\n    });\n    return cells;\n  }\n\n  private buildCell(htmlElement: HTMLElement, cells: Cell[], depthLevel: number): Cell {\n    const exitingElement = cells.find((c) => c.element === htmlElement);\n    if (exitingElement) {\n      return exitingElement;\n    }\n\n    const cell = new Cell(\n      htmlElement,\n      this.fetchCellElements(htmlElement)\n        .map((child) => this.buildCell(child, cells, depthLevel + 1))\n        .filter((c) => c.depth == depthLevel + 1),\n      depthLevel\n    );\n\n    cells.push(cell);\n\n    return cell;\n  }\n\n  private fetchCellElements(parent: HTMLElement): HTMLElement[] {\n    const htmlElements = parent.querySelectorAll(CELL_CSS_SELECTOR);\n    return [].slice.call(htmlElements);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMSession, Cell } from \"../dom\";\n\n/*\n * =============================================================================\n * React state + hooks abstractions have a level of granularity that limits the\n * frame hate in the context of resizable boxed expression cells.\n *\n * This component intentionally accesses DOM elements, but it also propagates\n * new width information across React components once users commit an action.\n * =============================================================================\n */\nexport const applyDOMSupervisor = (): void => {\n  new SupervisorExecution().execute();\n};\n\nclass SupervisorExecution {\n  domSession: DOMSession;\n\n  constructor() {\n    this.domSession = new DOMSession();\n  }\n\n  execute() {\n    const cells = this.domSession.getCells().sort((c1, c2) => c2.depth - c1.depth);\n\n    cells.forEach(this.refreshWidthAsParent);\n    cells.forEach(this.refreshWidthAsLastGroupColumn);\n    cells.sort((c1, c2) => c1.depth - c2.depth).forEach(this.refreshWidthAsLastColumn);\n  }\n\n  private refreshWidthAsParent(cell: Cell) {\n    cell.refreshWidthAsParent();\n  }\n\n  private refreshWidthAsLastColumn(cell: Cell) {\n    cell.refreshWidthAsLastColumn();\n  }\n\n  private refreshWidthAsLastGroupColumn(cell: Cell) {\n    cell.refreshWidthAsLastGroupColumn();\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useLayoutEffect, useMemo, useState } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport { v4 as uuid } from \"uuid\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DEFAULT_MIN_WIDTH, widthValue as commonWidthValue } from \"./common\";\nimport { Cell, DOMSession } from \"./dom\";\nimport \"./Resizer.css\";\n\nexport interface ResizerProps {\n  width: number;\n  height?: number | \"100%\";\n  minWidth?: number;\n  onHorizontalResizeStop?: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height = \"100%\",\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  /*\n   * States\n   */\n\n  const [resizerWidth, setResizerWidth] = useState(width);\n  const [initalResizerWidth, setInitialResizerWidth] = useState(0);\n  const [cells, setCells] = useState<Cell[]>([]);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  /*\n   * Memos\n   */\n\n  const id = useMemo(() => {\n    return `uuid-${uuid()}`;\n  }, []);\n\n  const resizerMinWidth = useMemo(() => {\n    return minWidth ?? DEFAULT_MIN_WIDTH;\n  }, [minWidth]);\n\n  const resizerClassName = useMemo(() => {\n    const heightClass = height === \"100%\" ? \"height-based-on-content\" : \"\";\n    return `${heightClass} ${id}`;\n  }, [height, id]);\n\n  /*\n   * Effects\n   */\n\n  useLayoutEffect(() => {\n    function listener(event: CustomEvent) {\n      const width = Math.round(event.detail.width);\n      setResizerWidth(width);\n      onHorizontalResizeStop?.(width);\n    }\n\n    document.addEventListener(id, listener);\n    return () => {\n      document.removeEventListener(id, listener);\n    };\n  }, [id, onHorizontalResizeStop, resizerWidth]);\n\n  /*\n   * Callbacks\n   */\n\n  const widthValue = useCallback(commonWidthValue, []);\n\n  const getApplicableCells = useCallback((allCells: Cell[], currentCell: Cell) => {\n    const applicableCells: Cell[] = [];\n    const parent = currentCell.element.closest(\"table\");\n    const currentRect = currentCell.getRect();\n\n    const hasSameParent = (cell: Cell) => parent?.contains(cell.element);\n    const isCellParent = (cell: Cell) => cell.element?.contains(currentCell.element);\n    const containsCurrent = (cell: Cell) => {\n      const cellRect = cell.getRect();\n      return cellRect.x <= currentRect.x && cellRect.right >= currentRect.right;\n    };\n    const isLastGroupColumn = (cell: Cell) => {\n      if (!currentCell.isColSpanHeader()) {\n        return false;\n      }\n      return cell.getRect().right === currentRect.right;\n    };\n\n    if (currentCell.isLastColumn()) {\n      allCells\n        .filter((cell) => cell.isLastColumn())\n        .forEach((cell) => {\n          applicableCells.push(cell);\n        });\n    } else {\n      let hasSomeLastColumn = false;\n\n      allCells.forEach((cell) => {\n        const hasParentRelationship = hasSameParent(cell) || isCellParent(cell);\n        const shareSamePosition = containsCurrent(cell) || isLastGroupColumn(cell);\n        if (hasParentRelationship && shareSamePosition) {\n          applicableCells.push(cell);\n          if (cell.isLastColumn()) {\n            hasSomeLastColumn = true;\n          }\n        }\n      });\n\n      if (hasSomeLastColumn) {\n        allCells\n          .filter((cell) => {\n            return cell.isLastColumn() && !hasSameParent(cell);\n          })\n          .forEach((cell) => {\n            applicableCells.push(cell);\n          });\n      }\n    }\n\n    applicableCells.forEach((cell) => {\n      cell.element.dataset.initialWidth = cell.element.style.width;\n    });\n\n    return _.uniqBy(applicableCells, (cell) => cell.getId());\n  }, []);\n\n  const onResizeStart = useCallback(() => {\n    const allCells = new DOMSession().getCells();\n    const currentCell = allCells.find((c) => c.getId() === id)!;\n    const applicableCells = getApplicableCells(allCells, currentCell);\n    const initialWidth = widthValue(currentCell.getRect().width);\n\n    setCells(applicableCells);\n    setInitialResizerWidth(initialWidth);\n  }, [getApplicableCells, id, widthValue]);\n\n  const onResize = useCallback(\n    (_, data) => {\n      const newResizerWidth = parseInt(data.size.width + \"\");\n      cells.forEach((cell) => {\n        const delta = newResizerWidth - initalResizerWidth;\n        const celllElement = cell.element;\n        const isSameCell = cell.getId() === id;\n\n        if (!isSameCell) {\n          const cellInitialWidth = parseInt(celllElement.dataset.initialWidth + \"\");\n          celllElement.style.width = cellInitialWidth + delta + \"px\";\n        }\n      });\n    },\n    [cells, id, initalResizerWidth]\n  );\n\n  const onResizeStop = useCallback(\n    (_, data) => {\n      const newResizerWidth = widthValue(data.size.width);\n\n      cells.forEach((cell) => {\n        const delta = newResizerWidth - initalResizerWidth;\n        const cellInitialWidth = widthValue(cell.element.dataset.initialWidth);\n        cell.setWidth(cellInitialWidth + delta);\n      });\n\n      setSupervisorHash(\"-\");\n    },\n    [cells, initalResizerWidth, setSupervisorHash, widthValue]\n  );\n\n  return useMemo(() => {\n    return (\n      <ResizableBox\n        className={resizerClassName}\n        width={resizerWidth}\n        minConstraints={[resizerMinWidth, 0]}\n        height={0}\n        axis=\"x\"\n        onResize={onResize}\n        onResizeStop={onResizeStop}\n        onResizeStart={onResizeStart}\n        handle={\n          <div className=\"pf-c-drawer\">\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\"></div>\n            </div>\n          </div>\n        }\n      >\n        {children}\n      </ResizableBox>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resizerClassName, onResize, onResizeStop, onResizeStart, children]);\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Resizer.css\";\nimport * as React from \"react\";\nimport { applyDOMSupervisor } from \"./dom\";\nimport { useEffect, useContext } from \"react\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface ResizerSupervisorProps {\n  children?: React.ReactElement;\n}\n\nexport const ResizerSupervisor: React.FunctionComponent<ResizerSupervisorProps> = ({ children }) => {\n  const { supervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  useEffect(() => {\n    const id = setTimeout(applyDOMSupervisor, 0);\n    return () => clearTimeout(id);\n  }, [supervisorHash]);\n\n  return <>{children}</>;\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditableCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport const READ_MODE = \"editable-cell--read-mode\";\nexport const EDIT_MODE = \"editable-cell--edit-mode\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = useState(initialValue);\n  const [isSelected, setIsSelected] = useState(false);\n  const [mode, setMode] = useState(READ_MODE);\n  const textarea = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e) => {\n    setMode(EDIT_MODE);\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    setMode(READ_MODE);\n    setIsSelected(false);\n\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  const onSelect = useCallback(() => {\n    setIsSelected(true);\n\n    if (document.activeElement === textarea.current) {\n      return;\n    }\n\n    textarea.current?.focus();\n    textarea.current?.setSelectionRange(value.length, value.length);\n  }, [value]);\n\n  const onDoubleClick = useCallback(() => {\n    setMode(EDIT_MODE);\n  }, []);\n\n  const cssClass = useCallback(() => {\n    const selectedClass = isSelected ? \"editable-cell--selected\" : \"\";\n    return `editable-cell ${selectedClass} ${mode}`;\n  }, [isSelected, mode]);\n\n  const onKeyPress = useCallback(\n    (event) => {\n      if (event.key.toLowerCase() !== \"enter\") {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (mode === READ_MODE) {\n        setMode(EDIT_MODE);\n        return;\n      }\n\n      const newValue = event.target.value;\n\n      if (event.altKey || event.ctrlKey) {\n        setValue(`${newValue}\\n`);\n        return;\n      }\n\n      setValue(newValue);\n      setMode(READ_MODE);\n    },\n    [mode]\n  );\n\n  return useMemo(\n    () => (\n      <>\n        <div onDoubleClick={onDoubleClick} onClick={onSelect} className={cssClass()}>\n          <span>{value}</span>\n          <textarea\n            ref={textarea}\n            value={value || \"\"}\n            onFocus={onSelect}\n            onKeyPress={onKeyPress}\n            onChange={onChange}\n            onBlur={onBlur}\n          />\n        </div>\n      </>\n    ),\n    [onDoubleClick, onSelect, cssClass, value, onKeyPress, onChange, onBlur]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { TableHeaderVisibility, Column as IColumn } from \"../../api\";\nimport { Cell, Column, Row, TableInstance } from \"react-table\";\nimport { DEFAULT_MIN_WIDTH, Resizer } from \"../Resizer\";\n\nexport interface TableBodyProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey: (row: Row) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: Column[]) => void;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  tableInstance,\n  children,\n  headerVisibility = TableHeaderVisibility.Full,\n  getRowKey,\n  getColumnKey,\n  onColumnsUpdate,\n}) => {\n  const renderCell = useCallback(\n    (cellIndex: number, cell: Cell, rowIndex: number) => {\n      const cellType = cellIndex === 0 ? \"counter-cell\" : \"data-cell\";\n      const column = tableInstance.allColumns[cellIndex] as unknown as IColumn;\n\n      const getWidth = (): number => {\n        if (typeof column?.width === \"number\") {\n          return column?.width;\n        }\n        return DEFAULT_MIN_WIDTH;\n      };\n      const setWidth = (width: number) => {\n        column?.setWidth?.(width);\n        tableInstance.allColumns[cellIndex].width = width;\n      };\n      const onResize = (width: number) => {\n        if (column.setWidth) {\n          setWidth(width);\n          onColumnsUpdate?.(tableInstance.columns);\n        }\n      };\n      const cellTemplate =\n        cellIndex === 0 ? (\n          <>{rowIndex + 1}</>\n        ) : (\n          <Resizer width={getWidth()} onHorizontalResizeStop={onResize}>\n            <>{cell.render(\"Cell\")}</>\n          </Resizer>\n        );\n\n      return (\n        <Td\n          {...tableInstance.getTdProps(cellIndex, rowIndex)}\n          key={`${getColumnKey(cell.column)}-${cellIndex}`}\n          data-ouia-component-id={\"expression-column-\" + cellIndex}\n          className={`${cellType}`}\n        >\n          {cellTemplate}\n        </Td>\n      );\n    },\n    [getColumnKey, onColumnsUpdate, tableInstance]\n  );\n\n  const renderBodyRow = useCallback(\n    (row: Row, rowIndex: number) => {\n      const rowProps = { ...row.getRowProps(), style: {} };\n      return (\n        <Tr\n          className=\"table-row\"\n          {...rowProps}\n          key={`${getRowKey(row)}-${rowIndex}`}\n          ouiaId={\"expression-row-\" + rowIndex}\n        >\n          {row.cells.map((cell: Cell, cellIndex: number) => renderCell(cellIndex, cell, rowIndex))}\n        </Tr>\n      );\n    },\n    [getRowKey, renderCell]\n  );\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td role=\"cell\" key={childIndex} className=\"row-remainder-content\">\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children]\n  );\n\n  return (\n    <Tbody\n      className={`${headerVisibility === TableHeaderVisibility.None ? \"missing-header\" : \"\"}`}\n      {...tableInstance.getTableBodyProps()}\n    >\n      {tableInstance.rows.map((row: Row, rowIndex: number) => {\n        tableInstance.prepareRow(row);\n        return renderBodyRow(row, rowIndex);\n      })}\n      {children ? renderAdditiveRow : null}\n    </Tbody>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, GroupOperations, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerMenuProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: GroupOperations[];\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerMenuProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId as TableOperation)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  DataType,\n  GroupOperations,\n  GroupOperationsByColumnType,\n  TableHandlerConfiguration,\n  TableOperation,\n} from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { getColumnsAtLastLevel, getColumnSearchPredicate } from \"./Table\";\n\nexport interface TableHandlerProps {\n  /** Gets the prefix to be used for the next column name */\n  getColumnPrefix: (groupType?: string) => string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Last selected column */\n  lastSelectedColumn: ColumnInstance;\n  /** Last selected row index */\n  lastSelectedRowIndex: number;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding: () => DataRecord;\n  /** Show/hide table handler */\n  showTableHandler: boolean;\n  /** Function to programmatically show/hide table handler */\n  setShowTableHandler: React.Dispatch<React.SetStateAction<boolean>>;\n  /** Target for showing the table handler  */\n  tableHandlerTarget: HTMLElement;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Table handler allowed operations */\n  tableHandlerAllowedOperations: TableOperation[];\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHandler: React.FunctionComponent<TableHandlerProps> = ({\n  getColumnPrefix,\n  tableColumns,\n  lastSelectedColumn,\n  lastSelectedRowIndex,\n  tableRows,\n  onRowsUpdate,\n  onRowAdding,\n  showTableHandler,\n  setShowTableHandler,\n  tableHandlerTarget,\n  handlerConfiguration,\n  tableHandlerAllowedOperations,\n  resetRowCustomFunction = () => ({}),\n  onColumnsUpdate,\n}) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [selectedColumn, setSelectedColumn] = useState(lastSelectedColumn.placeholderOf || lastSelectedColumn);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(lastSelectedRowIndex);\n\n  useEffect(() => {\n    setSelectedColumn(lastSelectedColumn.placeholderOf || lastSelectedColumn);\n  }, [lastSelectedColumn]);\n\n  useEffect(() => {\n    setSelectedRowIndex(lastSelectedRowIndex);\n  }, [lastSelectedRowIndex]);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => [\n    ...elements.slice(0, index),\n    element,\n    ...elements.slice(index),\n  ];\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => [\n    ...elements.slice(0, index + 1),\n    element,\n    ...elements.slice(index + 1),\n  ];\n\n  const duplicateAfter = <T extends unknown>(elements: T[], index: number) => [\n    ...elements.slice(0, index + 1),\n    _.cloneDeep(elements[index]),\n    ...elements.slice(index + 1),\n  ];\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => [\n    ...elements.slice(0, index),\n    ...elements.slice(index + 1),\n  ];\n\n  const clearAt = <T extends unknown>(elements: T[], index: number) => [\n    ...elements.slice(0, index),\n    resetRowCustomFunction(elements[index] as DataRecord),\n    ...elements.slice(index + 1),\n  ];\n\n  const generateNextAvailableColumnName: (lastIndex: number, groupType?: string) => string = useCallback(\n    (lastIndex, groupType) => {\n      const candidateName = `${getColumnPrefix(groupType)}${lastIndex}`;\n      const columnWithCandidateName = _.find(getColumnsAtLastLevel(tableColumns.current), { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1, groupType) : candidateName;\n    },\n    [getColumnPrefix, tableColumns]\n  );\n\n  const getLengthOfColumnsByGroupType = useCallback((columns: Column[], groupType: string) => {\n    const columnsByGroupType = _.groupBy(columns, (column: ColumnInstance) => column.groupType);\n    return columnsByGroupType[groupType]?.length;\n  }, []);\n\n  const generateNextAvailableColumn = useCallback(() => {\n    const groupType = selectedColumn.groupType;\n    const cssClasses = selectedColumn.cssClasses;\n    const columns = getColumnsAtLastLevel(tableColumns.current);\n    const columnsLength = groupType ? getLengthOfColumnsByGroupType(columns, groupType) + 1 : columns.length;\n    const nextAvailableColumnName = generateNextAvailableColumnName(columnsLength, groupType);\n\n    return {\n      accessor: nextAvailableColumnName,\n      label: nextAvailableColumnName,\n      ...(selectedColumn.dataType ? { dataType: DataType.Undefined } : {}),\n      inlineEditable: selectedColumn.inlineEditable,\n      groupType,\n      cssClasses,\n    } as ColumnInstance;\n  }, [generateNextAvailableColumnName, getLengthOfColumnsByGroupType, selectedColumn, tableColumns]);\n\n  /** These column operations have impact also on the collection of cells */\n  const updateColumnsThenRows = useCallback(() => {\n    onColumnsUpdate([...tableColumns.current]);\n    onRowsUpdate([...tableRows.current]);\n  }, [onColumnsUpdate, onRowsUpdate, tableColumns, tableRows]);\n\n  const appendOnColumnChildren = useCallback(\n    (operation: <T extends unknown>(elements: T[], index: number, element: T) => T[]) => {\n      const children = (_.find(tableColumns.current, getColumnSearchPredicate(selectedColumn)) as ColumnInstance)\n        .columns;\n      if (operation === insertBefore) {\n        children!.unshift(generateNextAvailableColumn());\n      } else if (operation === insertAfter) {\n        children!.push(generateNextAvailableColumn());\n      }\n    },\n    [generateNextAvailableColumn, selectedColumn, tableColumns]\n  );\n\n  const updateTargetColumns = (operation: <T extends unknown>(elements: T[], index: number, element: T) => T[]) => {\n    if (selectedColumn.parent) {\n      const parent = _.find(tableColumns.current, getColumnSearchPredicate(selectedColumn.parent)) as ColumnInstance;\n      parent.columns = operation(\n        parent.columns!,\n        _.findIndex(parent.columns, getColumnSearchPredicate(selectedColumn)),\n        generateNextAvailableColumn()\n      );\n    } else {\n      if (selectedColumn.appendColumnsOnChildren && _.isArray(selectedColumn.columns)) {\n        appendOnColumnChildren(operation);\n      } else {\n        tableColumns.current = operation(\n          tableColumns.current,\n          _.findIndex(tableColumns.current, getColumnSearchPredicate(selectedColumn)),\n          generateNextAvailableColumn()\n        );\n      }\n    }\n    updateColumnsThenRows();\n  };\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          updateTargetColumns(insertBefore);\n          break;\n        case TableOperation.ColumnInsertRight:\n          updateTargetColumns(insertAfter);\n          break;\n        case TableOperation.ColumnDelete:\n          updateTargetColumns(deleteAt);\n          break;\n        case TableOperation.RowInsertAbove:\n          onRowsUpdate(insertBefore(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          onRowsUpdate(insertAfter(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          onRowsUpdate(deleteAt(tableRows.current, selectedRowIndex));\n          break;\n        case TableOperation.RowClear:\n          onRowsUpdate(clearAt(tableRows.current, selectedRowIndex));\n          break;\n        case TableOperation.RowDuplicate:\n          onRowsUpdate(duplicateAfter(tableRows.current, selectedRowIndex));\n      }\n      setShowTableHandler(false);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      generateNextAvailableColumn,\n      updateColumnsThenRows,\n      onRowAdding,\n      onRowsUpdate,\n      selectedRowIndex,\n      setShowTableHandler,\n      tableColumns,\n      tableRows,\n    ]\n  );\n\n  const groupOperationsDoNotDependOnColumn = (\n    handlerConfiguration: GroupOperations[] | GroupOperationsByColumnType\n  ): handlerConfiguration is GroupOperations[] => _.isArray(handlerConfiguration);\n\n  const getHandlerConfiguration = useMemo(() => {\n    if (groupOperationsDoNotDependOnColumn(handlerConfiguration)) {\n      return handlerConfiguration;\n    }\n    return handlerConfiguration[selectedColumn?.groupType || \"\"];\n  }, [handlerConfiguration, selectedColumn?.groupType]);\n\n  return useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={getHandlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [\n      showTableHandler,\n      globalContext.boxedExpressionEditorRef,\n      getHandlerConfiguration,\n      tableHandlerAllowedOperations,\n      handlingOperation,\n      setShowTableHandler,\n      tableHandlerTarget,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Column, ColumnInstance, DataRecord, HeaderGroup, TableInstance } from \"react-table\";\nimport { DataType, TableHeaderVisibility } from \"../../api\";\nimport { EditExpressionMenu, EditTextInline } from \"../EditExpressionMenu\";\nimport { DEFAULT_MIN_WIDTH, Resizer } from \"../Resizer\";\nimport { getColumnsAtLastLevel, getColumnSearchPredicate } from \"./Table\";\n\nexport interface TableHeaderProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Optional label, that may depend on column, to be used for the popover that appears when clicking on column header */\n  editColumnLabel?: string | { [groupType: string]: string };\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup: boolean;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHeader: React.FunctionComponent<TableHeaderProps> = ({\n  tableInstance,\n  tableRows,\n  onRowsUpdate,\n  editColumnLabel,\n  headerVisibility = TableHeaderVisibility.Full,\n  skipLastHeaderGroup,\n  getColumnKey,\n  tableColumns,\n  onColumnsUpdate,\n}) => {\n  const getColumnLabel: (groupType: string) => string | undefined = useCallback(\n    (groupType) => {\n      if (_.isObject(editColumnLabel) && _.has(editColumnLabel, groupType)) {\n        return editColumnLabel[groupType];\n      }\n      if (typeof editColumnLabel === \"string\") {\n        return editColumnLabel;\n      }\n    },\n    [editColumnLabel]\n  );\n\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      onRowsUpdate(\n        _.map(tableRows.current, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        })\n      ),\n    [onRowsUpdate, tableRows]\n  );\n\n  /**\n   * Currently, column rename/type update is supported only for the first and the second level of the header\n   */\n  const onColumnNameOrDataTypeUpdate: (\n    column: ColumnInstance,\n    columnIndex: number\n  ) => ({ name, dataType }: { name?: string; dataType?: DataType }) => void = useCallback(\n    (column, columnIndex) => {\n      return ({ name = \"\", dataType }) => {\n        const prevColumnName = column.label as string;\n        let columnToUpdate = tableColumns.current[columnIndex] as ColumnInstance;\n        if (column.depth > 0) {\n          const parentName = column.parent!.id;\n          const parentColumns = (_.find(tableColumns.current, { accessor: parentName }) as ColumnInstance).columns;\n          columnToUpdate = _.find(parentColumns, { accessor: prevColumnName })!;\n        }\n        columnToUpdate.label = name;\n        columnToUpdate.accessor = name;\n        columnToUpdate.dataType = dataType as DataType;\n        onColumnsUpdate([...tableColumns.current]);\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [onColumnsUpdate, tableColumns, updateColumnNameInRows]\n  );\n\n  const computeColumnKey = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      `${getColumnKey(column)}-${column.parent?.id || \"\"}-${columnIndex}`,\n    [getColumnKey]\n  );\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th\n        {...column.getHeaderProps()}\n        className=\"fixed-column no-clickable-cell\"\n        key={computeColumnKey(column, columnIndex)}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    [computeColumnKey]\n  );\n\n  const renderCellInfoLabel = useCallback(\n    (column: ColumnInstance, columnIndex: number) => {\n      if (column.inlineEditable) {\n        return (\n          <EditTextInline\n            value={column.label as string}\n            onTextChange={(value) => onColumnNameOrDataTypeUpdate(column, columnIndex)({ name: value })}\n          />\n        );\n      }\n      return <p className=\"pf-u-text-truncate\">{column.label}</p>;\n    },\n    [onColumnNameOrDataTypeUpdate]\n  );\n\n  const renderHeaderCellInfo = useCallback(\n    (column, columnIndex) => (\n      <div className=\"header-cell-info\" data-ouia-component-type=\"expression-column-header-cell-info\">\n        {column.headerCellElement ? column.headerCellElement : renderCellInfoLabel(column, columnIndex)}\n        {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n      </div>\n    ),\n    [renderCellInfoLabel]\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (column, columnWidth) => {\n      const columnToBeFound = column.placeholderOf || column;\n      let columnToUpdate = _.find(tableColumns.current, getColumnSearchPredicate(columnToBeFound)) as ColumnInstance;\n      if (column.parent) {\n        columnToUpdate = _.find(\n          getColumnsAtLastLevel(tableColumns.current),\n          getColumnSearchPredicate(column)\n        ) as ColumnInstance;\n      }\n      columnToUpdate.width = columnWidth;\n      onColumnsUpdate(tableColumns.current);\n    },\n    [onColumnsUpdate, tableColumns]\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => {\n      const headerProps = {\n        ...column.getHeaderProps(),\n        style: {},\n      };\n      const thProps = tableInstance.getThProps(column, columnIndex);\n      const width = column.width || DEFAULT_MIN_WIDTH;\n      const isColspan = column.columns?.length > 0 || false;\n\n      const getCssClass = () => {\n        const cssClasses = [];\n        if (!column.dataType) {\n          cssClasses.push(\"no-clickable-cell\");\n        }\n        if (isColspan) {\n          cssClasses.push(\"colspan-header\");\n        }\n        if (column.placeholderOf) {\n          cssClasses.push(column.placeholderOf.cssClasses);\n          cssClasses.push(column.placeholderOf.groupType);\n        }\n        cssClasses.push(column.groupType || \"\");\n        cssClasses.push(column.cssClasses || \"\");\n        return cssClasses.join(\" \");\n      };\n\n      return (\n        <Th {...headerProps} {...thProps} className={getCssClass()} key={computeColumnKey(column, columnIndex)}>\n          <Resizer width={width} onHorizontalResizeStop={(columnWidth) => onHorizontalResizeStop(column, columnWidth)}>\n            <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n              {column.dataType ? (\n                <EditExpressionMenu\n                  title={getColumnLabel(column.groupType)}\n                  selectedExpressionName={column.label}\n                  selectedDataType={column.dataType}\n                  onExpressionUpdate={(expression) => onColumnNameOrDataTypeUpdate(column, columnIndex)(expression)}\n                  key={computeColumnKey(column, columnIndex)}\n                >\n                  {renderHeaderCellInfo(column, columnIndex)}\n                </EditExpressionMenu>\n              ) : (\n                renderHeaderCellInfo(column, columnIndex)\n              )}\n            </div>\n          </Resizer>\n        </Th>\n      );\n    },\n    [\n      computeColumnKey,\n      getColumnLabel,\n      onColumnNameOrDataTypeUpdate,\n      onHorizontalResizeStop,\n      renderHeaderCellInfo,\n      tableInstance,\n    ]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableHeaderCell(column, columnIndex),\n    [renderCountColumn, renderResizableHeaderCell]\n  );\n\n  const getHeaderGroups = useCallback(\n    (tableInstance) => {\n      return skipLastHeaderGroup ? _.dropRight(tableInstance.headerGroups) : tableInstance.headerGroups;\n    },\n    [skipLastHeaderGroup]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      getHeaderGroups(tableInstance).map((headerGroup: HeaderGroup) => {\n        const { key, ...props } = { ...headerGroup.getHeaderGroupProps(), style: {} };\n        return (\n          <Tr key={key} {...props}>\n            {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) =>\n              renderColumn(column, columnIndex)\n            )}\n          </Tr>\n        );\n      }),\n    [getHeaderGroups, renderColumn, tableInstance]\n  );\n\n  const renderAtLevelInHeaderGroups = useCallback(\n    (level: number) => (\n      <Tr>\n        {_.nth(tableInstance.headerGroups as HeaderGroup[], level)!.headers.map(\n          (column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex)\n        )}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  switch (headerVisibility) {\n    case TableHeaderVisibility.Full:\n      return <Thead noWrap>{renderHeaderGroups}</Thead>;\n    case TableHeaderVisibility.LastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-1)}</Thead>;\n    case TableHeaderVisibility.SecondToLastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-2)}</Thead>;\n    default:\n      return null;\n  }\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { TableHeaderVisibility, TableOperation, TableProps } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { TableBody } from \"./TableBody\";\nimport { TableHandler } from \"./TableHandler\";\nimport { TableHeader } from \"./TableHeader\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\nconst NUMBER_OF_ROWS_COLUMN = \"#\";\nconst NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\nexport const getColumnsAtLastLevel: (columns: ColumnInstance[] | Column[], depth?: number) => ColumnInstance[] = (\n  columns,\n  depth = 0\n) =>\n  _.flatMap(columns, (column: ColumnInstance) => {\n    if (_.has(column, \"columns\")) {\n      return depth > 0 ? getColumnsAtLastLevel(column.columns!, depth - 1) : column.columns;\n    }\n    return column;\n  }) as ColumnInstance[];\n\nexport const getColumnSearchPredicate: (column: ColumnInstance) => (columnToCompare: ColumnInstance) => boolean = (\n  column\n) => {\n  const columnId = column.originalId || column.id || column.accessor;\n  return (columnToCompare: ColumnInstance) => {\n    return columnToCompare.id === columnId || columnToCompare.accessor === columnId;\n  };\n};\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  getColumnPrefix = () => \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onRowAdding = () => ({}),\n  controllerCell = NUMBER_OF_ROWS_COLUMN,\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  headerVisibility,\n  headerLevels = 0,\n  skipLastHeaderGroup = false,\n  getRowKey = (row) => row.id as string,\n  getColumnKey = (column) => column.id as string,\n  resetRowCustomFunction,\n}: TableProps) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [currentControllerCell, setCurrentControllerCell] = useState(controllerCell);\n\n  const generateNumberOfRowsSubColumnRecursively: (column: ColumnInstance, headerLevels: number) => void = useCallback(\n    (column, headerLevels) => {\n      if (headerLevels > 0) {\n        _.assign(column, {\n          columns: [\n            {\n              label: headerVisibility === TableHeaderVisibility.Full ? NUMBER_OF_ROWS_SUBCOLUMN : currentControllerCell,\n              accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n              minWidth: 60,\n              width: 60,\n              disableResizing: true,\n              isCountColumn: true,\n              hideFilter: true,\n            },\n          ],\n        });\n\n        if (column?.columns?.length) {\n          generateNumberOfRowsSubColumnRecursively(column.columns[0], headerLevels - 1);\n        }\n      }\n    },\n    [currentControllerCell, headerVisibility]\n  );\n\n  const generateNumberOfRowsColumn = useCallback(\n    (currentControllerCell: string | JSX.Element, columns: Column[]) => {\n      const numberOfRowsColumn = {\n        label: currentControllerCell,\n        accessor: NUMBER_OF_ROWS_COLUMN,\n        width: 60,\n        minWidth: 60,\n        isCountColumn: true,\n      } as ColumnInstance;\n      generateNumberOfRowsSubColumnRecursively(numberOfRowsColumn, headerLevels);\n      return [numberOfRowsColumn, ...columns];\n    },\n    [generateNumberOfRowsSubColumnRecursively, headerLevels]\n  );\n\n  const tableColumns = useRef<Column[]>(generateNumberOfRowsColumn(currentControllerCell, columns));\n  const tableRows = useRef<DataRecord[]>(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumn, setLastSelectedColumn] = useState({} as ColumnInstance);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  useEffect(() => {\n    tableColumns.current = generateNumberOfRowsColumn(controllerCell, tableColumns.current.slice(1));\n    setCurrentControllerCell(controllerCell);\n  }, [controllerCell, generateNumberOfRowsColumn]);\n\n  useEffect(() => {\n    tableColumns.current = generateNumberOfRowsColumn(currentControllerCell, columns);\n    // Watching for external changes of the columns\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columns]);\n\n  useEffect(() => {\n    tableRows.current = rows;\n    // Watching for external changes of the rows\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const onColumnsUpdateCallback = useCallback(\n    (columns: Column[]) => {\n      tableColumns.current = columns;\n      onColumnsUpdate?.(columns.slice(1)); //Removing \"# of rows\" column\n    },\n    [onColumnsUpdate]\n  );\n\n  const onRowsUpdateCallback = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = rows;\n      onRowsUpdate?.(rows);\n    },\n    [onRowsUpdate]\n  );\n\n  const onCellUpdate = useCallback(\n    (rowIndex: number, columnId: string, value: string) => {\n      const updatedTableCells = [...tableRows.current];\n      updatedTableCells[rowIndex][columnId] = value;\n      onRowsUpdateCallback(updatedTableCells);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      const updatedRows = [...tableRows.current];\n      updatedRows[rowIndex] = updatedRow;\n      onRowsUpdateCallback(updatedRows);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const defaultColumn = {\n    Cell: useCallback((cellRef) => {\n      const column = cellRef.column as ColumnInstance;\n      if (column.isCountColumn) {\n        return cellRef.value;\n      } else {\n        return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n      }\n      // Table performance optimization: no need to re-render cells, since nested component themselves will re-render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const tableHandlerStateUpdate = (target: HTMLElement, column: ColumnInstance) => {\n    setTableHandlerTarget(target);\n    globalContext.currentlyOpenedHandlerCallback?.(false);\n    setShowTableHandler(true);\n    globalContext.setCurrentlyOpenedHandlerCallback?.(() => setShowTableHandler);\n    setLastSelectedColumn(column);\n  };\n\n  const atLeastTwoColumnsOfTheSameGroupType = (columnIndex: number) => {\n    const columnsAtLastLevel = getColumnsAtLastLevel(tableColumns.current);\n    const groupTypeForCurrentColumn = (columnsAtLastLevel[columnIndex] as ColumnInstance)?.groupType;\n    const columnsByGroupType = _.groupBy(columnsAtLastLevel, (column: ColumnInstance) => column.groupType);\n    return groupTypeForCurrentColumn\n      ? columnsByGroupType[groupTypeForCurrentColumn].length > 1\n      : tableColumns.current.length > 2; // The total number of columns is counting also the # of rows column\n  };\n\n  const columnCanBeDeleted = (columnIndex: number) => {\n    return columnIndex > 0 && atLeastTwoColumnsOfTheSameGroupType(columnIndex);\n  };\n\n  const getColumnOperations = (columnIndex: number) =>\n    columnIndex === 0\n      ? []\n      : [\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(columnCanBeDeleted(columnIndex) ? [TableOperation.ColumnDelete] : []),\n        ];\n\n  const getThProps = (column: ColumnInstance) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const columnIndex = _.findIndex(\n        getColumnsAtLastLevel(tableColumns.current, column.depth),\n        getColumnSearchPredicate(column)\n      );\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations(getColumnOperations(columnIndex));\n        tableHandlerStateUpdate(target, column);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          ...getColumnOperations(columnIndex),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.current.length > 1 ? [TableOperation.RowDelete] : []),\n          TableOperation.RowClear,\n          TableOperation.RowDuplicate,\n        ]);\n        tableHandlerStateUpdate(target, getColumnsAtLastLevel(tableInstance.columns, headerLevels)[columnIndex]);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns.current,\n      data: tableRows.current,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <TableHeader\n          tableInstance={tableInstance}\n          editColumnLabel={editColumnLabel}\n          headerVisibility={headerVisibility}\n          skipLastHeaderGroup={skipLastHeaderGroup}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          tableColumns={tableColumns}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n        <TableBody\n          tableInstance={tableInstance}\n          getRowKey={getRowKey}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n          headerVisibility={headerVisibility}\n        >\n          {children}\n        </TableBody>\n      </TableComposable>\n      {showTableHandler && handlerConfiguration ? (\n        <TableHandler\n          tableColumns={tableColumns}\n          getColumnPrefix={getColumnPrefix}\n          handlerConfiguration={handlerConfiguration}\n          lastSelectedColumn={lastSelectedColumn}\n          lastSelectedRowIndex={lastSelectedRowIndex}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          onRowAdding={onRowAdding}\n          showTableHandler={showTableHandler}\n          setShowTableHandler={setShowTableHandler}\n          tableHandlerAllowedOperations={tableHandlerAllowedOperations}\n          tableHandlerTarget={tableHandlerTarget}\n          resetRowCustomFunction={resetRowCustomFunction}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\nimport { EditableCell } from \"../Table\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  uid,\n  content = \"\",\n  dataType = DataType.Undefined,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n\n  const [expressionName, setExpressionName] = useState<string>(name);\n  const [expressionDataType, setExpressionDataType] = useState<DataType>(dataType);\n  const literalExpressionContent = useRef<string>(content);\n  const literalExpressionWidth = useRef<number>(width || HEADER_WIDTH);\n\n  const spreadLiteralExpressionDefinition = useCallback(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      uid,\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent.current,\n      ...(!isHeadless && literalExpressionWidth.current !== HEADER_WIDTH\n        ? { width: literalExpressionWidth.current }\n        : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [expressionDataType, expressionName, isHeadless, onUpdatingRecursiveExpression, uid]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n      spreadLiteralExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadLiteralExpressionDefinition]\n  );\n\n  const onContentChange = useCallback(\n    (value: string) => {\n      literalExpressionContent.current = value;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (width) => {\n      literalExpressionWidth.current = width;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth.current}\n        minWidth={HEADER_WIDTH}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <EditExpressionMenu\n            selectedExpressionName={expressionName}\n            selectedDataType={expressionDataType}\n            onExpressionUpdate={onExpressionUpdate}\n          >\n            <div className=\"expression-info\">\n              <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n              <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n            </div>\n          </EditExpressionMenu>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, onExpressionUpdate, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <EditableCell\n        value={literalExpressionContent.current}\n        row={{ index: 0 }}\n        column={{ id: uid ?? \"-\" }}\n        onCellUpdate={(_number, _columnId, value) => onContentChange(value)}\n      />\n    ),\n    [onContentChange, uid]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadLiteralExpressionDefinition();\n  }, [spreadLiteralExpressionDefinition]);\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./PMMLLiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useRef, useState } from \"react\";\nimport { PMMLLiteralExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport const PMMLLiteralExpression: React.FunctionComponent<PMMLLiteralExpressionProps> = (\n  props: PMMLLiteralExpressionProps\n) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const selection = useRef(props.selected);\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const onSelectToggle = useCallback((isOpen) => setSelectOpen(isOpen), []);\n\n  const onSelect = useCallback(\n    (event, updatedSelection) => {\n      setSelectOpen(false);\n      selection.current = updatedSelection;\n      props.onUpdatingRecursiveExpression?.({\n        ...props,\n        selected: updatedSelection,\n      } as PMMLLiteralExpressionProps);\n    },\n    [props]\n  );\n\n  const getOptions = useCallback(() => {\n    return _.map(props.getOptions(), (key) => (\n      <SelectOption key={key} value={key} data-ouia-component-id={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, [props]);\n\n  const getSelection = useCallback(() => {\n    return _.includes(props.getOptions(), selection.current) ? selection.current : undefined;\n  }, [props]);\n\n  const showingPlaceholder = useCallback(() => _.isEmpty(getSelection()), [getSelection]);\n\n  return (\n    <Select\n      className={`pmml-literal-expression ${showingPlaceholder() ? \"showing-placeholder\" : \"\"}`}\n      menuAppendTo={globalContext.boxedExpressionEditorRef?.current ?? \"inline\"}\n      ouiaId=\"pmml-literal-expression-selector\"\n      placeholderText={props.noOptionsLabel}\n      aria-placeholder={props.noOptionsLabel}\n      variant={SelectVariant.single}\n      onToggle={onSelectToggle}\n      onSelect={onSelect}\n      isOpen={selectOpen}\n      selections={getSelection()}\n    >\n      {getOptions()}\n    </Select>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport \"@patternfly/react-styles/css/utilities/Text/text.css\";\nimport { Column as RelationColumn, DataType, RelationProps, Row, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const tableColumns = useRef<RelationColumn[]>(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const tableRows = useRef<Row[]>(relationProps.rows === undefined ? [[\"\"]] : relationProps.rows);\n\n  const spreadRelationExpressionDefinition = useCallback(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns.current,\n      rows: tableRows.current,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns.current,\n        (column: RelationColumn) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows.current, (row) =>\n        _.reduce(\n          tableColumns.current,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    []\n  );\n\n  const onSavingRows = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = _.map(rows, (tableRow: DataRecord) =>\n        _.reduce(\n          tableColumns.current,\n          (row: string[], column: RelationColumn) => {\n            row.push((tableRow[column.name]! as string) || \"\");\n            return row;\n          },\n          []\n        )\n      );\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) => {\n      tableColumns.current = _.map(columns, (columnInstance: ColumnInstance) => ({\n        name: columnInstance.accessor,\n        dataType: columnInstance.dataType,\n        width: columnInstance.width,\n      }));\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadRelationExpressionDefinition();\n  }, [spreadRelationExpressionDefinition]);\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n  /** Function invoked when resetting expression */\n  onExpressionResetting?: () => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n  onExpressionResetting,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const entryExpression = useRef(expression);\n\n  useEffect(() => {\n    entryExpression.current = _.omit(expression, \"isHeadless\");\n    // Every time, for an expression, its logic type changes, it means that corresponding entry has been just updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback(\n    (logicType) => {\n      entryExpression.current.logicType = logicType;\n      onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n    },\n    [onUpdatingRecursiveExpression]\n  );\n\n  const onLogicTypeResetting = useCallback(() => {\n    entryExpression.current.logicType = LogicType.Undefined;\n    onExpressionResetting?.();\n    onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n  }, [onExpressionResetting, onUpdatingRecursiveExpression]);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression.current}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryExpressionCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CellProps, ContextEntries, DataType, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryInfo = useRef(contextEntry.entryInfo);\n\n  const entryExpression = useRef({\n    uid: contextEntry.entryExpression.uid,\n    ...contextEntry.entryExpression,\n  } as ExpressionProps);\n\n  useEffect(() => {\n    entryInfo.current = contextEntry.entryInfo;\n  }, [contextEntry.entryInfo]);\n\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n    onRowUpdate(index, { ...contextEntry, entryInfo: entryInfo.current, entryExpression: entryExpression.current });\n    // Every time, for an expression, its logic type changes, it means that corresponding entry has been just updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contextEntry.entryExpression.logicType]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    entryExpression.current = { ...expression };\n    const updatedEntryInfo = { ...entryInfo.current };\n    if (contextEntry.nameAndDataTypeSynchronized && _.size(expression.name) && _.size(expression.dataType)) {\n      updatedEntryInfo.name = expression.name as string;\n      updatedEntryInfo.dataType = expression.dataType as DataType;\n    }\n    onRowUpdate(index, { ...contextEntry, entryInfo: updatedEntryInfo, entryExpression: expression });\n    // Callback should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression.current}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        onExpressionResetting={contextEntry.onExpressionResetting}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel?: string;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n  editInfoPopoverLabel,\n}) => {\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  const renderEntryDefinition = useCallback(\n    (additionalCssClass?: string) => (\n      <div className={`entry-definition ${additionalCssClass}`}>\n        <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n          {entryName}\n        </p>\n        <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n          ({entryDataType})\n        </p>\n      </div>\n    ),\n    [entryDataType, entryName]\n  );\n\n  const renderEntryDefinitionWithPopoverMenu = useMemo(\n    () => (\n      <EditExpressionMenu\n        title={editInfoPopoverLabel}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        {renderEntryDefinition(\"with-popover-menu\")}\n      </EditExpressionMenu>\n    ),\n    [editInfoPopoverLabel, entryDataType, entryName, onEntryNameOrDataTypeUpdate, renderEntryDefinition]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      {editInfoPopoverLabel ? renderEntryDefinitionWithPopoverMenu : renderEntryDefinition()}\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryInfo = useRef(contextEntry.entryInfo);\n  const entryExpression = useRef(contextEntry.entryExpression);\n\n  useEffect(() => {\n    entryInfo.current = contextEntry.entryInfo;\n  }, [contextEntry.entryInfo]);\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n  }, [contextEntry.entryExpression]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      const updatedExpression = { ...entryExpression.current };\n      if (contextEntry.nameAndDataTypeSynchronized && _.size(name) && _.size(dataType)) {\n        updatedExpression.name = name;\n        updatedExpression.dataType = dataType;\n      }\n      onRowUpdate(index, { ...contextEntry, entryExpression: updatedExpression, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.current.name}\n        dataType={entryInfo.current.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n        editInfoPopoverLabel={contextEntry.editInfoPopoverLabel}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  EntryInfo,\n  ExpressionProps,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  LogicType,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\nimport { hashfy, Resizer } from \"../Resizer\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries,\n  result = {} as ExpressionProps,\n  renderResult = true,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  noHandlerMenu = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const expressionColumnName = useRef(name);\n  const expressionColumnDataType = useRef(dataType);\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const { setSupervisorHash } = React.useContext(BoxedExpressionGlobalContext);\n\n  const columns = useMemo(\n    () => [\n      {\n        label: expressionColumnName.current,\n        accessor: expressionColumnName.current,\n        dataType: expressionColumnDataType.current,\n        disableHandlerOnHeader: true,\n        columns: [\n          {\n            accessor: \"entryInfo\",\n            disableHandlerOnHeader: true,\n            width: infoWidth,\n            setWidth: setInfoWidth,\n            minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n          },\n          {\n            accessor: \"entryExpression\",\n            disableHandlerOnHeader: true,\n            width: expressionWidth,\n            setWidth: setExpressionWidth,\n            minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n          },\n        ],\n      },\n    ],\n    [expressionWidth, infoWidth]\n  );\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        editInfoPopoverLabel: i18n.editContextEntry,\n        nameAndDataTypeSynchronized: true,\n      } as DataRecord,\n    ]\n  );\n\n  const spreadContextExpressionDefinition = useCallback(() => {\n    const updatedDefinition: ContextProps = {\n      uid,\n      logicType: LogicType.Context,\n      name: expressionColumnName.current,\n      dataType: expressionColumnDataType.current,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      entryInfoWidth: infoWidth,\n      entryExpressionWidth: expressionWidth,\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]));\n    } else {\n      setSupervisorHash(hashfy(updatedDefinition));\n      window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n    }\n  }, [\n    expressionWidth,\n    infoWidth,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    resultExpression,\n    rows,\n    setSupervisorHash,\n    uid,\n  ]);\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      expressionColumnName.current = expressionColumn.label as string;\n      expressionColumnDataType.current = expressionColumn.dataType;\n      onUpdatingNameAndDataType?.(expressionColumnName.current, expressionColumnDataType.current);\n      spreadContextExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadContextExpressionDefinition]\n  );\n\n  const onRowAdding = useCallback(() => {\n    const generatedName = generateNextAvailableEntryName(\n      _.map(rows, (row: ContextEntryRecord) => row.entryInfo) as EntryInfo[],\n      \"ContextEntry\"\n    );\n    return {\n      entryInfo: {\n        name: generatedName,\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {\n        name: generatedName,\n        dataType: DataType.Undefined,\n      },\n      editInfoPopoverLabel: i18n.editContextEntry,\n      nameAndDataTypeSynchronized: true,\n    };\n  }, [i18n.editContextEntry, rows]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.None : TableHeaderVisibility.SecondToLastLevel;\n  }, [isHeadless]);\n\n  useEffect(() => {\n    spreadContextExpressionDefinition();\n  }, [\n    columns,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    rows,\n    resultExpression,\n    infoWidth,\n    expressionWidth,\n    uid,\n    setSupervisorHash,\n    spreadContextExpressionDefinition,\n  ]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={noHandlerMenu ? undefined : getHandlerConfiguration(i18n, i18n.contextEntry)}\n        getRowKey={useCallback(getEntryKey, [])}\n        resetRowCustomFunction={useCallback(resetEntry, [])}\n      >\n        {renderResult\n          ? [\n              <Resizer\n                key=\"context-result\"\n                width={infoWidth}\n                minWidth={DEFAULT_ENTRY_INFO_MIN_WIDTH}\n                onHorizontalResizeStop={(width) => setInfoWidth(width)}\n              >\n                <div className=\"context-result\">{`<result>`}</div>\n              </Resizer>,\n              <Resizer\n                key=\"context-expression\"\n                width={expressionWidth}\n                minWidth={DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH}\n                onHorizontalResizeStop={(width) => setExpressionWidth(width)}\n              >\n                <ContextEntryExpression\n                  expression={resultExpression}\n                  onUpdatingRecursiveExpression={setResultExpression}\n                />\n              </Resizer>,\n            ]\n          : undefined}\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport {\n  Annotation,\n  BuiltinAggregation,\n  Clause,\n  DataType,\n  DecisionTableProps,\n  DecisionTableRule,\n  GroupOperations,\n  HitPolicy,\n  LogicType,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { hashfy } from \"../Resizer\";\nimport { getColumnsAtLastLevel, Table } from \"../Table\";\nimport \"./DecisionTableExpression.css\";\nimport { HitPolicySelector } from \"./HitPolicySelector\";\n\nenum DecisionTableColumnType {\n  InputClause = \"input\",\n  OutputClause = \"output\",\n  Annotation = \"annotation\",\n}\n\nconst DASH_SYMBOL = \"-\";\nconst EMPTY_SYMBOL = \"\";\nconst DECISION_NODE_DEFAULT_NAME = \"output-1\";\n\nexport const DecisionTableExpression: React.FunctionComponent<DecisionTableProps> = ({\n  uid,\n  isHeadless,\n  onUpdatingRecursiveExpression,\n  name = DECISION_NODE_DEFAULT_NAME,\n  dataType = DataType.Undefined,\n  onUpdatingNameAndDataType,\n  hitPolicy = HitPolicy.Unique,\n  aggregation = BuiltinAggregation[\"<None>\"],\n  input = [{ name: \"input-1\", dataType: DataType.Undefined }],\n  output = [{ name: DECISION_NODE_DEFAULT_NAME, dataType: DataType.Undefined }],\n  annotations = [{ name: \"annotation-1\" }],\n  rules = [{ inputEntries: [DASH_SYMBOL], outputEntries: [EMPTY_SYMBOL], annotationEntries: [EMPTY_SYMBOL] }],\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const getColumnPrefix = useCallback((groupType?: string) => {\n    switch (groupType) {\n      case DecisionTableColumnType.InputClause:\n        return \"input-\";\n      case DecisionTableColumnType.OutputClause:\n        return \"output-\";\n      case DecisionTableColumnType.Annotation:\n        return \"annotation-\";\n      default:\n        return \"column-\";\n    }\n  }, []);\n\n  const generateHandlerConfigurationByColumn = useCallback(\n    (groupName: string) => [\n      {\n        group: groupName,\n        items: [\n          { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n          { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n          { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n        ],\n      },\n      {\n        group: i18n.decisionRule,\n        items: [\n          { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n          { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n          { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n          { name: i18n.rowOperations.duplicate, type: TableOperation.RowDuplicate },\n        ],\n      },\n    ],\n    [i18n]\n  );\n\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  const getHandlerConfiguration = useMemo(() => {\n    const configuration: { [columnGroupType: string]: GroupOperations[] } = {};\n    configuration[EMPTY_SYMBOL] = generateHandlerConfigurationByColumn(i18n.ruleAnnotation);\n    configuration[DecisionTableColumnType.InputClause] = generateHandlerConfigurationByColumn(i18n.inputClause);\n    configuration[DecisionTableColumnType.OutputClause] = generateHandlerConfigurationByColumn(i18n.outputClause);\n    configuration[DecisionTableColumnType.Annotation] = generateHandlerConfigurationByColumn(i18n.ruleAnnotation);\n    return configuration;\n  }, [generateHandlerConfigurationByColumn, i18n.inputClause, i18n.outputClause, i18n.ruleAnnotation]);\n\n  const getEditColumnLabel = useMemo(() => {\n    const editColumnLabel: { [columnGroupType: string]: string } = {};\n    editColumnLabel[DecisionTableColumnType.InputClause] = i18n.editClause.input;\n    editColumnLabel[DecisionTableColumnType.OutputClause] = i18n.editClause.output;\n    return editColumnLabel;\n  }, [i18n.editClause.input, i18n.editClause.output]);\n\n  const [selectedHitPolicy, setSelectedHitPolicy] = useState(hitPolicy);\n  const [selectedAggregation, setSelectedAggregation] = useState(aggregation);\n\n  const onHitPolicySelect = useCallback((itemId: string) => setSelectedHitPolicy(itemId as HitPolicy), []);\n\n  const onBuiltInAggregatorSelect = useCallback(\n    (itemId) => setSelectedAggregation((BuiltinAggregation as never)[itemId]),\n    []\n  );\n\n  const evaluateColumns = () => {\n    const inputColumns = _.map(\n      input,\n      (inputClause) =>\n        ({\n          label: inputClause.name,\n          accessor: inputClause.name,\n          dataType: inputClause.dataType,\n          width: inputClause.width,\n          groupType: DecisionTableColumnType.InputClause,\n          cssClasses: \"decision-table--input\",\n        } as ColumnInstance)\n    );\n    const outputColumns = _.map(\n      output,\n      (outputClause) =>\n        ({\n          label: outputClause.name,\n          accessor: outputClause.name,\n          dataType: outputClause.dataType,\n          width: outputClause.width,\n          groupType: DecisionTableColumnType.OutputClause,\n          cssClasses: \"decision-table--output\",\n        } as ColumnInstance)\n    );\n    const annotationColumns = _.map(\n      annotations,\n      (annotation) =>\n        ({\n          label: annotation.name,\n          accessor: annotation.name,\n          width: annotation.width,\n          inlineEditable: true,\n          groupType: DecisionTableColumnType.Annotation,\n          cssClasses: \"decision-table--annotation\",\n        } as ColumnInstance)\n    );\n\n    const inputSection = {\n      groupType: DecisionTableColumnType.InputClause,\n      label: \"Input\",\n      accessor: \"Input\",\n      cssClasses: \"decision-table--input\",\n      columns: inputColumns,\n    };\n    const outputSection = {\n      groupType: DecisionTableColumnType.OutputClause,\n      label: decisionName.current,\n      accessor: decisionName.current,\n      dataType: decisionDataType.current,\n      cssClasses: \"decision-table--output\",\n      columns: outputColumns,\n      appendColumnsOnChildren: true,\n    };\n    const annotationSection = {\n      groupType: DecisionTableColumnType.Annotation,\n      label: \"Annotations\",\n      accessor: \"Annotations\",\n      cssClasses: \"decision-table--annotation\",\n      columns: annotationColumns,\n      inlineEditable: true,\n    };\n\n    return [inputSection, outputSection, annotationSection];\n  };\n\n  const evaluateRows = () =>\n    _.map(rules, (rule) => {\n      const rowArray = [...rule.inputEntries, ...rule.outputEntries, ...rule.annotationEntries];\n      return _.reduce(\n        getColumnsAtLastLevel(columns.current),\n        (tableRow: DataRecord, column, columnIndex: number) => {\n          tableRow[column.accessor] = rowArray[columnIndex] || EMPTY_SYMBOL;\n          return tableRow;\n        },\n        {}\n      );\n    });\n\n  const decisionName = useRef(name);\n  const decisionDataType = useRef(dataType);\n  const singleOutputChildDataType = useRef(DataType.Undefined);\n  const columns = useRef<ColumnInstance[]>(evaluateColumns() as ColumnInstance[]);\n  const rows = useRef<DataRecord[]>(evaluateRows());\n\n  const spreadDecisionTableExpressionDefinition = useCallback(() => {\n    const groupedColumns = _.groupBy(getColumnsAtLastLevel(columns.current), (column) => column.groupType);\n    const input: Clause[] = _.map(groupedColumns[DecisionTableColumnType.InputClause], (inputClause) => ({\n      name: inputClause.accessor,\n      dataType: inputClause.dataType,\n      width: inputClause.width,\n    }));\n    const output: Clause[] = _.map(groupedColumns[DecisionTableColumnType.OutputClause], (outputClause) => ({\n      name: outputClause.accessor,\n      dataType: outputClause.dataType,\n      width: outputClause.width,\n    }));\n    const annotations: Annotation[] = _.map(groupedColumns[DecisionTableColumnType.Annotation], (annotation) => ({\n      name: annotation.accessor,\n      width: annotation.width,\n    }));\n    const rules: DecisionTableRule[] = _.map(rows.current, (row: DataRecord) => ({\n      inputEntries: _.map(input, (inputClause) => row[inputClause.name] as string),\n      outputEntries: _.map(output, (outputClause) => row[outputClause.name] as string),\n      annotationEntries: _.map(annotations, (annotation) => row[annotation.name] as string),\n    }));\n\n    const expressionDefinition: DecisionTableProps = {\n      uid,\n      logicType: LogicType.DecisionTable,\n      name: decisionName.current,\n      dataType: decisionDataType.current,\n      hitPolicy: selectedHitPolicy,\n      aggregation: selectedAggregation,\n      input,\n      output,\n      annotations,\n      rules,\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(expressionDefinition);\n    } else {\n      setSupervisorHash(hashfy(expressionDefinition));\n      window.beeApi?.broadcastDecisionTableExpressionDefinition?.(expressionDefinition);\n    }\n  }, [isHeadless, onUpdatingRecursiveExpression, selectedAggregation, selectedHitPolicy, setSupervisorHash, uid]);\n\n  const synchronizeDecisionNodeDataTypeWithSingleOutputColumnDataType = useCallback(\n    (decisionNodeColumn: ColumnInstance) => {\n      if (_.size(decisionNodeColumn.columns) === 1) {\n        const updatedSingleOutputChildDataType = (_.first(decisionNodeColumn.columns) as ColumnInstance).dataType;\n\n        if (updatedSingleOutputChildDataType !== singleOutputChildDataType.current) {\n          singleOutputChildDataType.current = updatedSingleOutputChildDataType;\n          decisionNodeColumn.dataType = updatedSingleOutputChildDataType;\n        } else if (decisionNodeColumn.dataType !== decisionDataType.current) {\n          singleOutputChildDataType.current = decisionNodeColumn.dataType;\n          (_.first(decisionNodeColumn.columns) as ColumnInstance).dataType = decisionNodeColumn.dataType;\n        }\n      }\n    },\n    []\n  );\n\n  const onColumnsUpdate = useCallback(\n    (updatedColumns) => {\n      const decisionNodeColumn = _.find(updatedColumns, { groupType: DecisionTableColumnType.OutputClause });\n\n      synchronizeDecisionNodeDataTypeWithSingleOutputColumnDataType(decisionNodeColumn);\n\n      columns.current = [...updatedColumns];\n      decisionName.current = decisionNodeColumn.label;\n      decisionDataType.current = decisionNodeColumn.dataType;\n      onUpdatingNameAndDataType?.(decisionNodeColumn.label, decisionNodeColumn.dataType);\n      spreadDecisionTableExpressionDefinition();\n    },\n    [\n      onUpdatingNameAndDataType,\n      spreadDecisionTableExpressionDefinition,\n      synchronizeDecisionNodeDataTypeWithSingleOutputColumnDataType,\n    ]\n  );\n\n  const fillMissingCellValues = useCallback(\n    (updatedRows: DataRecord[]) =>\n      _.map(updatedRows, (row) =>\n        _.reduce(\n          getColumnsAtLastLevel(columns.current),\n          (filledRow: DataRecord, column: ColumnInstance) => {\n            if (_.isNil(row[column.accessor])) {\n              filledRow[column.accessor] =\n                column.groupType === DecisionTableColumnType.InputClause ? DASH_SYMBOL : EMPTY_SYMBOL;\n            } else {\n              filledRow[column.accessor] = row[column.accessor];\n            }\n            return filledRow;\n          },\n          {}\n        )\n      ),\n    []\n  );\n\n  const onRowsUpdate = useCallback(\n    (updatedRows) => {\n      rows.current = fillMissingCellValues(updatedRows);\n      spreadDecisionTableExpressionDefinition();\n    },\n    [fillMissingCellValues, spreadDecisionTableExpressionDefinition]\n  );\n\n  const onRowAdding = useCallback(() => {\n    return _.reduce(\n      getColumnsAtLastLevel(columns.current),\n      (tableRow: DataRecord, column: ColumnInstance) => {\n        tableRow[column.accessor] =\n          column.groupType === DecisionTableColumnType.InputClause ? DASH_SYMBOL : EMPTY_SYMBOL;\n        return tableRow;\n      },\n      {} as DataRecord\n    );\n  }, []);\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadDecisionTableExpressionDefinition();\n  }, [spreadDecisionTableExpressionDefinition]);\n\n  return (\n    <div className={`decision-table-expression ${uid}`}>\n      <Table\n        headerLevels={1}\n        headerVisibility={TableHeaderVisibility.Full}\n        getColumnPrefix={getColumnPrefix}\n        editColumnLabel={getEditColumnLabel}\n        handlerConfiguration={getHandlerConfiguration}\n        columns={columns.current}\n        rows={rows.current}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowsUpdate={onRowsUpdate}\n        onRowAdding={onRowAdding}\n        controllerCell={useMemo(\n          () => (\n            <HitPolicySelector\n              selectedHitPolicy={selectedHitPolicy}\n              selectedBuiltInAggregator={selectedAggregation}\n              onHitPolicySelect={onHitPolicySelect}\n              onBuiltInAggregatorSelect={onBuiltInAggregatorSelect}\n            />\n          ),\n          [onBuiltInAggregatorSelect, onHitPolicySelect, selectedAggregation, selectedHitPolicy]\n        )}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./HitPolicySelector.css\";\nimport { BuiltinAggregation, getEnumKeyByEnumValue, HitPolicy } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface HitPolicySelectorProps {\n  /** Pre-selected hit policy */\n  selectedHitPolicy: HitPolicy;\n  /** Pre-selected built-in aggregator */\n  selectedBuiltInAggregator: BuiltinAggregation;\n  /** Callback invoked when hit policy selection changes */\n  onHitPolicySelect: (hitPolicy: HitPolicy) => void;\n  /** Callback invoked when built-in aggregator selection changes */\n  onBuiltInAggregatorSelect: (builtInAggregator: BuiltinAggregation) => void;\n}\n\nconst BUILT_IN_AGGREGATION_AVAILABILITY = [HitPolicy.Collect];\nexport const HitPolicySelector: React.FunctionComponent<HitPolicySelectorProps> = ({\n  onBuiltInAggregatorSelect,\n  onHitPolicySelect,\n  selectedBuiltInAggregator,\n  selectedHitPolicy,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [hitPolicySelectOpen, setHitPolicySelectOpen] = useState(false);\n  const [builtInAggregatorSelectOpen, setBuiltInAggregatorSelectOpen] = useState(false);\n  const [builtInAggregatorSelectDisabled, setBuiltInAggregatorSelectDisabled] = useState(\n    !_.includes(BUILT_IN_AGGREGATION_AVAILABILITY, selectedHitPolicy)\n  );\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const onHitPolicySelectToggle = useCallback((isOpen) => setHitPolicySelectOpen(isOpen), []);\n  const onBuiltInAggregatorSelectToggle = useCallback((isOpen) => setBuiltInAggregatorSelectOpen(isOpen), []);\n\n  const hitPolicySelectionCallback = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, itemId: string) => {\n      const updatedHitPolicy = itemId as HitPolicy;\n      const hitPolicySupportsAggregation = _.includes(BUILT_IN_AGGREGATION_AVAILABILITY, updatedHitPolicy);\n      onHitPolicySelect(updatedHitPolicy);\n      if (hitPolicySupportsAggregation) {\n        setBuiltInAggregatorSelectDisabled(false);\n      } else {\n        setBuiltInAggregatorSelectDisabled(true);\n        onBuiltInAggregatorSelect(\"<None>\" as BuiltinAggregation);\n      }\n      setHitPolicySelectOpen(false);\n    },\n    [onBuiltInAggregatorSelect, onHitPolicySelect]\n  );\n\n  const renderHitPolicyItems = useCallback(\n    () =>\n      _.map(Object.values(HitPolicy), (key) => (\n        <SelectOption key={key} value={key} data-ouia-component-id={key}>\n          {key}\n        </SelectOption>\n      )),\n    []\n  );\n\n  const builtInAggregatorSelectionCallback = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, itemId: string) => {\n      onBuiltInAggregatorSelect(itemId as BuiltinAggregation);\n      setBuiltInAggregatorSelectOpen(false);\n    },\n    [onBuiltInAggregatorSelect]\n  );\n\n  const renderBuiltInAggregationItems = useCallback(\n    () =>\n      _.map(Object.keys(BuiltinAggregation), (key) => (\n        <SelectOption key={key} value={key} data-ouia-component-id={key}>\n          {key}\n        </SelectOption>\n      )),\n    []\n  );\n\n  const renderAggregator = useCallback((builtInAggregator: BuiltinAggregation, hitPolicy: HitPolicy) => {\n    if (_.includes(BUILT_IN_AGGREGATION_AVAILABILITY, hitPolicy)) {\n      return builtInAggregator;\n    }\n    return \"\";\n  }, []);\n\n  return (\n    <PopoverMenu\n      title={i18n.editHitPolicy}\n      appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n      className=\"hit-policy-popover\"\n      hasAutoWidth\n      body={\n        <div className=\"hit-policy-container\">\n          <div className=\"hit-policy-section\">\n            <label>{i18n.hitPolicy}</label>\n            <Select\n              className=\"hit-policy-selector\"\n              menuAppendTo={globalContext.boxedExpressionEditorRef?.current ?? \"inline\"}\n              ouiaId=\"hit-policy-selector\"\n              variant={SelectVariant.single}\n              onToggle={onHitPolicySelectToggle}\n              onSelect={hitPolicySelectionCallback}\n              isOpen={hitPolicySelectOpen}\n              selections={selectedHitPolicy}\n            >\n              {renderHitPolicyItems()}\n            </Select>\n          </div>\n          <div className=\"builtin-aggregator-section\">\n            <label>{i18n.builtInAggregator}</label>\n            <Select\n              className=\"builtin-aggregator-selector\"\n              menuAppendTo={globalContext.boxedExpressionEditorRef?.current ?? \"inline\"}\n              ouiaId=\"builtin-aggregator-selector\"\n              isDisabled={builtInAggregatorSelectDisabled}\n              variant={SelectVariant.single}\n              onToggle={onBuiltInAggregatorSelectToggle}\n              onSelect={builtInAggregatorSelectionCallback}\n              isOpen={builtInAggregatorSelectOpen}\n              selections={getEnumKeyByEnumValue(BuiltinAggregation, selectedBuiltInAggregator)!}\n            >\n              {renderBuiltInAggregationItems()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      <div className=\"selected-hit-policy\">{`${_.first(selectedHitPolicy)}${renderAggregator(\n        selectedBuiltInAggregator,\n        selectedHitPolicy\n      )}`}</div>\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ListExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextEntryRecord,\n  DataType,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord, Row } from \"react-table\";\nimport * as _ from \"lodash\";\nimport { hashfy } from \"../Resizer\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport nextId from \"react-id-generator\";\n\nconst LIST_EXPRESSION_MIN_WIDTH = 430;\n\nexport const ListExpression: React.FunctionComponent<ListProps> = ({\n  isHeadless,\n  items,\n  onUpdatingRecursiveExpression,\n  uid,\n  width = LIST_EXPRESSION_MIN_WIDTH,\n}: ListProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = useMemo(\n    () => [\n      {\n        group: i18n.rows,\n        items: [\n          { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n          { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n          { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n          { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n        ],\n      },\n    ],\n    [\n      i18n.rowOperations.clear,\n      i18n.rowOperations.delete,\n      i18n.rowOperations.insertAbove,\n      i18n.rowOperations.insertBelow,\n      i18n.rows,\n    ]\n  );\n\n  const generateLiteralExpression = useCallback(\n    () =>\n      ({\n        uid: nextId(),\n        name: \"\",\n        dataType: DataType.Undefined,\n        logicType: LogicType.LiteralExpression,\n        content: \"\",\n      } as LiteralExpressionProps),\n    []\n  );\n\n  const initialListOfItems = useCallback(() => {\n    if (_.isEmpty(items)) {\n      return [{ entryExpression: generateLiteralExpression() } as DataRecord];\n    } else {\n      return _.map(items, (item) => ({ entryExpression: item } as DataRecord));\n    }\n  }, [generateLiteralExpression, items]);\n\n  const [listItems, setListItems] = useState(initialListOfItems());\n  const [listWidth, setListWidth] = useState(width || LIST_EXPRESSION_MIN_WIDTH);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  const listTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryExpression.uid!, []);\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryExpression: generateLiteralExpression(),\n    }),\n    [generateLiteralExpression]\n  );\n\n  useEffect(() => {\n    const updatedDefinition: ListProps = {\n      uid,\n      logicType: LogicType.List,\n      width: listWidth,\n      items: _.map(listItems, (listItem: DataRecord) => listItem.entryExpression as ExpressionProps),\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(updatedDefinition);\n    } else {\n      setSupervisorHash(hashfy(updatedDefinition));\n      window.beeApi?.broadcastListExpressionDefinition?.(updatedDefinition);\n    }\n  }, [listWidth, listItems, isHeadless, onUpdatingRecursiveExpression, uid, setSupervisorHash]);\n\n  const resetRowCustomFunction = useCallback((row: DataRecord) => {\n    return { entryExpression: { uid: (row.entryExpression as ExpressionProps).uid } };\n  }, []);\n\n  const onRowsUpdate = useCallback((rows) => {\n    setListItems(rows);\n  }, []);\n\n  const columns = useMemo(() => [{ accessor: \"list\", width: listWidth, setWidth: setListWidth }], [listWidth]);\n\n  return useMemo(\n    () => (\n      <div className=\"list-expression\">\n        <Table\n          tableId={uid}\n          headerVisibility={TableHeaderVisibility.None}\n          defaultCell={{ list: ContextEntryExpressionCell }}\n          columns={columns}\n          rows={listItems as DataRecord[]}\n          onRowsUpdate={onRowsUpdate}\n          onRowAdding={onRowAdding}\n          handlerConfiguration={handlerConfiguration}\n          getRowKey={listTableGetRowKey}\n          resetRowCustomFunction={resetRowCustomFunction}\n        />\n      </div>\n    ),\n    [\n      columns,\n      handlerConfiguration,\n      listItems,\n      listTableGetRowKey,\n      onRowAdding,\n      onRowsUpdate,\n      resetRowCustomFunction,\n      uid,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./InvocationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  EntryInfo,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  InvocationProps,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell, ContextEntryInfoCell } from \"../ContextExpression\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { hashfy } from \"../Resizer\";\n\nconst DEFAULT_PARAMETER_NAME = \"p-1\";\nconst DEFAULT_PARAMETER_DATA_TYPE = DataType.Undefined;\n\nexport const InvocationExpression: React.FunctionComponent<InvocationProps> = ({\n  bindingEntries,\n  dataType = DEFAULT_PARAMETER_DATA_TYPE,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  invokedFunction = \"\",\n  isHeadless,\n  logicType,\n  name = DEFAULT_PARAMETER_NAME,\n  onUpdatingNameAndDataType,\n  onUpdatingRecursiveExpression,\n  uid,\n}: InvocationProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [rows, setRows] = useState(\n    bindingEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_PARAMETER_NAME,\n          dataType: DEFAULT_PARAMETER_DATA_TYPE,\n        },\n        entryExpression: {\n          name: DEFAULT_PARAMETER_NAME,\n          dataType: DEFAULT_PARAMETER_DATA_TYPE,\n        },\n        editInfoPopoverLabel: i18n.editParameter,\n        nameAndDataTypeSynchronized: true,\n      } as DataRecord,\n    ]\n  );\n\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const [functionName, setFunctionName] = useState(invokedFunction);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  useEffect(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: InvocationProps = {\n      uid,\n      logicType,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      bindingEntries: rows as ContextEntries,\n      invokedFunction: functionName,\n      entryInfoWidth: infoWidth,\n      entryExpressionWidth: expressionWidth,\n    };\n\n    const expression = _.omit(updatedDefinition, [\"name\", \"dataType\"]);\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(expression);\n    } else {\n      setSupervisorHash(hashfy(expression));\n      window.beeApi?.broadcastInvocationExpressionDefinition?.(updatedDefinition);\n    }\n  }, [\n    expressionWidth,\n    functionName,\n    infoWidth,\n    isHeadless,\n    logicType,\n    onUpdatingRecursiveExpression,\n    rows,\n    setSupervisorHash,\n    uid,\n  ]);\n\n  const onBlurCallback = useCallback((event) => {\n    setFunctionName(event.target.value);\n  }, []);\n\n  const headerCellElement = (\n    <div className=\"function-definition-container\">\n      <input\n        className=\"function-definition pf-u-text-truncate\"\n        type=\"text\"\n        placeholder={i18n.enterFunction}\n        defaultValue={functionName}\n        onBlur={onBlurCallback}\n      />\n    </div>\n  );\n\n  const columns = useRef([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          headerCellElement,\n          accessor: \"functionDefinition\",\n          disableHandlerOnHeader: true,\n          columns: [\n            {\n              accessor: \"entryInfo\",\n              disableHandlerOnHeader: true,\n              width: infoWidth,\n              setWidth: setInfoWidth,\n              minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n            },\n            {\n              accessor: \"entryExpression\",\n              disableHandlerOnHeader: true,\n              width: expressionWidth,\n              setWidth: setExpressionWidth,\n              minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n            },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label as string, expressionColumn.dataType);\n\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label as string;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onRowAdding = useCallback(() => {\n    const generatedName = generateNextAvailableEntryName(\n      _.map(rows, (row: ContextEntryRecord) => row.entryInfo) as EntryInfo[],\n      \"p\"\n    );\n    return {\n      entryInfo: {\n        name: generatedName,\n        dataType: DEFAULT_PARAMETER_DATA_TYPE,\n      },\n      entryExpression: {\n        name: generatedName,\n        dataType: DEFAULT_PARAMETER_DATA_TYPE,\n      },\n      editInfoPopoverLabel: i18n.editParameter,\n      nameAndDataTypeSynchronized: true,\n    };\n  }, [i18n.editParameter, rows]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.SecondToLastLevel : TableHeaderVisibility.Full;\n  }, [isHeadless]);\n\n  const setRowsCallback = useCallback((entries) => setRows(entries), []);\n  const getRowKeyCallback = useCallback((row) => getEntryKey(row), []);\n  const resetEntryCallback = useCallback((row) => resetEntry(row), []);\n\n  return useMemo(\n    () => (\n      <div className={`invocation-expression ${uid}`}>\n        <Table\n          tableId={uid}\n          headerLevels={2}\n          headerVisibility={getHeaderVisibility()}\n          skipLastHeaderGroup\n          defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n          columns={columns.current}\n          rows={rows as DataRecord[]}\n          onColumnsUpdate={onColumnsUpdate}\n          onRowAdding={onRowAdding}\n          onRowsUpdate={setRowsCallback}\n          handlerConfiguration={getHandlerConfiguration(i18n, i18n.parameters)}\n          getRowKey={getRowKeyCallback}\n          resetRowCustomFunction={resetEntryCallback}\n        />\n      </div>\n    ),\n    [\n      getHeaderVisibility,\n      getRowKeyCallback,\n      i18n,\n      onColumnsUpdate,\n      onRowAdding,\n      resetEntryCallback,\n      rows,\n      setRowsCallback,\n      uid,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditParameters.css\";\nimport * as _ from \"lodash\";\nimport { DataTypeSelector } from \"../EditExpressionMenu\";\nimport { Button } from \"@patternfly/react-core\";\nimport { OutlinedTrashAltIcon } from \"@patternfly/react-icons\";\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback } from \"react\";\nimport { DataType, EntryInfo, generateNextAvailableEntryName } from \"../../api\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\n\nexport interface EditParametersProps {\n  /** List of parameters */\n  parameters: EntryInfo[];\n  /** Function for mutating parameters state */\n  setParameters: React.Dispatch<React.SetStateAction<EntryInfo[]>>;\n}\n\nexport const EditParameters: React.FunctionComponent<EditParametersProps> = ({ parameters, setParameters }) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const addParameter = useCallback(() => {\n    setParameters((parameters) => [\n      ...parameters,\n      {\n        name: generateNextAvailableEntryName(parameters, \"p\"),\n        dataType: DataType.Undefined,\n      },\n    ]);\n  }, [setParameters]);\n\n  const onNameChange = useCallback(\n    (index: number) => (event: ChangeEvent<HTMLInputElement>) =>\n      setParameters((parameters) => {\n        parameters[index].name = event.target.value;\n        return [...parameters];\n      }),\n    [setParameters]\n  );\n\n  const onDataTypeChange = useCallback(\n    (index: number) => (dataType: DataType) => {\n      setParameters((parameters) => {\n        parameters[index].dataType = dataType;\n        return [...parameters];\n      });\n    },\n    [setParameters]\n  );\n\n  const onParameterRemove = useCallback(\n    (index: number) => () =>\n      setParameters((parameters) => [...parameters.slice(0, index), ...parameters.slice(index + 1)]),\n    [setParameters]\n  );\n\n  return (\n    <div className=\"parameters-editor\">\n      <Button variant=\"tertiary\" onClick={addParameter} className=\"add-parameter\">\n        {i18n.addParameter}\n      </Button>\n      <div className=\"parameters-container\">\n        {_.map(parameters, (parameter, index) => {\n          return (\n            <div key={`${parameter.name}_${index}`} className=\"parameter-entry\">\n              <input\n                className=\"parameter-name\"\n                type=\"text\"\n                onBlur={onNameChange(index)}\n                defaultValue={parameter.name}\n              />\n              <DataTypeSelector\n                selectedDataType={parameter.dataType}\n                onDataTypeChange={onDataTypeChange(index)}\n                menuAppendTo=\"parent\"\n              />\n              <Button\n                variant=\"danger\"\n                className=\"delete-parameter\"\n                icon={<OutlinedTrashAltIcon />}\n                iconPosition=\"left\"\n                onClick={onParameterRemove(index)}\n              >\n                {i18n.delete}\n              </Button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { FunctionKind } from \"../../api\";\n\nexport interface FunctionKindSelectorProps {\n  /** Pre-selected function kind */\n  selectedFunctionKind: FunctionKind;\n  /** Callback invoked when function kind selection changes */\n  onFunctionKindSelect: (functionKind: FunctionKind) => void;\n}\n\nexport const FunctionKindSelector: React.FunctionComponent<FunctionKindSelectorProps> = ({\n  selectedFunctionKind,\n  onFunctionKindSelect,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const functionKindSelectionCallback = useCallback(\n    (hide: () => void) => (event?: React.MouseEvent, itemId?: string | number) => {\n      onFunctionKindSelect(itemId as FunctionKind);\n      hide();\n    },\n    [onFunctionKindSelect]\n  );\n\n  const renderFunctionKindItems = useCallback(\n    () =>\n      _.map(Object.values(FunctionKind), (key) => (\n        <MenuItem key={key} itemId={key} data-ouia-component-id={key}>\n          {key}\n        </MenuItem>\n      )),\n    []\n  );\n\n  return (\n    <PopoverMenu\n      title={i18n.selectFunctionKind}\n      appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n      className=\"function-kind-popover\"\n      hasAutoWidth\n      body={(hide: () => void) => (\n        <Menu onSelect={functionKindSelectionCallback(hide)}>\n          <MenuList>{renderFunctionKindItems()}</MenuList>\n        </Menu>\n      )}\n    >\n      <div className=\"selected-function-kind\">{_.first(selectedFunctionKind)}</div>\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./FunctionExpression.css\";\nimport * as React from \"react\";\nimport { PropsWithChildren, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  ExpressionProps,\n  FeelFunctionProps,\n  FunctionKind,\n  FunctionProps,\n  JavaFunctionProps,\n  LiteralExpressionProps,\n  LogicType,\n  PmmlFunctionProps,\n  PMMLLiteralExpressionProps,\n  resetEntry,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { FunctionKindSelector } from \"./FunctionKindSelector\";\nimport { EditParameters } from \"./EditParameters\";\nimport { hashfy } from \"../Resizer\";\n\nexport const DEFAULT_FIRST_PARAM_NAME = \"p-1\";\n\nexport const FunctionExpression: React.FunctionComponent<FunctionProps> = (props: PropsWithChildren<FunctionProps>) => {\n  const parametersWidth =\n    props.parametersWidth === undefined ? DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH : props.parametersWidth;\n  const formalParameters = props.formalParameters === undefined ? [] : props.formalParameters;\n  const functionKind = props.functionKind === undefined ? FunctionKind.Feel : props.functionKind;\n  const [width, setWidth] = useState(parametersWidth);\n\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const { boxedExpressionEditorRef, setSupervisorHash, pmmlParams } = useContext(BoxedExpressionGlobalContext);\n\n  const [parameters, setParameters] = useState(formalParameters);\n\n  const name = useRef(props.name === undefined ? DEFAULT_FIRST_PARAM_NAME : props.name);\n  const dataType = useRef(props.dataType === undefined ? DataType.Undefined : props.dataType);\n\n  const document = useRef((props as PmmlFunctionProps).document);\n  const model = useRef((props as PmmlFunctionProps).model);\n\n  const editParametersPopoverAppendTo = useCallback(() => {\n    return () => boxedExpressionEditorRef.current!;\n  }, [boxedExpressionEditorRef]);\n\n  const headerCellElement = useMemo(\n    () => (\n      <PopoverMenu\n        title={i18n.editParameters}\n        appendTo={editParametersPopoverAppendTo()}\n        className=\"parameters-editor-popover\"\n        minWidth=\"400px\"\n        body={<EditParameters parameters={parameters} setParameters={setParameters} />}\n      >\n        <div className={`parameters-list ${_.isEmpty(parameters) ? \"empty-parameters\" : \"\"}`}>\n          <p className=\"pf-u-text-truncate\">\n            {_.isEmpty(parameters)\n              ? i18n.editParameters\n              : `(${_.join(\n                  _.map(parameters, (parameter) => parameter.name),\n                  \", \"\n                )})`}\n          </p>\n        </div>\n      </PopoverMenu>\n    ),\n    [editParametersPopoverAppendTo, i18n.editParameters, parameters]\n  );\n\n  const evaluateColumns = useCallback(\n    () =>\n      [\n        {\n          label: name.current,\n          accessor: name.current,\n          dataType: dataType.current,\n          disableHandlerOnHeader: true,\n          columns: [\n            {\n              headerCellElement,\n              accessor: \"parameters\",\n              disableHandlerOnHeader: true,\n              width: width,\n              minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n            },\n          ],\n        },\n      ] as ColumnInstance[],\n    [headerCellElement, width]\n  );\n\n  const extractContextEntriesFromJavaProps = useCallback(\n    (javaProps: JavaFunctionProps & { children?: React.ReactNode }) => {\n      return [\n        {\n          entryInfo: { name: i18n.class, dataType: DataType.String },\n          entryExpression: {\n            noClearAction: true,\n            logicType: LogicType.LiteralExpression,\n            content: javaProps.class,\n          } as LiteralExpressionProps,\n        },\n        {\n          entryInfo: { name: i18n.methodSignature, dataType: DataType.String },\n          entryExpression: {\n            noClearAction: true,\n            logicType: LogicType.LiteralExpression,\n            content: javaProps.method,\n          } as LiteralExpressionProps,\n        },\n      ];\n    },\n    [i18n.class, i18n.methodSignature]\n  );\n\n  const extractContextEntriesFromPmmlProps = useCallback(() => {\n    return [\n      {\n        entryInfo: { name: i18n.document, dataType: DataType.String },\n        entryExpression: {\n          noClearAction: true,\n          logicType: LogicType.PMMLLiteralExpression,\n          noOptionsLabel: i18n.pmml.firstSelection,\n          getOptions: () => _.map(pmmlParams, \"document\"),\n          selected: document.current,\n        } as PMMLLiteralExpressionProps,\n      },\n      {\n        entryInfo: { name: i18n.model, dataType: DataType.String },\n        entryExpression: {\n          noClearAction: true,\n          logicType: LogicType.PMMLLiteralExpression,\n          noOptionsLabel: i18n.pmml.secondSelection,\n          getOptions: () =>\n            _.map(_.find(pmmlParams, (param) => param.document === document.current)?.modelsFromDocument, \"model\"),\n          selected: model.current,\n        } as PMMLLiteralExpressionProps,\n      },\n    ];\n  }, [i18n.document, i18n.model, i18n.pmml.firstSelection, i18n.pmml.secondSelection, pmmlParams]);\n\n  const extractParametersFromPmmlProps = useCallback(() => {\n    return (\n      _.find(_.find(pmmlParams, { document: document.current })?.modelsFromDocument, {\n        model: model.current,\n      })?.parametersFromModel || []\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const evaluateRows = useCallback(\n    (functionKind: FunctionKind) => {\n      switch (functionKind) {\n        case FunctionKind.Java: {\n          const javaProps: PropsWithChildren<JavaFunctionProps> = props as PropsWithChildren<JavaFunctionProps>;\n          return [\n            {\n              entryExpression: {\n                logicType: LogicType.Context,\n                noClearAction: true,\n                renderResult: false,\n                noHandlerMenu: true,\n                contextEntries: extractContextEntriesFromJavaProps(javaProps),\n              },\n            } as DataRecord,\n          ];\n        }\n        case FunctionKind.Pmml: {\n          return [\n            {\n              entryExpression: {\n                logicType: LogicType.Context,\n                noClearAction: true,\n                renderResult: false,\n                noHandlerMenu: true,\n                contextEntries: extractContextEntriesFromPmmlProps(),\n              },\n            } as DataRecord,\n          ];\n        }\n        case FunctionKind.Feel:\n        default: {\n          const feelProps: PropsWithChildren<FeelFunctionProps> = props as PropsWithChildren<FeelFunctionProps>;\n          return [\n            { entryExpression: feelProps.expression || { logicType: LogicType.LiteralExpression } } as DataRecord,\n          ];\n        }\n      }\n    },\n    [extractContextEntriesFromJavaProps, extractContextEntriesFromPmmlProps, props]\n  );\n\n  const columns = useRef(evaluateColumns());\n  const [selectedFunctionKind, setSelectedFunctionKind] = useState(functionKind);\n  const [rows, setRows] = useState(evaluateRows(selectedFunctionKind));\n\n  const retrieveModelValue = useCallback(\n    (documentValue: string, contextProps: ContextProps) =>\n      documentValue === document.current\n        ? _.includes(\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as PMMLLiteralExpressionProps)?.getOptions(),\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as PMMLLiteralExpressionProps)?.selected\n          )\n          ? (_.nth(contextProps.contextEntries, 1)?.entryExpression as PMMLLiteralExpressionProps)?.selected\n          : \"\"\n        : \"\",\n    []\n  );\n\n  const setParametersBasedOnDocumentAndModel = useCallback(\n    (documentHasBeenChanged: boolean, modelHasBeenChanged: boolean) => {\n      if (documentHasBeenChanged) {\n        setParameters([]);\n      }\n      if (modelHasBeenChanged) {\n        const parametersFromPmmlProps = extractParametersFromPmmlProps();\n        if (!_.isEmpty(parametersFromPmmlProps)) {\n          setParameters(parametersFromPmmlProps);\n        }\n      }\n    },\n    [extractParametersFromPmmlProps]\n  );\n\n  const extendDefinitionBasedOnFunctionKind = useCallback(\n    (definition: FunctionProps, functionKind: FunctionKind) => {\n      switch (functionKind) {\n        case FunctionKind.Java: {\n          const contextProps = _.first(rows)?.entryExpression as ContextProps;\n          const className =\n            (_.nth(contextProps.contextEntries, 0)?.entryExpression as LiteralExpressionProps)?.content || \"\";\n          const methodName =\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as LiteralExpressionProps)?.content || \"\";\n          return _.extend(definition, { class: className, method: methodName });\n        }\n        case FunctionKind.Pmml: {\n          const contextProps = _.first(rows)?.entryExpression as ContextProps;\n          const documentValue =\n            (_.nth(contextProps.contextEntries, 0)?.entryExpression as PMMLLiteralExpressionProps)?.selected || \"\";\n          const modelValue = retrieveModelValue(documentValue, contextProps);\n          const documentHasBeenChanged = documentValue !== document.current;\n          const modelHasBeenChanged = modelValue !== model.current;\n          document.current = documentValue;\n          model.current = modelValue;\n          setParametersBasedOnDocumentAndModel(documentHasBeenChanged, modelHasBeenChanged);\n          return _.extend(definition, { document: documentValue, model: modelValue });\n        }\n        case FunctionKind.Feel:\n        default: {\n          return _.extend(definition, { expression: _.first(rows)?.entryExpression as ExpressionProps });\n        }\n      }\n    },\n    [retrieveModelValue, rows, setParametersBasedOnDocumentAndModel]\n  );\n\n  const spreadFunctionExpressionDefinition = useCallback(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: FunctionProps = extendDefinitionBasedOnFunctionKind(\n      {\n        uid: props.uid,\n        logicType: props.logicType,\n        name: expressionColumn.accessor,\n        dataType: expressionColumn.dataType,\n        functionKind: selectedFunctionKind,\n        formalParameters: parameters,\n        parametersWidth: width,\n      },\n      selectedFunctionKind\n    );\n\n    if (props.isHeadless) {\n      props.onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]));\n    } else {\n      setSupervisorHash(hashfy(rows));\n      window.beeApi?.broadcastFunctionExpressionDefinition?.(updatedDefinition);\n    }\n  }, [extendDefinitionBasedOnFunctionKind, setSupervisorHash, parameters, props, selectedFunctionKind, rows, width]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return props.isHeadless ? TableHeaderVisibility.LastLevel : TableHeaderVisibility.Full;\n  }, [props.isHeadless]);\n\n  const onFunctionKindSelect = useCallback(\n    (itemId: string) => {\n      const kind = itemId as FunctionKind;\n      setSelectedFunctionKind(kind);\n      // Resetting table content, every time function kind gets selected\n      setRows([{ entryExpression: { logicType: LogicType.Undefined } }]);\n      // Need to wait for the next rendering cycle before setting the correct table rows, based on function kind\n      setTimeout(() => {\n        setRows(evaluateRows(kind));\n      }, 0);\n    },\n    [evaluateRows]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      props.onUpdatingNameAndDataType?.(expressionColumn.label as string, expressionColumn.dataType);\n      setWidth(expressionColumn.width as number);\n\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label as string;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n      spreadFunctionExpressionDefinition();\n    },\n    [columns, props, spreadFunctionExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Everytime the list of parameters or the function definition change, we need to spread expression's updated definition */\n    spreadFunctionExpressionDefinition();\n  }, [rows, spreadFunctionExpressionDefinition]);\n\n  useEffect(() => {\n    columns.current = evaluateColumns();\n    // Watching for changes of the parameters, in order to update the columns passed to the table\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parameters]);\n\n  const resetRowCustomFunction = useCallback((row) => {\n    setSelectedFunctionKind(FunctionKind.Feel);\n    return resetEntry(row);\n  }, []);\n\n  return (\n    <div className={`function-expression ${props.uid}`}>\n      <Table\n        handlerConfiguration={[\n          {\n            group: _.upperCase(i18n.function),\n            items: [{ name: i18n.rowOperations.clear, type: TableOperation.RowClear }],\n          },\n        ]}\n        columns={columns.current}\n        onColumnsUpdate={onColumnsUpdate}\n        rows={rows}\n        onRowsUpdate={setRows}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        controllerCell={useMemo(\n          () => (\n            <FunctionKindSelector\n              selectedFunctionKind={selectedFunctionKind}\n              onFunctionKindSelect={onFunctionKindSelect}\n            />\n          ),\n          [onFunctionKindSelect, selectedFunctionKind]\n        )}\n        defaultCell={{ parameters: ContextEntryExpressionCell }}\n        resetRowCustomFunction={resetRowCustomFunction}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionProps,\n  FunctionKind,\n  FunctionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  PMMLLiteralExpressionProps,\n  RelationProps,\n} from \"../../api\";\nimport { LiteralExpression, PMMLLiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport nextId from \"react-id-generator\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DecisionTableExpression } from \"../DecisionTableExpression\";\nimport { ListExpression } from \"../ListExpression\";\nimport { InvocationExpression } from \"../InvocationExpression\";\nimport { FunctionExpression } from \"../FunctionExpression\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const expression = _.extend(selectedExpression, {\n    uid: selectedExpression.uid || nextId(),\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n    targetElement,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.PMMLLiteralExpression:\n        return <PMMLLiteralExpression {...(expression as PMMLLiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n        return <DecisionTableExpression {...(expression as DecisionTableProps)} />;\n      case LogicType.Invocation:\n        return <InvocationExpression {...(expression as InvocationProps)} />;\n      case LogicType.List:\n        return <ListExpression {...(expression as ListProps)} />;\n      case LogicType.Function:\n        return <FunctionExpression {..._.defaults(expression, { functionKind: FunctionKind.Feel } as FunctionProps)} />;\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getSelectableLogicTypes = useCallback(\n    () =>\n      Object.values(LogicType).filter(\n        (logicType) => !_.includes([LogicType.Undefined, LogicType.PMMLLiteralExpression], logicType)\n      ),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () =>\n      _.map(getSelectableLogicTypes(), (key) => (\n        <MenuItem key={key} itemId={key}>\n          {key}\n        </MenuItem>\n      )),\n    [getSelectableLogicTypes]\n  );\n\n  const getArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const getAppendToPlacement = useCallback(() => {\n    return globalContext.boxedExpressionEditorRef?.current ?? getArrowPlacement;\n  }, [getArrowPlacement, globalContext.boxedExpressionEditorRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (event?: React.MouseEvent, itemId?: string | number) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = itemId as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getArrowPlacement}\n        appendTo={getAppendToPlacement()}\n        className=\"logic-type-popover\"\n        hasAutoWidth\n        body={\n          <Menu onSelect={onLogicTypeSelect}>\n            <MenuList>{renderLogicTypeItems()}</MenuList>\n          </Menu>\n        }\n      />\n    ),\n    [i18n.selectLogicType, getArrowPlacement, getAppendToPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Menu className=\"table-handler-menu\">\n          <MenuGroup label={(expression?.logicType ?? LogicType.Undefined).toLocaleUpperCase()}>\n            <MenuList>\n              <MenuItem isDisabled={!logicTypeSelected} onClick={executeClearAction}>\n                {i18n.clear}\n              </MenuItem>\n            </MenuList>\n          </MenuGroup>\n        </Menu>\n      </div>\n    ),\n    [contextMenuYPos, contextMenuXPos, expression.logicType, logicTypeSelected, executeClearAction, i18n.clear]\n  );\n\n  const shouldClearContextMenuBeOpened = useMemo(() => {\n    const notClickedOnTable = _.isNil((targetElement as HTMLElement)?.closest(\"table\"));\n    const clickedOnTableRemainderContent = !_.isNil((targetElement as HTMLElement)?.closest(\".row-remainder-content\"));\n    const clickedOnAllowedTableSection = notClickedOnTable || clickedOnTableRemainderContent;\n\n    return !selectedExpression.noClearAction && contextMenuVisibility && clickedOnAllowedTableSection;\n  }, [contextMenuVisibility, selectedExpression.noClearAction, targetElement]);\n\n  return (\n    <div\n      className={`logic-type-selector ${logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"}`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {shouldClearContextMenuBeOpened ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n  targetElement?: EventTarget;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n  const eventTarget = useRef<EventTarget>();\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        eventTarget.current = event.target;\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n    targetElement: eventTarget.current,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        uid: previousSelectedExpression.uid,\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <div className=\"expression-name-and-logic-type\">\n        <span className=\"expression-title\">{selectedExpression.name}</span>\n        <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n      </div>\n\n      <div\n        className=\"expression-container-box\"\n        ref={expressionContainerRef}\n        data-ouia-component-id=\"expression-container\"\n      >\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useMemo, useRef, useState } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base-no-reset.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport \"./BoxedExpressionEditor.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport { hashfy, ResizerSupervisor } from \"../Resizer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport * as _ from \"lodash\";\nimport { PMMLParams } from \"../../api\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n  /** PMML parameters */\n  pmmlParams?: PMMLParams;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => {\n  const [currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback] = useState(() => _.identity);\n  const boxedExpressionEditorRef = useRef<HTMLDivElement>(null);\n  const [supervisorHash, setSupervisorHash] = useState(hashfy(props.expressionDefinition));\n\n  return useMemo(\n    () => (\n      <I18nDictionariesProvider\n        defaults={boxedExpressionEditorI18nDefaults}\n        dictionaries={boxedExpressionEditorDictionaries}\n        initialLocale={navigator.language}\n        ctx={BoxedExpressionEditorI18nContext}\n      >\n        <BoxedExpressionGlobalContext.Provider\n          value={{\n            pmmlParams: props.pmmlParams,\n            supervisorHash,\n            setSupervisorHash,\n            boxedExpressionEditorRef,\n            currentlyOpenedHandlerCallback,\n            setCurrentlyOpenedHandlerCallback,\n          }}\n        >\n          <ResizerSupervisor>\n            <div className=\"boxed-expression-editor\" ref={boxedExpressionEditorRef}>\n              <ExpressionContainer {...props.expressionDefinition} />\n            </div>\n          </ResizerSupervisor>\n        </BoxedExpressionGlobalContext.Provider>\n      </I18nDictionariesProvider>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.expressionDefinition]\n  );\n};\n\nexport { BoxedExpressionEditor };\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditor } from \"./components\";\nimport * as React from \"react\";\nimport { ExpressionProps } from \"./api\";\nimport * as ReactDOM from \"react-dom\";\n\nexport * from \"./components\";\nexport * from \"./api\";\n\nwindow.renderBoxedExpressionEditor = (selector: string, definition: ExpressionProps) => {\n  ReactDOM.render(\n    <BoxedExpressionEditor expressionDefinition={{ selectedExpression: definition }} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// noinspection ES6PreferShortImport\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionContainerProps,\n  ExpressionProps,\n  FunctionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./lib\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression: ExpressionProps = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const pmmlParams = [\n    {\n      document: \"mining pmml\",\n      modelsFromDocument: [\n        {\n          model: \"MiningModelSum\",\n          parametersFromModel: [\n            { name: \"input1\", dataType: DataType.Any },\n            { name: \"input2\", dataType: DataType.Any },\n            { name: \"input3\", dataType: DataType.Any },\n          ],\n        },\n      ],\n    },\n    {\n      document: \"regression pmml\",\n      modelsFromDocument: [\n        {\n          model: \"RegressionLinear\",\n          parametersFromModel: [\n            { name: \"i1\", dataType: DataType.Number },\n            { name: \"i2\", dataType: DataType.Number },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n    broadcastListExpressionDefinition: (definition: ListProps) => setUpdatedExpression(definition),\n    broadcastInvocationExpressionDefinition: (definition: InvocationProps) => setUpdatedExpression(definition),\n    broadcastFunctionExpressionDefinition: (definition: FunctionProps) => setUpdatedExpression(definition),\n    broadcastDecisionTableExpressionDefinition: (definition: DecisionTableProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} pmmlParams={pmmlParams} />\n      </div>\n      <div className=\"updated-json\">\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}