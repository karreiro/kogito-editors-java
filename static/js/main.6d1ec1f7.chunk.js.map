{"version":3,"sources":["boxed_expression_editor/api/BuiltinAggregation.ts","boxed_expression_editor/api/ContextEntry.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/EnumUtils.ts","boxed_expression_editor/api/FunctionKind.ts","boxed_expression_editor/api/HitPolicy.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/index.tsx","boxed_expression_editor/components/EditExpressionMenu/DataTypeSelector.tsx","boxed_expression_editor/components/EditExpressionMenu/EditTextInline.tsx","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/context/BoxedExpressionGlobalContext.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/common/index.ts","boxed_expression_editor/components/Resizer/dom/Cell.ts","boxed_expression_editor/components/Resizer/dom/DOMSession.ts","boxed_expression_editor/components/Resizer/dom/ResizerSupervisorDOM.ts","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/Resizer/ResizerSupervisor.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/Table/TableBody.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/TableHandler.tsx","boxed_expression_editor/components/Table/TableHeader.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/LiteralExpression/PMMLLiteralExpression.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/DecisionTableExpression/DecisionTableExpression.tsx","boxed_expression_editor/components/DecisionTableExpression/HitPolicySelector.tsx","boxed_expression_editor/components/ListExpression/ListExpression.tsx","boxed_expression_editor/components/InvocationExpression/InvocationExpression.tsx","boxed_expression_editor/components/FunctionExpression/EditParameters.tsx","boxed_expression_editor/components/FunctionExpression/FunctionKindSelector.tsx","boxed_expression_editor/components/FunctionExpression/FunctionExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx"],"names":["BuiltinAggregation","DEFAULT_ENTRY_INFO_MIN_WIDTH","DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH","getHandlerConfiguration","i18n","groupName","group","items","name","rowOperations","insertAbove","type","TableOperation","RowInsertAbove","insertBelow","RowInsertBelow","delete","RowDelete","clear","RowClear","generateNextAvailableEntryName","entryInfos","namePrefix","lastIndex","length","candidateName","entryWithCandidateName","_","getEntryKey","row","entryRecord","original","entryInfo","dataType","resetEntry","entryExpression","uid","DataType","getEnumKeyByEnumValue","myEnum","enumValue","keys","Object","filter","x","FunctionKind","HitPolicy","LogicType","en","en_common","addParameter","builtInAggregator","choose","class","columnOperations","insertLeft","insertRight","columns","context","contextEntry","decisionRule","decisionTable","document","editClause","input","output","editContextEntry","editExpression","editHitPolicy","editParameter","editParameters","editRelation","enterFunction","function","hitPolicy","inputClause","invocation","list","literalExpression","methodSignature","model","outputClause","parameters","pmml","firstSelection","secondSelection","relation","duplicate","rows","ruleAnnotation","selectExpression","selectFunctionKind","selectLogicType","boxedExpressionEditorI18nDefaults","locale","dictionary","boxedExpressionEditorDictionaries","Map","BoxedExpressionEditorI18nContext","React","useBoxedExpressionEditorI18n","useContext","App","selectedExpression","logicType","pmmlParams","modelsFromDocument","parametersFromModel","Any","Number","useState","updatedExpression","setUpdatedExpression","expressionDefinition","window","beeApi","resetExpressionDefinition","definition","broadcastLiteralExpressionDefinition","broadcastRelationExpressionDefinition","broadcastContextExpressionDefinition","broadcastListExpressionDefinition","broadcastInvocationExpressionDefinition","broadcastFunctionExpressionDefinition","broadcastDecisionTableExpressionDefinition","className","JSON","stringify","ReactDOM","getElementById","TableHeaderVisibility","renderBoxedExpressionEditor","selector","DataTypeSelector","selectedDataType","onDataTypeChange","menuAppendTo","dataTypeSelectOpen","setDataTypeSelectOpen","onDataTypeSelect","useCallback","event","selection","getDataTypes","values","key","SelectOption","value","data-ouia-component-id","onDataTypeFilter","e","RegExp","target","exception","child","test","props","onDataTypeSelectToggle","isOpen","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","EditTextInline","onTextChange","toggle","setToggle","onValueBlur","changedText","trim","onKeyDown","useMemo","pressedEnter","pressedEscape","currentTarget","blur","onDoubleClick","autoFocus","defaultValue","onBlur","style","borderRadius","PopoverMenu","children","arrowPlacement","body","title","appendTo","hasAutoWidth","minWidth","Popover","position","distance","id","reference","headerContent","bodyContent","BoxedExpressionGlobalContext","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","Undefined","selectedExpressionName","onExpressionUpdate","globalContext","boxedExpressionEditorRef","current","undefined","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","onChange","placeholder","DEFAULT_MIN_WIDTH","widthValue","width","Math","max","round","parseFloat","hashfy","obj","Cell","element","depth","lastColumn","rect","parentRow","this","slice","call","classList","c","match","getBoundingClientRect","getParentRow","lastChild","closest","cellWidth","dispatchEvent","CustomEvent","detail","notifyCell","getId","setWidth","fetchChildWidth","isLastColumn","parentRect","right","getRect","isColSpanHeader","currentType","parentElement","getParent","contains","currentTypeFn","refSibling","nextSibling","childrenRects","querySelectorAll","map","min","thead","querySelector","DOMSession","cells","buildCells","fetchCellElements","forEach","cellElement","buildCell","htmlElement","depthLevel","exitingElement","find","cell","push","parent","htmlElements","applyDOMSupervisor","SupervisorExecution","execute","domSession","getCells","sort","c1","c2","refreshWidthAsParent","refreshWidthAsLastGroupColumn","refreshWidthAsLastColumn","Resizer","height","onHorizontalResizeStop","resizerWidth","setResizerWidth","initalResizerWidth","setInitialResizerWidth","setCells","setSupervisorHash","uuid","resizerMinWidth","resizerClassName","useLayoutEffect","listener","addEventListener","removeEventListener","commonWidthValue","getApplicableCells","allCells","currentCell","applicableCells","currentRect","hasSameParent","hasSomeLastColumn","hasParentRelationship","isCellParent","shareSamePosition","cellRect","textContent","console","log","containsCurrent","isLastGroupColumn","dataset","initialWidth","onResizeStart","onResize","data","newResizerWidth","parseInt","size","delta","celllElement","cellInitialWidth","onResizeStop","minConstraints","axis","handle","ResizerSupervisor","supervisorHash","setTimeout","clearTimeout","READ_MODE","EDIT_MODE","EditableCell","initialValue","index","column","onCellUpdate","setValue","isSelected","setIsSelected","mode","setMode","textarea","useRef","activeElement","focus","setSelectionRange","cssClass","onKeyPress","toLowerCase","preventDefault","newValue","altKey","ctrlKey","onClick","ref","onFocus","TableBody","tableInstance","headerVisibility","Full","getRowKey","getColumnKey","onColumnsUpdate","renderCell","cellIndex","rowIndex","cellType","allColumns","cellTemplate","render","Td","getTdProps","renderBodyRow","rowProps","getRowProps","Tr","renderAdditiveRow","role","childIndex","Tbody","None","getTableBodyProps","prepareRow","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","groupOperation","MenuGroup","label","operation","MenuList","MenuItem","isDisabled","TableHandler","getColumnPrefix","tableColumns","lastSelectedColumn","lastSelectedRowIndex","tableRows","onRowsUpdate","onRowAdding","showTableHandler","setShowTableHandler","tableHandlerTarget","tableHandlerAllowedOperations","resetRowCustomFunction","placeholderOf","selectedColumn","setSelectedColumn","selectedRowIndex","setSelectedRowIndex","insertBefore","elements","insertAfter","deleteAt","generateNextAvailableColumnName","groupType","accessor","getLengthOfColumnsByGroupType","generateNextAvailableColumn","cssClasses","getColumnsAtLastLevel","columnsLength","nextAvailableColumnName","inlineEditable","updateColumnsThenRows","appendOnColumnChildren","getColumnSearchPredicate","unshift","updateTargetColumns","appendColumnsOnChildren","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowDuplicate","duplicateAfter","groupOperationsDoNotDependOnColumn","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","TableHeader","editColumnLabel","skipLastHeaderGroup","getColumnLabel","updateColumnNameInRows","prevColumnName","newColumnName","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","columnToUpdate","parentName","parentColumns","computeColumnKey","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderCellInfoLabel","renderHeaderCellInfo","headerCellElement","columnWidth","columnToBeFound","renderResizableHeaderCell","headerProps","thProps","getThProps","isColspan","join","getCssClass","expression","renderColumn","isCountColumn","getHeaderGroups","headerGroups","renderHeaderGroups","headerGroup","getHeaderGroupProps","headers","renderAtLevelInHeaderGroups","level","Thead","noWrap","LastLevel","SecondToLastLevel","NO_TABLE_CONTEXT_MENU_CLASS","columnId","originalId","columnToCompare","Table","tableId","controllerCell","defaultCell","headerLevels","tableRef","currentControllerCell","setCurrentControllerCell","generateNumberOfRowsSubColumnRecursively","disableResizing","hideFilter","generateNumberOfRowsColumn","numberOfRowsColumn","setTableHandlerTarget","toString","setTableHandlerAllowedOperations","setLastSelectedColumn","setLastSelectedRowIndex","onColumnsUpdateCallback","onRowsUpdateCallback","updatedTableCells","onRowUpdate","updatedRow","updatedRows","defaultColumn","cellRef","contextMenuIsAvailable","targetIsContainedInCurrentTable","contextMenuAvailableForTarget","tableHandlerStateUpdate","currentlyOpenedHandlerCallback","setCurrentlyOpenedHandlerCallback","columnCanBeDeleted","columnsAtLastLevel","groupTypeForCurrentColumn","columnsByGroupType","atLeastTwoColumnsOfTheSameGroupType","getColumnOperations","useTable","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","useBlockLayout","useResizeColumns","TableComposable","getTableProps","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","literalExpressionWidth","spreadLiteralExpressionDefinition","onContentChange","renderElementWithResizeHandler","renderLiteralExpressionHeader","getBodyContent","_number","_columnId","PMMLLiteralExpression","selected","selectOpen","setSelectOpen","onSelectToggle","updatedSelection","getOptions","getSelection","showingPlaceholder","placeholderText","noOptionsLabel","aria-placeholder","single","RelationExpression","relationProps","spreadRelationExpressionDefinition","convertColumnsForTheTable","convertRowsForTheTable","tableRow","onSavingRows","onSavingColumns","columnInstance","ContextEntryExpression","onExpressionResetting","expressionContainerRef","getLogicTypeSelectorRef","onLogicTypeUpdating","onLogicTypeResetting","getPlacementRef","ContextEntryExpressionCell","updatedEntryInfo","nameAndDataTypeSynchronized","ContextEntryInfo","onContextEntryUpdate","editInfoPopoverLabel","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","renderEntryDefinition","additionalCssClass","renderEntryDefinitionWithPopoverMenu","ContextEntryInfoCell","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","contextEntries","result","renderResult","entryInfoWidth","entryExpressionWidth","noHandlerMenu","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setExpressionWidth","setRows","generatedName","getHeaderVisibility","expressionColumn","updatedDefinition","Context","DecisionTableColumnType","BUILT_IN_AGGREGATION_AVAILABILITY","Collect","HitPolicySelector","onBuiltInAggregatorSelect","onHitPolicySelect","selectedBuiltInAggregator","selectedHitPolicy","hitPolicySelectOpen","setHitPolicySelectOpen","builtInAggregatorSelectOpen","setBuiltInAggregatorSelectOpen","builtInAggregatorSelectDisabled","setBuiltInAggregatorSelectDisabled","onHitPolicySelectToggle","onBuiltInAggregatorSelectToggle","hitPolicySelectionCallback","updatedHitPolicy","hitPolicySupportsAggregation","renderHitPolicyItems","builtInAggregatorSelectionCallback","renderBuiltInAggregationItems","renderAggregator","EMPTY_SYMBOL","DECISION_NODE_DEFAULT_NAME","DecisionTableExpression","Unique","aggregation","annotations","rules","inputEntries","outputEntries","annotationEntries","InputClause","OutputClause","Annotation","generateHandlerConfigurationByColumn","configuration","getEditColumnLabel","setSelectedHitPolicy","selectedAggregation","setSelectedAggregation","decisionName","decisionDataType","inputColumns","outputColumns","annotationColumns","annotation","evaluateColumns","rule","rowArray","spreadDecisionTableExpressionDefinition","groupedColumns","DecisionTable","updatedColumns","decisionNodeColumn","fillMissingCellValues","filledRow","ListExpression","generateLiteralExpression","nextId","initialListOfItems","item","listItems","setListItems","listWidth","setListWidth","listTableGetRowKey","List","listItem","DEFAULT_PARAMETER_NAME","DEFAULT_PARAMETER_DATA_TYPE","InvocationExpression","bindingEntries","invokedFunction","functionName","setFunctionName","onBlurCallback","updatedExpressionColumn","setRowsCallback","entries","getRowKeyCallback","resetEntryCallback","EditParameters","setParameters","onNameChange","onParameterRemove","Button","parameter","icon","iconPosition","FunctionKindSelector","selectedFunctionKind","onFunctionKindSelect","functionKindSelectionCallback","hide","renderFunctionKindItems","FunctionExpression","parametersWidth","formalParameters","functionKind","Feel","editParametersPopoverAppendTo","extractContextEntriesFromJavaProps","javaProps","String","noClearAction","method","extractContextEntriesFromPmmlProps","param","extractParametersFromPmmlProps","evaluateRows","Java","Pmml","setSelectedFunctionKind","retrieveModelValue","documentValue","contextProps","setParametersBasedOnDocumentAndModel","documentHasBeenChanged","modelHasBeenChanged","parametersFromPmmlProps","extendDefinitionBasedOnFunctionKind","methodName","modelValue","spreadFunctionExpressionDefinition","kind","LogicTypeSelector","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","Invocation","Function","getSelectableLogicTypes","renderLogicTypeItems","getArrowPlacement","getAppendToPlacement","onLogicTypeSelect","buildLogicSelectorMenu","executeClearAction","buildContextMenu","top","left","isSmall","ButtonVariant","primary","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","previousSelectedExpression","BoxedExpressionEditor","defaults","dictionaries","initialLocale","navigator","language","ctx","Provider"],"mappings":"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","file":"static/js/main.6d1ec1f7.chunk.js","sourcesContent":["/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum BuiltinAggregation {\n  \"<None>\" = \"\",\n  SUM = \"+\",\n  COUNT = \"#\",\n  MIN = \"<\",\n  MAX = \">\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport { ExpressionProps } from \"./ExpressionProps\";\nimport * as _ from \"lodash\";\nimport { DataRecord, Row } from \"react-table\";\nimport { TableHandlerConfiguration, TableOperation } from \"./Table\";\nimport { BoxedExpressionEditorI18n } from \"../i18n\";\n\nexport interface EntryInfo {\n  /** Entry name */\n  name: string;\n  /** Entry data type */\n  dataType: DataType;\n}\n\nexport interface ContextEntryRecord {\n  entryInfo: EntryInfo;\n  /** Entry expression */\n  entryExpression: ExpressionProps;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel?: string;\n  /** True, for synchronizing name and dataType parameters, between entryInfo and entryExpression */\n  nameAndDataTypeSynchronized?: boolean;\n  /** Callback to be invoked on expression resetting */\n  onExpressionResetting?: () => void;\n}\n\nexport type ContextEntries = ContextEntryRecord[];\n\nexport const DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nexport const DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const getHandlerConfiguration = (\n  i18n: BoxedExpressionEditorI18n,\n  groupName: string\n): TableHandlerConfiguration => [\n  {\n    group: groupName,\n    items: [\n      { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n      { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n      { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n    ],\n  },\n];\n\nexport const generateNextAvailableEntryName = (\n  entryInfos: EntryInfo[],\n  namePrefix: string,\n  lastIndex: number = entryInfos.length\n): string => {\n  const candidateName = `${namePrefix}-${lastIndex === 0 ? 1 : lastIndex}`;\n  const entryWithCandidateName = _.find(entryInfos, { name: candidateName });\n  return entryWithCandidateName ? generateNextAvailableEntryName(entryInfos, namePrefix, lastIndex + 1) : candidateName;\n};\n\nexport const getEntryKey = (row: Row): string => {\n  const entryRecord = row.original as ContextEntryRecord;\n  return entryRecord.entryInfo.name + entryRecord.entryInfo.dataType;\n};\n\nexport const resetEntry = (row: DataRecord): DataRecord => ({\n  ...row,\n  entryExpression: { uid: (row.entryExpression as ExpressionProps).uid },\n});\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const getEnumKeyByEnumValue = <T extends { [index: string]: string }>(\n  myEnum: T,\n  enumValue: string\n): keyof T | null => {\n  const keys = Object.keys(myEnum).filter((x) => myEnum[x] == enumValue);\n  return keys.length > 0 ? keys[0] : null;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps } from \"./ExpressionProps\";\nimport { EntryInfo } from \"./ContextEntry\";\n\nexport enum FunctionKind {\n  Feel = \"FEEL\",\n  Java = \"JAVA\",\n  Pmml = \"PMML\",\n}\n\nexport interface FeelFunctionProps {\n  /** Feel Function */\n  functionKind: FunctionKind.Feel;\n  /** The Expression related to the function */\n  expression?: ExpressionProps;\n}\n\nexport interface JavaFunctionProps {\n  /** Java Function */\n  functionKind: FunctionKind.Java;\n  /** Java class */\n  class?: string;\n  /** Method signature */\n  method?: string;\n}\n\ninterface PMMLParam {\n  document: string;\n  modelsFromDocument?: {\n    model: string;\n    parametersFromModel?: EntryInfo[];\n  }[];\n}\n\nexport type PMMLParams = PMMLParam[];\n\nexport interface PmmlFunctionProps {\n  /** Pmml Function */\n  functionKind: FunctionKind.Pmml;\n  /** Selected PMML document */\n  document?: string;\n  /** Selected PMML model */\n  model?: string;\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HitPolicy {\n  Unique = \"UNIQUE\",\n  First = \"FIRST\",\n  Priority = \"PRIORITY\",\n  Any = \"ANY\",\n  Collect = \"COLLECT\",\n  RuleOrder = \"RULE ORDER\",\n  OutputOrder = \"OUTPUT ORDER\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  PMMLLiteralExpression = \"PMML Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  addParameter: \"Add parameter\",\n  builtInAggregator: \"Builtin Aggregator\",\n  choose: \"Choose...\",\n  class: \"class\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionRule: \"DECISION RULE\",\n  decisionTable: \"Decision Table\",\n  delete: \"Delete\",\n  document: \"document\",\n  editClause: {\n    input: \"Edit Input Clause\",\n    output: \"Edit Output Clause\",\n  },\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editHitPolicy: \"Edit Hit Policy\",\n  editParameter: \"Edit Parameter\",\n  editParameters: \"Edit parameters\",\n  editRelation: \"Edit Relation\",\n  enterFunction: \"Enter function\",\n  function: \"Function\",\n  hitPolicy: \"Hit Policy\",\n  inputClause: \"INPUT CLAUSE\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  methodSignature: \"method signature\",\n  model: \"model\",\n  name: \"Name\",\n  outputClause: \"OUTPUT CLAUSE\",\n  parameters: \"PARAMETERS\",\n  pmml: {\n    firstSelection: \"First select PMML document\",\n    secondSelection: \"Second select PMML model\",\n  },\n  relation: \"Relation\",\n  rowOperations: {\n    clear: \"Clear\",\n    delete: \"Delete\",\n    duplicate: \"Duplicate\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  ruleAnnotation: \"RULE ANNOTATION\",\n  selectExpression: \"Select expression\",\n  selectFunctionKind: \"Select Function Kind\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\n// noinspection ES6PreferShortImport\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionContainerProps,\n  ExpressionProps,\n  FunctionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\nimport \"./index.css\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression: ExpressionProps = {\n    uid: \"id1\",\n    name: \"Expression\",\n    dataType: \"<Undefined>\",\n    logicType: \"<Undefined>\",\n  } as ExpressionProps;\n\n  const pmmlParams = [\n    {\n      document: \"mining pmml\",\n      modelsFromDocument: [\n        {\n          model: \"MiningModelSum\",\n          parametersFromModel: [\n            { name: \"input1\", dataType: DataType.Any },\n            { name: \"input2\", dataType: DataType.Any },\n            { name: \"input3\", dataType: DataType.Any },\n          ],\n        },\n      ],\n    },\n    {\n      document: \"regression pmml\",\n      modelsFromDocument: [\n        {\n          model: \"RegressionLinear\",\n          parametersFromModel: [\n            { name: \"i1\", dataType: DataType.Number },\n            { name: \"i2\", dataType: DataType.Number },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n    broadcastListExpressionDefinition: (definition: ListProps) => setUpdatedExpression(definition),\n    broadcastInvocationExpressionDefinition: (definition: InvocationProps) => setUpdatedExpression(definition),\n    broadcastFunctionExpressionDefinition: (definition: FunctionProps) => setUpdatedExpression(definition),\n    broadcastDecisionTableExpressionDefinition: (definition: DecisionTableProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} pmmlParams={pmmlParams} />\n      </div>\n      <div className=\"updated-json\">\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./BuiltinAggregation\";\nexport * from \"./ContextEntry\";\nexport * from \"./DataType\";\nexport * from \"./DecisionTableRule\";\nexport * from \"./EnumUtils\";\nexport * from \"./ExpressionProps\";\nexport * from \"./FunctionKind\";\nexport * from \"./HitPolicy\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport * as React from \"react\";\nimport { Column as ReactTableColumn, DataRecord, Row as ReactTableRow } from \"react-table\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** Gets the prefix to be used for the next column name */\n  getColumnPrefix?: (groupType?: string) => string;\n  /** Optional label, that may depend on column, to be used for the popover that appears when clicking on column header */\n  editColumnLabel?: string | { [groupType: string]: string };\n  /** Top-left cell custom content */\n  controllerCell?: string | JSX.Element;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: ReactTableColumn[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: ReactTableColumn[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration?: TableHandlerConfiguration;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Number of levels in the header, 0-based */\n  headerLevels?: number;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup?: boolean;\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey?: (row: ReactTableRow) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey?: (column: ReactTableColumn) => string;\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n}\n\n/** Possible status for the visibility of the Table's Header */\nexport enum TableHeaderVisibility {\n  Full,\n  LastLevel,\n  SecondToLastLevel,\n  None,\n}\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n  RowClear,\n  RowDuplicate,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type GroupOperationsByColumnType = { [columnGroupType: string]: GroupOperations[] };\n\nexport type TableHandlerConfiguration = GroupOperations[] | GroupOperationsByColumnType;\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n  /** Set column width */\n  setWidth?: (width: string | number) => void;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditor } from \"./components\";\nimport * as React from \"react\";\nimport { ExpressionProps } from \"./api\";\nimport * as ReactDOM from \"react-dom\";\n\nexport * from \"./components\";\nexport * from \"./api\";\n\nwindow.renderBoxedExpressionEditor = (selector: string, definition: ExpressionProps) => {\n  ReactDOM.render(\n    <BoxedExpressionEditor expressionDefinition={{ selectedExpression: definition }} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { DataType } from \"../../api\";\n\nexport interface DataTypeSelectorProps {\n  /** The pre-selected data type */\n  selectedDataType: DataType;\n  /** On DataType selection callback */\n  onDataTypeChange: (dataType: DataType) => void;\n  /** By default the menu will be appended inline, but it is possible to append on the parent or on other elements */\n  menuAppendTo?: HTMLElement | \"inline\" | (() => HTMLElement) | \"parent\";\n}\n\nexport const DataTypeSelector: React.FunctionComponent<DataTypeSelectorProps> = ({\n  selectedDataType,\n  onDataTypeChange,\n  menuAppendTo,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      onDataTypeChange(selection);\n    },\n    [onDataTypeChange]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key} data-ouia-component-id={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <Select\n      menuAppendTo={menuAppendTo}\n      ouiaId=\"edit-expression-data-type\"\n      variant={SelectVariant.typeahead}\n      typeAheadAriaLabel={i18n.choose}\n      onToggle={onDataTypeSelectToggle}\n      onSelect={onDataTypeSelect}\n      onFilter={onDataTypeFilter}\n      isOpen={dataTypeSelectOpen}\n      selections={selectedDataType}\n      hasInlineFilter\n      inlineFilterPlaceholderText={i18n.choose}\n    >\n      {getDataTypes()}\n    </Select>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useMemo, useState } from \"react\";\nimport * as _ from \"lodash\";\n\nexport interface EditTextInlineProps {\n  /** Text value */\n  value: string;\n  /** Callback executed when text changes */\n  onTextChange: (updatedValue: string) => void;\n}\n\nexport const EditTextInline: React.FunctionComponent<EditTextInlineProps> = ({ onTextChange, value }) => {\n  const [toggle, setToggle] = useState(true);\n\n  const onValueBlur = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const changedText = event.target.value;\n      if (_.size(changedText.trim())) {\n        onTextChange(changedText);\n      }\n      setToggle(true);\n    },\n    [onTextChange]\n  );\n\n  const onKeyDown = useMemo(\n    () => (event: React.KeyboardEvent<HTMLInputElement>) => {\n      const pressedEnter = _.lowerCase(event.key) === \"enter\";\n      const pressedEscape = _.lowerCase(event.key) === \"escape\";\n      if (pressedEnter) {\n        event.currentTarget.blur();\n      }\n      if (pressedEscape) {\n        setToggle(true);\n      }\n    },\n    []\n  );\n\n  const onDoubleClick = useMemo(\n    () => () => {\n      setToggle(false);\n    },\n    []\n  );\n\n  return toggle ? (\n    <p onDoubleClick={onDoubleClick}>{value}</p>\n  ) : (\n    <input\n      type=\"text\"\n      autoFocus\n      defaultValue={value}\n      onBlur={onValueBlur}\n      style={{ borderRadius: \"0.5em\" }}\n      onKeyDown={onKeyDown}\n    />\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Additional classname to be used for the popover */\n  className?: string;\n  /** True to have width automatically computed */\n  hasAutoWidth?: boolean;\n  /** Popover min width */\n  minWidth?: string;\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n  className,\n  hasAutoWidth,\n  minWidth,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className={`popover-menu-selector${className ? \" \" + className : \"\"}`}\n      hasAutoWidth={hasAutoWidth}\n      minWidth={minWidth}\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { PMMLParams } from \"../api\";\n\nexport interface BoxedExpressionGlobalContextProps {\n  pmmlParams?: PMMLParams;\n  supervisorHash: string;\n  setSupervisorHash: (hash: string) => void;\n  boxedExpressionEditorRef: React.RefObject<HTMLDivElement>;\n  currentlyOpenedHandlerCallback: React.Dispatch<React.SetStateAction<boolean>>;\n  setCurrentlyOpenedHandlerCallback: React.Dispatch<\n    React.SetStateAction<React.Dispatch<React.SetStateAction<boolean>>>\n  >;\n}\n\nexport const BoxedExpressionGlobalContext = React.createContext<BoxedExpressionGlobalContextProps>(\n  {} as BoxedExpressionGlobalContextProps\n);\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DataTypeSelector } from \"./DataTypeSelector\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n  appendTo = appendTo ?? globalContext.boxedExpressionEditorRef?.current ?? undefined;\n\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeChange = useCallback(\n    (dataType: DataType) => {\n      setDataType(dataType);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: dataType,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <DataTypeSelector selectedDataType={dataType} onDataTypeChange={onDataTypeChange} />\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_MIN_WIDTH = 150;\n\n/*\n * Returns a valid width value.\n */\nexport const widthValue = (width: number | string | undefined | null): number => {\n  return Math.max(Math.round(parseFloat(width + \"\")), DEFAULT_MIN_WIDTH);\n};\n\n/*\n * Generates a global supervisor hash for a given object.\n */\nexport const hashfy = (obj = {}): string => {\n  return JSON.stringify(obj);\n};\n\n/*\n * Propagate Cell width from DOM to React state.\n */\nexport const notifyCell = (id: string, width: number = DEFAULT_MIN_WIDTH): void => {\n  document.dispatchEvent(\n    new CustomEvent(id, {\n      detail: { width },\n    })\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport { notifyCell, widthValue } from \"../common\";\n\nconst RESIZER_PADDING = 14;\nconst BORDER = 1;\n\nexport class Cell {\n  private id?: string;\n  private lastColumn?: boolean;\n  private rect?: DOMRect;\n  private parentRow?: HTMLTableRowElement | null;\n\n  constructor(public element: HTMLElement, public children: Cell[], public depth: number) {}\n\n  getId(): string {\n    if (!this.id) {\n      this.id = _.first([].slice.call(this.element.classList).filter((c: string) => c.match(/uuid-/g))) || \"\";\n    }\n    return this.id;\n  }\n\n  getRect(): DOMRect {\n    if (!this.rect) {\n      this.rect = this.element.getBoundingClientRect();\n    }\n    return this.rect;\n  }\n\n  isLastColumn(): boolean {\n    if (!this.lastColumn) {\n      this.lastColumn = this.getParentRow()?.lastChild === this.element.closest(\"th, td\");\n    }\n    return this.lastColumn;\n  }\n\n  setWidth(width: number): void {\n    const cellWidth = widthValue(width);\n    notifyCell(this.getId(), cellWidth);\n    this.element.style.width = cellWidth + \"px\";\n  }\n\n  refreshWidthAsParent(): void {\n    if (this.children.length > 0) {\n      this.setWidth(this.fetchChildWidth() + RESIZER_PADDING);\n    }\n  }\n\n  refreshWidthAsLastColumn(): void {\n    if (!this.isLastColumn()) {\n      return;\n    }\n\n    const parentRect = this.getParentRow()!.getBoundingClientRect();\n\n    if (parentRect) {\n      this.setWidth(Math.round(parentRect.right) - Math.round(this.getRect().x) - BORDER);\n    }\n  }\n\n  refreshWidthAsLastGroupColumn(): void {\n    if (!this.isColSpanHeader()) {\n      return;\n    }\n\n    const currentTypeFn = () => {\n      const parentElement = this.getParent();\n      if (parentElement?.classList.contains(\"input\")) {\n        return \".input\";\n      }\n      if (parentElement?.classList.contains(\"output\")) {\n        return \".output\";\n      }\n      return \".annotation\";\n    };\n\n    const currentType = currentTypeFn();\n    const refSibling = this.getParent()?.parentElement.nextSibling;\n\n    if (!refSibling) {\n      return;\n    }\n\n    const children = [].slice.call(refSibling.querySelectorAll(currentType));\n    const childrenRects = children.map((c) => c.getBoundingClientRect());\n    const x = Math.min(...childrenRects.map((c) => c.x));\n    const right = Math.max(...childrenRects.map((c) => c.right));\n\n    this.setWidth(right - x - 2);\n  }\n\n  isColSpanHeader(): boolean {\n    return this.getParent()?.classList.contains(\"colspan-header\") || false;\n  }\n\n  private getParent() {\n    return this.element.parentElement;\n  }\n\n  private getParentRow() {\n    if (!this.parentRow) {\n      this.parentRow = this.element.closest(\"tr\");\n    }\n    return this.parentRow;\n  }\n\n  private fetchChildWidth() {\n    const thead = this.element.querySelector(\"thead, tbody\");\n    return widthValue(thead?.getBoundingClientRect().width);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cell } from \"./\";\n\nexport const CELL_CSS_SELECTOR = \".react-resizable\";\n\nexport class DOMSession {\n  private cells: Cell[] | undefined;\n\n  getCells(): Cell[] {\n    if (this.cells === undefined) {\n      this.cells = this.buildCells();\n    }\n    return this.cells;\n  }\n\n  private buildCells() {\n    const cells: Cell[] = [];\n    this.fetchCellElements(document.body).forEach((cellElement) => {\n      this.buildCell(cellElement, cells, 0);\n    });\n    return cells;\n  }\n\n  private buildCell(htmlElement: HTMLElement, cells: Cell[], depthLevel: number): Cell {\n    const exitingElement = cells.find((c) => c.element === htmlElement);\n    if (exitingElement) {\n      return exitingElement;\n    }\n\n    const cell = new Cell(\n      htmlElement,\n      this.fetchCellElements(htmlElement)\n        .map((child) => this.buildCell(child, cells, depthLevel + 1))\n        .filter((c) => c.depth == depthLevel + 1),\n      depthLevel\n    );\n\n    cells.push(cell);\n\n    return cell;\n  }\n\n  private fetchCellElements(parent: HTMLElement): HTMLElement[] {\n    const htmlElements = parent.querySelectorAll(CELL_CSS_SELECTOR);\n    return [].slice.call(htmlElements);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMSession, Cell } from \"../dom\";\n\n/*\n * =============================================================================\n * React state + hooks abstractions have a level of granularity that limits the\n * frame hate in the context of resizable boxed expression cells.\n *\n * This component intentionally accesses DOM elements, but it also propagates\n * new width information across React components once users commit an action.\n * =============================================================================\n */\nexport const applyDOMSupervisor = (): void => {\n  new SupervisorExecution().execute();\n};\n\nclass SupervisorExecution {\n  domSession: DOMSession;\n\n  constructor() {\n    this.domSession = new DOMSession();\n  }\n\n  execute() {\n    const cells = this.domSession.getCells().sort((c1, c2) => c2.depth - c1.depth);\n\n    cells.forEach(this.refreshWidthAsParent);\n    cells.forEach(this.refreshWidthAsLastGroupColumn);\n    cells.sort((c1, c2) => c1.depth - c2.depth).forEach(this.refreshWidthAsLastColumn);\n  }\n\n  private refreshWidthAsParent(cell: Cell) {\n    cell.refreshWidthAsParent();\n  }\n\n  private refreshWidthAsLastColumn(cell: Cell) {\n    cell.refreshWidthAsLastColumn();\n  }\n\n  private refreshWidthAsLastGroupColumn(cell: Cell) {\n    cell.refreshWidthAsLastGroupColumn();\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useLayoutEffect, useMemo, useState } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport { v4 as uuid } from \"uuid\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DEFAULT_MIN_WIDTH, widthValue as commonWidthValue } from \"./common\";\nimport { Cell, DOMSession } from \"./dom\";\nimport \"./Resizer.css\";\n\nexport interface ResizerProps {\n  width: number;\n  height?: number | \"100%\";\n  minWidth?: number;\n  onHorizontalResizeStop?: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height = \"100%\",\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  /*\n   * States\n   */\n\n  const [resizerWidth, setResizerWidth] = useState(width);\n  const [initalResizerWidth, setInitialResizerWidth] = useState(0);\n  const [cells, setCells] = useState<Cell[]>([]);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  /*\n   * Memos\n   */\n\n  const id = useMemo(() => {\n    return `uuid-${uuid()}`;\n  }, []);\n\n  const resizerMinWidth = useMemo(() => {\n    return minWidth ?? DEFAULT_MIN_WIDTH;\n  }, [minWidth]);\n\n  const resizerClassName = useMemo(() => {\n    const heightClass = height === \"100%\" ? \"height-based-on-content\" : \"\";\n    return `${heightClass} ${id}`;\n  }, [height, id]);\n\n  /*\n   * Effects\n   */\n\n  useLayoutEffect(() => {\n    function listener(event: CustomEvent) {\n      const width = Math.round(event.detail.width);\n      setResizerWidth(width);\n      onHorizontalResizeStop?.(width);\n    }\n\n    document.addEventListener(id, listener);\n    return () => {\n      document.removeEventListener(id, listener);\n    };\n  }, [id, onHorizontalResizeStop, resizerWidth]);\n\n  /*\n   * Callbacks\n   */\n\n  const widthValue = useCallback(commonWidthValue, []);\n\n  const getApplicableCells = useCallback((allCells: Cell[], currentCell: Cell) => {\n    const applicableCells: Cell[] = [];\n    const parent = currentCell.element.closest(\"table\");\n    const currentRect = currentCell.getRect();\n\n    const hasSameParent = (cell: Cell) => parent?.contains(cell.element);\n    const isCellParent = (cell: Cell) => cell.element?.contains(currentCell.element);\n    const containsCurrent = (cell: Cell) => {\n      const cellRect = cell.getRect();\n\n      if (cell.element.textContent?.match(\"222\")) {\n        console.log(cellRect, currentRect);\n      }\n\n      return cellRect.x - 1 <= widthValue(currentRect.x) && widthValue(cellRect.right) + 1 >= currentRect.right;\n    };\n    const isLastGroupColumn = (cell: Cell) => {\n      if (!currentCell.isColSpanHeader()) {\n        return false;\n      }\n      return cell.getRect().right === currentRect.right;\n    };\n\n    if (currentCell.isLastColumn()) {\n      allCells\n        .filter((cell) => cell.isLastColumn())\n        .forEach((cell) => {\n          applicableCells.push(cell);\n        });\n    } else {\n      let hasSomeLastColumn = false;\n\n      allCells.forEach((cell) => {\n        const hasParentRelationship = hasSameParent(cell) || isCellParent(cell);\n        const shareSamePosition = containsCurrent(cell) || isLastGroupColumn(cell);\n\n        if (cell.element.textContent?.match(\"222\")) {\n          console.log(\"-\", hasParentRelationship, shareSamePosition);\n        }\n\n        if (hasParentRelationship && shareSamePosition) {\n          applicableCells.push(cell);\n          if (cell.isLastColumn()) {\n            hasSomeLastColumn = true;\n          }\n        }\n      });\n\n      if (hasSomeLastColumn) {\n        allCells\n          .filter((cell) => {\n            return cell.isLastColumn() && !hasSameParent(cell);\n          })\n          .forEach((cell) => {\n            applicableCells.push(cell);\n          });\n      }\n    }\n\n    applicableCells.forEach((cell) => {\n      cell.element.dataset.initialWidth = cell.element.style.width;\n    });\n\n    console.log(applicableCells.length);\n    console.log(applicableCells.map((e) => e.element.textContent));\n\n    return _.uniqBy(applicableCells, (cell) => cell.getId());\n  }, []);\n\n  const onResizeStart = useCallback(() => {\n    const allCells = new DOMSession().getCells();\n    const currentCell = allCells.find((c) => c.getId() === id)!;\n    const applicableCells = getApplicableCells(allCells, currentCell);\n    const initialWidth = widthValue(currentCell.getRect().width);\n\n    setCells(applicableCells);\n    setInitialResizerWidth(initialWidth);\n  }, [getApplicableCells, id, widthValue]);\n\n  const onResize = useCallback(\n    (_, data) => {\n      const newResizerWidth = parseInt(data.size.width + \"\");\n      cells.forEach((cell) => {\n        const delta = newResizerWidth - initalResizerWidth;\n        const celllElement = cell.element;\n        const isSameCell = cell.getId() === id;\n\n        if (!isSameCell) {\n          const cellInitialWidth = parseInt(celllElement.dataset.initialWidth + \"\");\n          celllElement.style.width = cellInitialWidth + delta + \"px\";\n        }\n      });\n    },\n    [cells, id, initalResizerWidth]\n  );\n\n  const onResizeStop = useCallback(\n    (_, data) => {\n      const newResizerWidth = widthValue(data.size.width);\n\n      cells.forEach((cell) => {\n        const delta = newResizerWidth - initalResizerWidth;\n        const cellInitialWidth = widthValue(cell.element.dataset.initialWidth);\n        cell.setWidth(cellInitialWidth + delta);\n      });\n\n      setSupervisorHash(\"-\");\n    },\n    [cells, initalResizerWidth, setSupervisorHash, widthValue]\n  );\n\n  return useMemo(() => {\n    return (\n      <ResizableBox\n        className={resizerClassName}\n        width={resizerWidth}\n        minConstraints={[resizerMinWidth, 0]}\n        height={0}\n        axis=\"x\"\n        onResize={onResize}\n        onResizeStop={onResizeStop}\n        onResizeStart={onResizeStart}\n        handle={\n          <div className=\"pf-c-drawer\">\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\"></div>\n            </div>\n          </div>\n        }\n      >\n        {children}\n      </ResizableBox>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resizerClassName, onResize, onResizeStop, onResizeStart, children]);\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { applyDOMSupervisor } from \"./dom\";\nimport \"./Resizer.css\";\n\nexport interface ResizerSupervisorProps {\n  children?: React.ReactElement;\n}\n\nexport const ResizerSupervisor: React.FunctionComponent<ResizerSupervisorProps> = ({ children }) => {\n  const { supervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  useEffect(() => {\n    const id = setTimeout(applyDOMSupervisor, 0);\n    console.log(\">>> executed\" + supervisorHash);\n    return () => clearTimeout(id);\n  }, [supervisorHash]);\n\n  return <>{children}</>;\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditableCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport const READ_MODE = \"editable-cell--read-mode\";\nexport const EDIT_MODE = \"editable-cell--edit-mode\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = useState(initialValue);\n  const [isSelected, setIsSelected] = useState(false);\n  const [mode, setMode] = useState(READ_MODE);\n  const textarea = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e) => {\n    setMode(EDIT_MODE);\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    setMode(READ_MODE);\n    setIsSelected(false);\n\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  const onSelect = useCallback(() => {\n    setIsSelected(true);\n\n    if (document.activeElement === textarea.current) {\n      return;\n    }\n\n    textarea.current?.focus();\n    textarea.current?.setSelectionRange(value.length, value.length);\n  }, [value]);\n\n  const onDoubleClick = useCallback(() => {\n    setMode(EDIT_MODE);\n  }, []);\n\n  const cssClass = useCallback(() => {\n    const selectedClass = isSelected ? \"editable-cell--selected\" : \"\";\n    return `editable-cell ${selectedClass} ${mode}`;\n  }, [isSelected, mode]);\n\n  const onKeyPress = useCallback(\n    (event) => {\n      if (event.key.toLowerCase() !== \"enter\") {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (mode === READ_MODE) {\n        setMode(EDIT_MODE);\n        return;\n      }\n\n      const newValue = event.target.value;\n\n      if (event.altKey || event.ctrlKey) {\n        setValue(`${newValue}\\n`);\n        return;\n      }\n\n      setValue(newValue);\n      setMode(READ_MODE);\n    },\n    [mode]\n  );\n\n  return useMemo(\n    () => (\n      <>\n        <div onDoubleClick={onDoubleClick} onClick={onSelect} className={cssClass()}>\n          <span>{value}</span>\n          <textarea\n            ref={textarea}\n            value={value || \"\"}\n            onFocus={onSelect}\n            onKeyPress={onKeyPress}\n            onChange={onChange}\n            onBlur={onBlur}\n          />\n        </div>\n      </>\n    ),\n    [onDoubleClick, onSelect, cssClass, value, onKeyPress, onChange, onBlur]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { TableHeaderVisibility, Column as IColumn } from \"../../api\";\nimport { Cell, Column, Row, TableInstance } from \"react-table\";\nimport { DEFAULT_MIN_WIDTH, Resizer } from \"../Resizer\";\n\nexport interface TableBodyProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey: (row: Row) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: Column[]) => void;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  tableInstance,\n  children,\n  headerVisibility = TableHeaderVisibility.Full,\n  getRowKey,\n  getColumnKey,\n  onColumnsUpdate,\n}) => {\n  const renderCell = useCallback(\n    (cellIndex: number, cell: Cell, rowIndex: number) => {\n      const cellType = cellIndex === 0 ? \"counter-cell\" : \"data-cell\";\n      const column = (tableInstance.allColumns[cellIndex] as unknown) as IColumn;\n\n      const getWidth = (): number => {\n        if (typeof column?.width === \"number\") {\n          return column?.width;\n        }\n        return DEFAULT_MIN_WIDTH;\n      };\n      const setWidth = (width: number) => {\n        column?.setWidth?.(width);\n        tableInstance.allColumns[cellIndex].width = width;\n      };\n      const onResize = (width: number) => {\n        if (column.setWidth) {\n          setWidth(width);\n          onColumnsUpdate?.(tableInstance.columns);\n        }\n      };\n      const cellTemplate =\n        cellIndex === 0 ? (\n          <>{rowIndex + 1}</>\n        ) : (\n          <Resizer width={getWidth()} onHorizontalResizeStop={onResize}>\n            <>{cell.render(\"Cell\")}</>\n          </Resizer>\n        );\n\n      return (\n        <Td\n          {...tableInstance.getTdProps(cellIndex, rowIndex)}\n          key={`${getColumnKey(cell.column)}-${cellIndex}`}\n          data-ouia-component-id={\"expression-column-\" + cellIndex}\n          className={`${cellType}`}\n        >\n          {cellTemplate}\n        </Td>\n      );\n    },\n    [getColumnKey, onColumnsUpdate, tableInstance]\n  );\n\n  const renderBodyRow = useCallback(\n    (row: Row, rowIndex: number) => {\n      const rowProps = { ...row.getRowProps(), style: {} };\n      return (\n        <Tr\n          className=\"table-row\"\n          {...rowProps}\n          key={`${getRowKey(row)}-${rowIndex}`}\n          ouiaId={\"expression-row-\" + rowIndex}\n        >\n          {row.cells.map((cell: Cell, cellIndex: number) => renderCell(cellIndex, cell, rowIndex))}\n        </Tr>\n      );\n    },\n    [getRowKey, renderCell]\n  );\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td role=\"cell\" key={childIndex} className=\"row-remainder-content\">\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children]\n  );\n\n  return (\n    <Tbody\n      className={`${headerVisibility === TableHeaderVisibility.None ? \"missing-header\" : \"\"}`}\n      {...tableInstance.getTableBodyProps()}\n    >\n      {tableInstance.rows.map((row: Row, rowIndex: number) => {\n        tableInstance.prepareRow(row);\n        return renderBodyRow(row, rowIndex);\n      })}\n      {children ? renderAdditiveRow : null}\n    </Tbody>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, GroupOperations, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerMenuProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: GroupOperations[];\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerMenuProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  DataType,\n  GroupOperations,\n  GroupOperationsByColumnType,\n  TableHandlerConfiguration,\n  TableOperation,\n} from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { getColumnsAtLastLevel, getColumnSearchPredicate } from \"./Table\";\n\nexport interface TableHandlerProps {\n  /** Gets the prefix to be used for the next column name */\n  getColumnPrefix: (groupType?: string) => string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Last selected column */\n  lastSelectedColumn: ColumnInstance;\n  /** Last selected row index */\n  lastSelectedRowIndex: number;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding: () => DataRecord;\n  /** Show/hide table handler */\n  showTableHandler: boolean;\n  /** Function to programmatically show/hide table handler */\n  setShowTableHandler: React.Dispatch<React.SetStateAction<boolean>>;\n  /** Target for showing the table handler  */\n  tableHandlerTarget: HTMLElement;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Table handler allowed operations */\n  tableHandlerAllowedOperations: TableOperation[];\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHandler: React.FunctionComponent<TableHandlerProps> = ({\n  getColumnPrefix,\n  tableColumns,\n  lastSelectedColumn,\n  lastSelectedRowIndex,\n  tableRows,\n  onRowsUpdate,\n  onRowAdding,\n  showTableHandler,\n  setShowTableHandler,\n  tableHandlerTarget,\n  handlerConfiguration,\n  tableHandlerAllowedOperations,\n  resetRowCustomFunction = () => ({}),\n  onColumnsUpdate,\n}) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [selectedColumn, setSelectedColumn] = useState(lastSelectedColumn.placeholderOf || lastSelectedColumn);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(lastSelectedRowIndex);\n\n  useEffect(() => {\n    setSelectedColumn(lastSelectedColumn.placeholderOf || lastSelectedColumn);\n  }, [lastSelectedColumn]);\n\n  useEffect(() => {\n    setSelectedRowIndex(lastSelectedRowIndex);\n  }, [lastSelectedRowIndex]);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => [\n    ...elements.slice(0, index),\n    element,\n    ...elements.slice(index),\n  ];\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => [\n    ...elements.slice(0, index + 1),\n    element,\n    ...elements.slice(index + 1),\n  ];\n\n  const duplicateAfter = <T extends unknown>(elements: T[], index: number) => [\n    ...elements.slice(0, index + 1),\n    _.cloneDeep(elements[index]),\n    ...elements.slice(index + 1),\n  ];\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => [\n    ...elements.slice(0, index),\n    ...elements.slice(index + 1),\n  ];\n\n  const clearAt = <T extends unknown>(elements: T[], index: number) => [\n    ...elements.slice(0, index),\n    resetRowCustomFunction(elements[index] as DataRecord),\n    ...elements.slice(index + 1),\n  ];\n\n  const generateNextAvailableColumnName: (lastIndex: number, groupType?: string) => string = useCallback(\n    (lastIndex, groupType) => {\n      const candidateName = `${getColumnPrefix(groupType)}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns.current, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1, groupType) : candidateName;\n    },\n    [getColumnPrefix, tableColumns]\n  );\n\n  const getLengthOfColumnsByGroupType = useCallback((columns: Column[], groupType: string) => {\n    const columnsByGroupType = _.groupBy(columns, (column: ColumnInstance) => column.groupType);\n    return columnsByGroupType[groupType]?.length;\n  }, []);\n\n  const generateNextAvailableColumn = useCallback(() => {\n    const groupType = selectedColumn.groupType;\n    const cssClasses = selectedColumn.cssClasses;\n    const columns = getColumnsAtLastLevel(tableColumns.current);\n    const columnsLength = groupType ? getLengthOfColumnsByGroupType(columns, groupType) + 1 : columns.length;\n    const nextAvailableColumnName = generateNextAvailableColumnName(columnsLength, groupType);\n\n    return {\n      accessor: nextAvailableColumnName,\n      label: nextAvailableColumnName,\n      ...(selectedColumn.dataType ? { dataType: DataType.Undefined } : {}),\n      inlineEditable: selectedColumn.inlineEditable,\n      groupType,\n      cssClasses,\n    } as ColumnInstance;\n  }, [generateNextAvailableColumnName, getLengthOfColumnsByGroupType, selectedColumn, tableColumns]);\n\n  /** These column operations have impact also on the collection of cells */\n  const updateColumnsThenRows = useCallback(() => {\n    onColumnsUpdate([...tableColumns.current]);\n    onRowsUpdate([...tableRows.current]);\n  }, [onColumnsUpdate, onRowsUpdate, tableColumns, tableRows]);\n\n  const appendOnColumnChildren = useCallback(\n    (operation: <T extends unknown>(elements: T[], index: number, element: T) => T[]) => {\n      const children = (_.find(tableColumns.current, getColumnSearchPredicate(selectedColumn)) as ColumnInstance)\n        .columns;\n      if (operation === insertBefore) {\n        children.unshift(generateNextAvailableColumn());\n      } else if (operation === insertAfter) {\n        children.push(generateNextAvailableColumn());\n      }\n    },\n    [generateNextAvailableColumn, selectedColumn, tableColumns]\n  );\n\n  const updateTargetColumns = (operation: <T extends unknown>(elements: T[], index: number, element: T) => T[]) => {\n    if (selectedColumn.parent) {\n      const parent = _.find(tableColumns.current, getColumnSearchPredicate(selectedColumn.parent)) as ColumnInstance;\n      parent.columns = operation(\n        parent.columns,\n        _.findIndex(parent.columns, getColumnSearchPredicate(selectedColumn)),\n        generateNextAvailableColumn()\n      );\n    } else {\n      if (selectedColumn.appendColumnsOnChildren && _.isArray(selectedColumn.columns)) {\n        appendOnColumnChildren(operation);\n      } else {\n        tableColumns.current = operation(\n          tableColumns.current,\n          _.findIndex(tableColumns.current, getColumnSearchPredicate(selectedColumn)),\n          generateNextAvailableColumn()\n        );\n      }\n    }\n    updateColumnsThenRows();\n  };\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          updateTargetColumns(insertBefore);\n          break;\n        case TableOperation.ColumnInsertRight:\n          updateTargetColumns(insertAfter);\n          break;\n        case TableOperation.ColumnDelete:\n          updateTargetColumns(deleteAt);\n          break;\n        case TableOperation.RowInsertAbove:\n          onRowsUpdate(insertBefore(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          onRowsUpdate(insertAfter(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          onRowsUpdate(deleteAt(tableRows.current, selectedRowIndex));\n          break;\n        case TableOperation.RowClear:\n          onRowsUpdate(clearAt(tableRows.current, selectedRowIndex));\n          break;\n        case TableOperation.RowDuplicate:\n          onRowsUpdate(duplicateAfter(tableRows.current, selectedRowIndex));\n      }\n      setShowTableHandler(false);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      generateNextAvailableColumn,\n      updateColumnsThenRows,\n      onRowAdding,\n      onRowsUpdate,\n      selectedRowIndex,\n      setShowTableHandler,\n      tableColumns,\n      tableRows,\n    ]\n  );\n\n  const groupOperationsDoNotDependOnColumn = (\n    handlerConfiguration: GroupOperations[] | GroupOperationsByColumnType\n  ): handlerConfiguration is GroupOperations[] => _.isArray(handlerConfiguration);\n\n  const getHandlerConfiguration = useMemo(() => {\n    if (groupOperationsDoNotDependOnColumn(handlerConfiguration)) {\n      return handlerConfiguration;\n    }\n    return handlerConfiguration[selectedColumn?.groupType || \"\"];\n  }, [handlerConfiguration, selectedColumn?.groupType]);\n\n  return useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={getHandlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [\n      showTableHandler,\n      globalContext.boxedExpressionEditorRef,\n      getHandlerConfiguration,\n      tableHandlerAllowedOperations,\n      handlingOperation,\n      setShowTableHandler,\n      tableHandlerTarget,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Column, ColumnInstance, DataRecord, HeaderGroup, TableInstance } from \"react-table\";\nimport { DataType, TableHeaderVisibility } from \"../../api\";\nimport { EditExpressionMenu, EditTextInline } from \"../EditExpressionMenu\";\nimport { DEFAULT_MIN_WIDTH, Resizer } from \"../Resizer\";\nimport { getColumnsAtLastLevel, getColumnSearchPredicate } from \"./Table\";\n\nexport interface TableHeaderProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Optional label, that may depend on column, to be used for the popover that appears when clicking on column header */\n  editColumnLabel?: string | { [groupType: string]: string };\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup: boolean;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHeader: React.FunctionComponent<TableHeaderProps> = ({\n  tableInstance,\n  tableRows,\n  onRowsUpdate,\n  editColumnLabel,\n  headerVisibility = TableHeaderVisibility.Full,\n  skipLastHeaderGroup,\n  getColumnKey,\n  tableColumns,\n  onColumnsUpdate,\n}) => {\n  const getColumnLabel: (groupType: string) => string | undefined = useCallback(\n    (groupType) => {\n      if (_.isObject(editColumnLabel) && _.has(editColumnLabel, groupType)) {\n        return editColumnLabel[groupType];\n      }\n      if (typeof editColumnLabel === \"string\") {\n        return editColumnLabel;\n      }\n    },\n    [editColumnLabel]\n  );\n\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      onRowsUpdate(\n        _.map(tableRows.current, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        })\n      ),\n    [onRowsUpdate, tableRows]\n  );\n\n  /**\n   * Currently, column rename/type update is supported only for the first and the second level of the header\n   */\n  const onColumnNameOrDataTypeUpdate: (\n    column: ColumnInstance,\n    columnIndex: number\n  ) => ({ name, dataType }: { name?: string; dataType?: DataType }) => void = useCallback(\n    (column, columnIndex) => {\n      return ({ name = \"\", dataType }) => {\n        const prevColumnName = column.label as string;\n        let columnToUpdate = tableColumns.current[columnIndex] as ColumnInstance;\n        if (column.depth > 0) {\n          const parentName = column.parent.id;\n          const parentColumns = (_.find(tableColumns.current, { accessor: parentName }) as ColumnInstance).columns;\n          columnToUpdate = _.find(parentColumns, { accessor: prevColumnName })!;\n        }\n        columnToUpdate.label = name;\n        columnToUpdate.accessor = name;\n        columnToUpdate.dataType = dataType as DataType;\n        onColumnsUpdate([...tableColumns.current]);\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [onColumnsUpdate, tableColumns, updateColumnNameInRows]\n  );\n\n  const computeColumnKey = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      `${getColumnKey(column)}-${column.parent?.id || \"\"}-${columnIndex}`,\n    [getColumnKey]\n  );\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th\n        {...column.getHeaderProps()}\n        className=\"fixed-column no-clickable-cell\"\n        key={computeColumnKey(column, columnIndex)}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    [computeColumnKey]\n  );\n\n  const renderCellInfoLabel = useCallback(\n    (column: ColumnInstance, columnIndex: number) => {\n      if (column.inlineEditable) {\n        return (\n          <EditTextInline\n            value={column.label as string}\n            onTextChange={(value) => onColumnNameOrDataTypeUpdate(column, columnIndex)({ name: value })}\n          />\n        );\n      }\n      return <p className=\"pf-u-text-truncate\">{column.label}</p>;\n    },\n    [onColumnNameOrDataTypeUpdate]\n  );\n\n  const renderHeaderCellInfo = useCallback(\n    (column, columnIndex) => (\n      <div className=\"header-cell-info\" data-ouia-component-type=\"expression-column-header-cell-info\">\n        {column.headerCellElement ? column.headerCellElement : renderCellInfoLabel(column, columnIndex)}\n        {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n      </div>\n    ),\n    [renderCellInfoLabel]\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (column, columnWidth) => {\n      const columnToBeFound = column.placeholderOf || column;\n      let columnToUpdate = _.find(tableColumns.current, getColumnSearchPredicate(columnToBeFound)) as ColumnInstance;\n      if (column.parent) {\n        columnToUpdate = _.find(\n          getColumnsAtLastLevel(tableColumns.current),\n          getColumnSearchPredicate(column)\n        ) as ColumnInstance;\n      }\n      columnToUpdate.width = columnWidth;\n      onColumnsUpdate(tableColumns.current);\n    },\n    [onColumnsUpdate, tableColumns]\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => {\n      const headerProps = {\n        ...column.getHeaderProps(),\n        style: {},\n      };\n      const thProps = tableInstance.getThProps(column, columnIndex);\n      const width = column.width || DEFAULT_MIN_WIDTH;\n      const isColspan = column.columns?.length > 0 || false;\n\n      const getCssClass = () => {\n        const cssClasses = [];\n        if (!column.dataType) {\n          cssClasses.push(\"no-clickable-cell\");\n        }\n        if (isColspan) {\n          cssClasses.push(\"colspan-header\");\n        }\n        if (column.placeholderOf) {\n          cssClasses.push(column.placeholderOf.cssClasses);\n          cssClasses.push(column.placeholderOf.groupType);\n        }\n        cssClasses.push(column.groupType || \"\");\n        cssClasses.push(column.cssClasses || \"\");\n        return cssClasses.join(\" \");\n      };\n\n      return (\n        <Th {...headerProps} {...thProps} className={getCssClass()} key={computeColumnKey(column, columnIndex)}>\n          <Resizer width={width} onHorizontalResizeStop={(columnWidth) => onHorizontalResizeStop(column, columnWidth)}>\n            <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n              {column.dataType ? (\n                <EditExpressionMenu\n                  title={getColumnLabel(column.groupType)}\n                  selectedExpressionName={column.label}\n                  selectedDataType={column.dataType}\n                  onExpressionUpdate={(expression) => onColumnNameOrDataTypeUpdate(column, columnIndex)(expression)}\n                  key={computeColumnKey(column, columnIndex)}\n                >\n                  {renderHeaderCellInfo(column, columnIndex)}\n                </EditExpressionMenu>\n              ) : (\n                renderHeaderCellInfo(column, columnIndex)\n              )}\n            </div>\n          </Resizer>\n        </Th>\n      );\n    },\n    [\n      computeColumnKey,\n      getColumnLabel,\n      onColumnNameOrDataTypeUpdate,\n      onHorizontalResizeStop,\n      renderHeaderCellInfo,\n      tableInstance,\n    ]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableHeaderCell(column, columnIndex),\n    [renderCountColumn, renderResizableHeaderCell]\n  );\n\n  const getHeaderGroups = useCallback(\n    (tableInstance) => {\n      return skipLastHeaderGroup ? _.dropRight(tableInstance.headerGroups) : tableInstance.headerGroups;\n    },\n    [skipLastHeaderGroup]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      getHeaderGroups(tableInstance).map((headerGroup: HeaderGroup) => {\n        const { key, ...props } = { ...headerGroup.getHeaderGroupProps(), style: {} };\n        return (\n          <Tr key={key} {...props}>\n            {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) =>\n              renderColumn(column, columnIndex)\n            )}\n          </Tr>\n        );\n      }),\n    [getHeaderGroups, renderColumn, tableInstance]\n  );\n\n  const renderAtLevelInHeaderGroups = useCallback(\n    (level: number) => (\n      <Tr>\n        {_.nth(\n          tableInstance.headerGroups as HeaderGroup[],\n          level\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  switch (headerVisibility) {\n    case TableHeaderVisibility.Full:\n      return <Thead noWrap>{renderHeaderGroups}</Thead>;\n    case TableHeaderVisibility.LastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-1)}</Thead>;\n    case TableHeaderVisibility.SecondToLastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-2)}</Thead>;\n    default:\n      return null;\n  }\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { TableHeaderVisibility, TableOperation, TableProps } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { TableBody } from \"./TableBody\";\nimport { TableHandler } from \"./TableHandler\";\nimport { TableHeader } from \"./TableHeader\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\nconst NUMBER_OF_ROWS_COLUMN = \"#\";\nconst NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\nexport const getColumnsAtLastLevel: (columns: ColumnInstance[] | Column[]) => ColumnInstance[] = (columns) =>\n  _.flatMap(columns, (column: ColumnInstance) => {\n    if (_.has(column, \"columns\")) {\n      return column.columns;\n    }\n    return column;\n  });\n\nexport const getColumnSearchPredicate: (column: ColumnInstance) => (columnToCompare: ColumnInstance) => boolean = (\n  column\n) => {\n  const columnId = column.originalId || column.id || column.accessor;\n  return (columnToCompare: ColumnInstance) => {\n    return columnToCompare.id === columnId || columnToCompare.accessor === columnId;\n  };\n};\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  getColumnPrefix = () => \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onRowAdding = () => ({}),\n  controllerCell = NUMBER_OF_ROWS_COLUMN,\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  headerVisibility,\n  headerLevels = 0,\n  skipLastHeaderGroup = false,\n  getRowKey = (row) => row.id as string,\n  getColumnKey = (column) => column.id as string,\n  resetRowCustomFunction,\n}: TableProps) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [currentControllerCell, setCurrentControllerCell] = useState(controllerCell);\n\n  const generateNumberOfRowsSubColumnRecursively: (column: ColumnInstance, headerLevels: number) => void = useCallback(\n    (column, headerLevels) => {\n      if (headerLevels > 0) {\n        _.assign(column, {\n          columns: [\n            {\n              label: headerVisibility === TableHeaderVisibility.Full ? NUMBER_OF_ROWS_SUBCOLUMN : currentControllerCell,\n              accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n              minWidth: 60,\n              width: 60,\n              disableResizing: true,\n              isCountColumn: true,\n              hideFilter: true,\n            },\n          ],\n        });\n\n        generateNumberOfRowsSubColumnRecursively(column.columns[0], headerLevels - 1);\n      }\n    },\n    [currentControllerCell, headerVisibility]\n  );\n\n  const generateNumberOfRowsColumn = useCallback(\n    (currentControllerCell: string | JSX.Element, columns: Column[]) => {\n      const numberOfRowsColumn = {\n        label: currentControllerCell,\n        accessor: NUMBER_OF_ROWS_COLUMN,\n        width: 60,\n        minWidth: 60,\n        isCountColumn: true,\n      } as ColumnInstance;\n      generateNumberOfRowsSubColumnRecursively(numberOfRowsColumn, headerLevels);\n      return [numberOfRowsColumn, ...columns];\n    },\n    [generateNumberOfRowsSubColumnRecursively, headerLevels]\n  );\n\n  const tableColumns = useRef<Column[]>(generateNumberOfRowsColumn(currentControllerCell, columns));\n  const tableRows = useRef<DataRecord[]>(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumn, setLastSelectedColumn] = useState({} as ColumnInstance);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  useEffect(() => {\n    tableColumns.current = generateNumberOfRowsColumn(controllerCell, tableColumns.current.slice(1));\n    setCurrentControllerCell(controllerCell);\n  }, [controllerCell, generateNumberOfRowsColumn]);\n\n  useEffect(() => {\n    tableColumns.current = generateNumberOfRowsColumn(currentControllerCell, columns);\n    // Watching for external changes of the columns\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columns]);\n\n  useEffect(() => {\n    tableRows.current = rows;\n    // Watching for external changes of the rows\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const onColumnsUpdateCallback = useCallback(\n    (columns: Column[]) => {\n      tableColumns.current = columns;\n      onColumnsUpdate?.(columns.slice(1)); //Removing \"# of rows\" column\n    },\n    [onColumnsUpdate]\n  );\n\n  const onRowsUpdateCallback = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = rows;\n      onRowsUpdate?.(rows);\n    },\n    [onRowsUpdate]\n  );\n\n  const onCellUpdate = useCallback(\n    (rowIndex: number, columnId: string, value: string) => {\n      const updatedTableCells = [...tableRows.current];\n      updatedTableCells[rowIndex][columnId] = value;\n      onRowsUpdateCallback(updatedTableCells);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      const updatedRows = [...tableRows.current];\n      updatedRows[rowIndex] = updatedRow;\n      onRowsUpdateCallback(updatedRows);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const defaultColumn = {\n    Cell: useCallback((cellRef) => {\n      const column = cellRef.column as ColumnInstance;\n      if (column.isCountColumn) {\n        return cellRef.value;\n      } else {\n        return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n      }\n      // Table performance optimization: no need to re-render cells, since nested component themselves will re-render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const tableHandlerStateUpdate = (target: HTMLElement, column: ColumnInstance) => {\n    setTableHandlerTarget(target);\n    globalContext.currentlyOpenedHandlerCallback?.(false);\n    setShowTableHandler(true);\n    globalContext.setCurrentlyOpenedHandlerCallback?.(() => setShowTableHandler);\n    setLastSelectedColumn(column);\n  };\n\n  const atLeastTwoColumnsOfTheSameGroupType = (columnIndex: number) => {\n    const columnsAtLastLevel = getColumnsAtLastLevel(tableColumns.current);\n    const groupTypeForCurrentColumn = (columnsAtLastLevel[columnIndex] as ColumnInstance)?.groupType;\n    const columnsByGroupType = _.groupBy(columnsAtLastLevel, (column: ColumnInstance) => column.groupType);\n    return groupTypeForCurrentColumn\n      ? columnsByGroupType[groupTypeForCurrentColumn].length > 1\n      : tableColumns.current.length > 2; // The total number of columns is counting also the # of rows column\n  };\n\n  const columnCanBeDeleted = (columnIndex: number) => {\n    return columnIndex > 0 && atLeastTwoColumnsOfTheSameGroupType(columnIndex);\n  };\n\n  const getColumnOperations = (columnIndex: number) =>\n    columnIndex === 0\n      ? []\n      : [\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(columnCanBeDeleted(columnIndex) ? [TableOperation.ColumnDelete] : []),\n        ];\n\n  const getThProps = (column: ColumnInstance) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const columnIndex = _.findIndex(getColumnsAtLastLevel(tableColumns.current), getColumnSearchPredicate(column));\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations(getColumnOperations(columnIndex));\n        tableHandlerStateUpdate(target, column);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          ...getColumnOperations(columnIndex),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.current.length > 1 ? [TableOperation.RowDelete] : []),\n          TableOperation.RowClear,\n          TableOperation.RowDuplicate,\n        ]);\n        tableHandlerStateUpdate(target, getColumnsAtLastLevel(tableColumns.current)[columnIndex]);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns.current,\n      data: tableRows.current,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <TableHeader\n          tableInstance={tableInstance}\n          editColumnLabel={editColumnLabel}\n          headerVisibility={headerVisibility}\n          skipLastHeaderGroup={skipLastHeaderGroup}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          tableColumns={tableColumns}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n        <TableBody\n          tableInstance={tableInstance}\n          getRowKey={getRowKey}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n          headerVisibility={headerVisibility}\n        >\n          {children}\n        </TableBody>\n      </TableComposable>\n      {showTableHandler && handlerConfiguration ? (\n        <TableHandler\n          tableColumns={tableColumns}\n          getColumnPrefix={getColumnPrefix}\n          handlerConfiguration={handlerConfiguration}\n          lastSelectedColumn={lastSelectedColumn}\n          lastSelectedRowIndex={lastSelectedRowIndex}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          onRowAdding={onRowAdding}\n          showTableHandler={showTableHandler}\n          setShowTableHandler={setShowTableHandler}\n          tableHandlerAllowedOperations={tableHandlerAllowedOperations}\n          tableHandlerTarget={tableHandlerTarget}\n          resetRowCustomFunction={resetRowCustomFunction}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\nimport { EditableCell } from \"../Table\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  uid,\n  content = \"\",\n  dataType = DataType.Undefined,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n\n  const [expressionName, setExpressionName] = useState<string>(name);\n  const [expressionDataType, setExpressionDataType] = useState<DataType>(dataType);\n  const literalExpressionContent = useRef<string>(content);\n  const literalExpressionWidth = useRef<number>(width || HEADER_WIDTH);\n\n  const spreadLiteralExpressionDefinition = useCallback(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      uid,\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent.current,\n      ...(!isHeadless && literalExpressionWidth.current !== HEADER_WIDTH\n        ? { width: literalExpressionWidth.current }\n        : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [expressionDataType, expressionName, isHeadless, onUpdatingRecursiveExpression, uid]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n      spreadLiteralExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadLiteralExpressionDefinition]\n  );\n\n  const onContentChange = useCallback(\n    (value: string) => {\n      literalExpressionContent.current = value;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (width) => {\n      literalExpressionWidth.current = width;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth.current}\n        minWidth={HEADER_WIDTH}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <EditExpressionMenu\n            selectedExpressionName={expressionName}\n            selectedDataType={expressionDataType}\n            onExpressionUpdate={onExpressionUpdate}\n          >\n            <div className=\"expression-info\">\n              <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n              <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n            </div>\n          </EditExpressionMenu>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, onExpressionUpdate, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <EditableCell\n        value={literalExpressionContent.current}\n        row={{ index: 0 }}\n        column={{ id: uid ?? \"-\" }}\n        onCellUpdate={(_number, _columnId, value) => onContentChange(value)}\n      />\n    ),\n    [onContentChange, uid]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadLiteralExpressionDefinition();\n  }, [spreadLiteralExpressionDefinition]);\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./PMMLLiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useRef, useState } from \"react\";\nimport { PMMLLiteralExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport const PMMLLiteralExpression: React.FunctionComponent<PMMLLiteralExpressionProps> = (\n  props: PMMLLiteralExpressionProps\n) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const selection = useRef(props.selected);\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const onSelectToggle = useCallback((isOpen) => setSelectOpen(isOpen), []);\n\n  const onSelect = useCallback(\n    (event, updatedSelection) => {\n      setSelectOpen(false);\n      selection.current = updatedSelection;\n      props.onUpdatingRecursiveExpression?.({\n        ...props,\n        selected: updatedSelection,\n      } as PMMLLiteralExpressionProps);\n    },\n    [props]\n  );\n\n  const getOptions = useCallback(() => {\n    return _.map(props.getOptions(), (key) => (\n      <SelectOption key={key} value={key} data-ouia-component-id={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, [props]);\n\n  const getSelection = useCallback(() => {\n    return _.includes(props.getOptions(), selection.current) ? selection.current : undefined;\n  }, [props]);\n\n  const showingPlaceholder = useCallback(() => _.isEmpty(getSelection()), [getSelection]);\n\n  return (\n    <Select\n      className={`pmml-literal-expression ${showingPlaceholder() ? \"showing-placeholder\" : \"\"}`}\n      menuAppendTo={globalContext.boxedExpressionEditorRef?.current ?? \"inline\"}\n      ouiaId=\"pmml-literal-expression-selector\"\n      placeholderText={props.noOptionsLabel}\n      aria-placeholder={props.noOptionsLabel}\n      variant={SelectVariant.single}\n      onToggle={onSelectToggle}\n      onSelect={onSelect}\n      isOpen={selectOpen}\n      selections={getSelection()}\n    >\n      {getOptions()}\n    </Select>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { Column as RelationColumn, DataType, RelationProps, Row, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const tableColumns = useRef<RelationColumn[]>(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const tableRows = useRef<Row[]>(relationProps.rows === undefined ? [[\"\"]] : relationProps.rows);\n\n  const spreadRelationExpressionDefinition = useCallback(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns.current,\n      rows: tableRows.current,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns.current,\n        (column: RelationColumn) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows.current, (row) =>\n        _.reduce(\n          tableColumns.current,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    []\n  );\n\n  const onSavingRows = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = _.map(rows, (tableRow: DataRecord) =>\n        _.reduce(\n          tableColumns.current,\n          (row: string[], column: RelationColumn) => {\n            row.push((tableRow[column.name]! as string) || \"\");\n            return row;\n          },\n          []\n        )\n      );\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) => {\n      tableColumns.current = _.map(columns, (columnInstance: ColumnInstance) => ({\n        name: columnInstance.accessor,\n        dataType: columnInstance.dataType,\n        width: columnInstance.width,\n      }));\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadRelationExpressionDefinition();\n  }, [spreadRelationExpressionDefinition]);\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n  /** Function invoked when resetting expression */\n  onExpressionResetting?: () => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n  onExpressionResetting,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const entryExpression = useRef(expression);\n\n  useEffect(() => {\n    entryExpression.current = _.omit(expression, \"isHeadless\");\n    // Every time, for an expression, its logic type changes, it means that corresponding entry has been just updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback(\n    (logicType) => {\n      entryExpression.current.logicType = logicType;\n      onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n    },\n    [onUpdatingRecursiveExpression]\n  );\n\n  const onLogicTypeResetting = useCallback(() => {\n    entryExpression.current.logicType = LogicType.Undefined;\n    onExpressionResetting?.();\n    onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n  }, [onExpressionResetting, onUpdatingRecursiveExpression]);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression.current}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryExpressionCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CellProps, ContextEntries, DataType, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryInfo = useRef(contextEntry.entryInfo);\n\n  const entryExpression = useRef({\n    uid: contextEntry.entryExpression.uid,\n    ...contextEntry.entryExpression,\n  } as ExpressionProps);\n\n  useEffect(() => {\n    entryInfo.current = contextEntry.entryInfo;\n  }, [contextEntry.entryInfo]);\n\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n    onRowUpdate(index, { ...contextEntry, entryInfo: entryInfo.current, entryExpression: entryExpression.current });\n    // Every time, for an expression, its logic type changes, it means that corresponding entry has been just updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contextEntry.entryExpression.logicType]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    entryExpression.current = { ...expression };\n    const updatedEntryInfo = { ...entryInfo.current };\n    if (contextEntry.nameAndDataTypeSynchronized && _.size(expression.name) && _.size(expression.dataType)) {\n      updatedEntryInfo.name = expression.name as string;\n      updatedEntryInfo.dataType = expression.dataType as DataType;\n    }\n    onRowUpdate(index, { ...contextEntry, entryInfo: updatedEntryInfo, entryExpression: expression });\n    // Callback should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression.current}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        onExpressionResetting={contextEntry.onExpressionResetting}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel?: string;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n  editInfoPopoverLabel,\n}) => {\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  const renderEntryDefinition = useCallback(\n    (additionalCssClass?: string) => (\n      <div className={`entry-definition ${additionalCssClass}`}>\n        <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n          {entryName}\n        </p>\n        <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n          ({entryDataType})\n        </p>\n      </div>\n    ),\n    [entryDataType, entryName]\n  );\n\n  const renderEntryDefinitionWithPopoverMenu = useMemo(\n    () => (\n      <EditExpressionMenu\n        title={editInfoPopoverLabel}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        {renderEntryDefinition(\"with-popover-menu\")}\n      </EditExpressionMenu>\n    ),\n    [editInfoPopoverLabel, entryDataType, entryName, onEntryNameOrDataTypeUpdate, renderEntryDefinition]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      {editInfoPopoverLabel ? renderEntryDefinitionWithPopoverMenu : renderEntryDefinition()}\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryInfo = useRef(contextEntry.entryInfo);\n  const entryExpression = useRef(contextEntry.entryExpression);\n\n  useEffect(() => {\n    entryInfo.current = contextEntry.entryInfo;\n  }, [contextEntry.entryInfo]);\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n  }, [contextEntry.entryExpression]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      const updatedExpression = { ...entryExpression.current };\n      if (contextEntry.nameAndDataTypeSynchronized && _.size(name) && _.size(dataType)) {\n        updatedExpression.name = name;\n        updatedExpression.dataType = dataType;\n      }\n      onRowUpdate(index, { ...contextEntry, entryExpression: updatedExpression, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.current.name}\n        dataType={entryInfo.current.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n        editInfoPopoverLabel={contextEntry.editInfoPopoverLabel}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  EntryInfo,\n  ExpressionProps,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  LogicType,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\nimport { hashfy, Resizer } from \"../Resizer\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  contextEntries,\n  result = {} as ExpressionProps,\n  renderResult = true,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  noHandlerMenu = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const { setSupervisorHash } = React.useContext(BoxedExpressionGlobalContext);\n\n  const columns = useMemo(\n    () => [\n      {\n        label: name,\n        accessor: name,\n        dataType,\n        disableHandlerOnHeader: true,\n        columns: [\n          {\n            accessor: \"entryInfo\",\n            disableHandlerOnHeader: true,\n            width: infoWidth,\n            setWidth: setInfoWidth,\n            minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n          },\n          {\n            accessor: \"entryExpression\",\n            disableHandlerOnHeader: true,\n            width: expressionWidth,\n            setWidth: setExpressionWidth,\n            minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n          },\n        ],\n      },\n    ],\n    [dataType, expressionWidth, infoWidth, name]\n  );\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        editInfoPopoverLabel: i18n.editContextEntry,\n        nameAndDataTypeSynchronized: true,\n      } as DataRecord,\n    ]\n  );\n\n  const onRowAdding = useCallback(() => {\n    const generatedName = generateNextAvailableEntryName(\n      _.map(rows, (row: ContextEntryRecord) => row.entryInfo) as EntryInfo[],\n      \"ContextEntry\"\n    );\n    return {\n      entryInfo: {\n        name: generatedName,\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {\n        name: generatedName,\n        dataType: DataType.Undefined,\n      },\n      editInfoPopoverLabel: i18n.editContextEntry,\n      nameAndDataTypeSynchronized: true,\n    };\n  }, [i18n.editContextEntry, rows]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.None : TableHeaderVisibility.SecondToLastLevel;\n  }, [isHeadless]);\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      uid,\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      entryInfoWidth: infoWidth,\n      entryExpressionWidth: expressionWidth,\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]));\n    } else {\n      setSupervisorHash(hashfy(updatedDefinition));\n      window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n    }\n  }, [\n    columns,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    rows,\n    resultExpression,\n    infoWidth,\n    expressionWidth,\n    uid,\n    setSupervisorHash,\n  ]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={noHandlerMenu ? undefined : getHandlerConfiguration(i18n, i18n.contextEntry)}\n        getRowKey={useCallback(getEntryKey, [])}\n        resetRowCustomFunction={useCallback(resetEntry, [])}\n      >\n        {renderResult\n          ? [\n              <Resizer\n                key=\"context-result\"\n                width={infoWidth}\n                minWidth={DEFAULT_ENTRY_INFO_MIN_WIDTH}\n                onHorizontalResizeStop={(width) => setInfoWidth(width)}\n              >\n                <div className=\"context-result\">{`<result>`}</div>\n              </Resizer>,\n              <Resizer\n                key=\"context-expression\"\n                width={expressionWidth}\n                minWidth={DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH}\n                onHorizontalResizeStop={(width) => setExpressionWidth(width)}\n              >\n                <ContextEntryExpression\n                  expression={resultExpression}\n                  onUpdatingRecursiveExpression={setResultExpression}\n                />\n              </Resizer>,\n            ]\n          : undefined}\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport {\n  Annotation,\n  BuiltinAggregation,\n  Clause,\n  DataType,\n  DecisionTableProps,\n  DecisionTableRule,\n  GroupOperations,\n  HitPolicy,\n  LogicType,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { hashfy } from \"../Resizer\";\nimport { getColumnsAtLastLevel, Table } from \"../Table\";\nimport \"./DecisionTableExpression.css\";\nimport { HitPolicySelector } from \"./HitPolicySelector\";\n\nenum DecisionTableColumnType {\n  InputClause = \"input\",\n  OutputClause = \"output\",\n  Annotation = \"annotation\",\n}\n\nconst DASH_SYMBOL = \"-\";\nconst EMPTY_SYMBOL = \"\";\nconst DECISION_NODE_DEFAULT_NAME = \"output-1\";\n\nexport const DecisionTableExpression: React.FunctionComponent<DecisionTableProps> = ({\n  uid,\n  isHeadless,\n  onUpdatingRecursiveExpression,\n  name = DECISION_NODE_DEFAULT_NAME,\n  dataType = DataType.Undefined,\n  onUpdatingNameAndDataType,\n  hitPolicy = HitPolicy.Unique,\n  aggregation = BuiltinAggregation[\"<None>\"],\n  input = [{ name: \"input-1\", dataType: DataType.Undefined }],\n  output = [{ name: DECISION_NODE_DEFAULT_NAME, dataType: DataType.Undefined }],\n  annotations = [{ name: \"annotation-1\" }],\n  rules = [{ inputEntries: [DASH_SYMBOL], outputEntries: [EMPTY_SYMBOL], annotationEntries: [EMPTY_SYMBOL] }],\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const getColumnPrefix = useCallback((groupType: string) => {\n    switch (groupType) {\n      case DecisionTableColumnType.InputClause:\n        return \"input-\";\n      case DecisionTableColumnType.OutputClause:\n        return \"output-\";\n      case DecisionTableColumnType.Annotation:\n        return \"annotation-\";\n      default:\n        return \"column-\";\n    }\n  }, []);\n\n  const generateHandlerConfigurationByColumn = useCallback(\n    (groupName: string) => [\n      {\n        group: groupName,\n        items: [\n          { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n          { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n          { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n        ],\n      },\n      {\n        group: i18n.decisionRule,\n        items: [\n          { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n          { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n          { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n          { name: i18n.rowOperations.duplicate, type: TableOperation.RowDuplicate },\n        ],\n      },\n    ],\n    [i18n]\n  );\n\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  const getHandlerConfiguration = useMemo(() => {\n    const configuration: { [columnGroupType: string]: GroupOperations[] } = {};\n    configuration[EMPTY_SYMBOL] = generateHandlerConfigurationByColumn(i18n.ruleAnnotation);\n    configuration[DecisionTableColumnType.InputClause] = generateHandlerConfigurationByColumn(i18n.inputClause);\n    configuration[DecisionTableColumnType.OutputClause] = generateHandlerConfigurationByColumn(i18n.outputClause);\n    configuration[DecisionTableColumnType.Annotation] = generateHandlerConfigurationByColumn(i18n.ruleAnnotation);\n    return configuration;\n  }, [generateHandlerConfigurationByColumn, i18n.inputClause, i18n.outputClause, i18n.ruleAnnotation]);\n\n  const getEditColumnLabel = useMemo(() => {\n    const editColumnLabel: { [columnGroupType: string]: string } = {};\n    editColumnLabel[DecisionTableColumnType.InputClause] = i18n.editClause.input;\n    editColumnLabel[DecisionTableColumnType.OutputClause] = i18n.editClause.output;\n    return editColumnLabel;\n  }, [i18n.editClause.input, i18n.editClause.output]);\n\n  const [selectedHitPolicy, setSelectedHitPolicy] = useState(hitPolicy);\n  const [selectedAggregation, setSelectedAggregation] = useState(aggregation);\n\n  const onHitPolicySelect = useCallback((itemId: string) => setSelectedHitPolicy(itemId as HitPolicy), []);\n\n  const onBuiltInAggregatorSelect = useCallback(\n    (itemId) => setSelectedAggregation((BuiltinAggregation as never)[itemId]),\n    []\n  );\n\n  const evaluateColumns = () => {\n    const inputColumns = _.map(\n      input,\n      (inputClause) =>\n        ({\n          label: inputClause.name,\n          accessor: inputClause.name,\n          dataType: inputClause.dataType,\n          width: inputClause.width,\n          groupType: DecisionTableColumnType.InputClause,\n          cssClasses: \"decision-table--input\",\n        } as ColumnInstance)\n    );\n    const outputColumns = _.map(\n      output,\n      (outputClause) =>\n        ({\n          label: outputClause.name,\n          accessor: outputClause.name,\n          dataType: outputClause.dataType,\n          width: outputClause.width,\n          groupType: DecisionTableColumnType.OutputClause,\n          cssClasses: \"decision-table--output\",\n        } as ColumnInstance)\n    );\n    const annotationColumns = _.map(\n      annotations,\n      (annotation) =>\n        ({\n          label: annotation.name,\n          accessor: annotation.name,\n          width: annotation.width,\n          inlineEditable: true,\n          groupType: DecisionTableColumnType.Annotation,\n          cssClasses: \"decision-table--annotation\",\n        } as ColumnInstance)\n    );\n\n    const inputSection = {\n      groupType: DecisionTableColumnType.InputClause,\n      label: \"Input\",\n      accessor: \"Input\",\n      cssClasses: \"decision-table--input\",\n      columns: inputColumns,\n    };\n    const outputSection = {\n      groupType: DecisionTableColumnType.OutputClause,\n      label: decisionName.current,\n      accessor: decisionName.current,\n      dataType: decisionDataType.current,\n      cssClasses: \"decision-table--output\",\n      columns: outputColumns,\n      appendColumnsOnChildren: true,\n    };\n    const annotationSection = {\n      groupType: DecisionTableColumnType.Annotation,\n      label: \"Annotations\",\n      accessor: \"Annotations\",\n      cssClasses: \"decision-table--annotation\",\n      columns: annotationColumns,\n      inlineEditable: true,\n    };\n\n    return [inputSection, outputSection, annotationSection];\n  };\n\n  const evaluateRows = () =>\n    _.map(rules, (rule) => {\n      const rowArray = [...rule.inputEntries, ...rule.outputEntries, ...rule.annotationEntries];\n      return _.reduce(\n        getColumnsAtLastLevel(columns.current),\n        (tableRow: DataRecord, column, columnIndex: number) => {\n          tableRow[column.accessor] = rowArray[columnIndex] || EMPTY_SYMBOL;\n          return tableRow;\n        },\n        {}\n      );\n    });\n\n  const decisionName = useRef(name);\n  const decisionDataType = useRef(dataType);\n  const columns = useRef<ColumnInstance[]>(evaluateColumns() as ColumnInstance[]);\n  const rows = useRef<DataRecord[]>(evaluateRows());\n\n  const spreadDecisionTableExpressionDefinition = useCallback(() => {\n    const groupedColumns = _.groupBy(getColumnsAtLastLevel(columns.current), (column) => column.groupType);\n    const input: Clause[] = _.map(groupedColumns[DecisionTableColumnType.InputClause], (inputClause) => ({\n      name: inputClause.accessor,\n      dataType: inputClause.dataType,\n      width: inputClause.width,\n    }));\n    const output: Clause[] = _.map(groupedColumns[DecisionTableColumnType.OutputClause], (outputClause) => ({\n      name: outputClause.accessor,\n      dataType: outputClause.dataType,\n      width: outputClause.width,\n    }));\n    const annotations: Annotation[] = _.map(groupedColumns[DecisionTableColumnType.Annotation], (annotation) => ({\n      name: annotation.accessor,\n      width: annotation.width,\n    }));\n    const rules: DecisionTableRule[] = _.map(rows.current, (row: DataRecord) => ({\n      inputEntries: _.map(input, (inputClause) => row[inputClause.name] as string),\n      outputEntries: _.map(output, (outputClause) => row[outputClause.name] as string),\n      annotationEntries: _.map(annotations, (annotation) => row[annotation.name] as string),\n    }));\n\n    const expressionDefinition: DecisionTableProps = {\n      uid,\n      logicType: LogicType.DecisionTable,\n      name: decisionName.current,\n      dataType: decisionDataType.current,\n      hitPolicy: selectedHitPolicy,\n      aggregation: selectedAggregation,\n      input,\n      output,\n      annotations,\n      rules,\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(expressionDefinition);\n    } else {\n      setSupervisorHash(\"!!!!!!!!!\" + hashfy(expressionDefinition));\n      window.beeApi?.broadcastDecisionTableExpressionDefinition?.(expressionDefinition);\n    }\n  }, [isHeadless, onUpdatingRecursiveExpression, selectedAggregation, selectedHitPolicy, setSupervisorHash, uid]);\n\n  const onColumnsUpdate = useCallback(\n    (updatedColumns) => {\n      columns.current = [...updatedColumns];\n      const decisionNodeColumn = _.find(updatedColumns, { groupType: DecisionTableColumnType.OutputClause });\n      decisionName.current = decisionNodeColumn.label;\n      decisionDataType.current = decisionNodeColumn.dataType;\n      onUpdatingNameAndDataType?.(decisionNodeColumn.label, decisionNodeColumn.dataType);\n      spreadDecisionTableExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadDecisionTableExpressionDefinition]\n  );\n\n  const fillMissingCellValues = useCallback(\n    (updatedRows: DataRecord[]) =>\n      _.map(updatedRows, (row) =>\n        _.reduce(\n          getColumnsAtLastLevel(columns.current),\n          (filledRow: DataRecord, column: ColumnInstance) => {\n            if (_.isNil(row[column.accessor])) {\n              filledRow[column.accessor] =\n                column.groupType === DecisionTableColumnType.InputClause ? DASH_SYMBOL : EMPTY_SYMBOL;\n            } else {\n              filledRow[column.accessor] = row[column.accessor];\n            }\n            return filledRow;\n          },\n          {}\n        )\n      ),\n    []\n  );\n\n  const onRowsUpdate = useCallback(\n    (updatedRows) => {\n      rows.current = fillMissingCellValues(updatedRows);\n      spreadDecisionTableExpressionDefinition();\n    },\n    [fillMissingCellValues, spreadDecisionTableExpressionDefinition]\n  );\n\n  const onRowAdding = useCallback(() => {\n    return _.reduce(\n      getColumnsAtLastLevel(columns.current),\n      (tableRow: DataRecord, column: ColumnInstance) => {\n        tableRow[column.accessor] =\n          column.groupType === DecisionTableColumnType.InputClause ? DASH_SYMBOL : EMPTY_SYMBOL;\n        return tableRow;\n      },\n      {} as DataRecord\n    );\n  }, []);\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadDecisionTableExpressionDefinition();\n  }, [spreadDecisionTableExpressionDefinition]);\n\n  return (\n    <div className={`decision-table-expression ${uid}`}>\n      <Table\n        headerLevels={1}\n        headerVisibility={TableHeaderVisibility.Full}\n        getColumnPrefix={getColumnPrefix}\n        editColumnLabel={getEditColumnLabel}\n        handlerConfiguration={getHandlerConfiguration}\n        columns={columns.current}\n        rows={rows.current}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowsUpdate={onRowsUpdate}\n        onRowAdding={onRowAdding}\n        controllerCell={useMemo(\n          () => (\n            <HitPolicySelector\n              selectedHitPolicy={selectedHitPolicy}\n              selectedBuiltInAggregator={selectedAggregation}\n              onHitPolicySelect={onHitPolicySelect}\n              onBuiltInAggregatorSelect={onBuiltInAggregatorSelect}\n            />\n          ),\n          [onBuiltInAggregatorSelect, onHitPolicySelect, selectedAggregation, selectedHitPolicy]\n        )}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./HitPolicySelector.css\";\nimport { BuiltinAggregation, getEnumKeyByEnumValue, HitPolicy } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface HitPolicySelectorProps {\n  /** Pre-selected hit policy */\n  selectedHitPolicy: HitPolicy;\n  /** Pre-selected built-in aggregator */\n  selectedBuiltInAggregator: BuiltinAggregation;\n  /** Callback invoked when hit policy selection changes */\n  onHitPolicySelect: (hitPolicy: HitPolicy) => void;\n  /** Callback invoked when built-in aggregator selection changes */\n  onBuiltInAggregatorSelect: (builtInAggregator: BuiltinAggregation) => void;\n}\n\nconst BUILT_IN_AGGREGATION_AVAILABILITY = [HitPolicy.Collect];\nexport const HitPolicySelector: React.FunctionComponent<HitPolicySelectorProps> = ({\n  onBuiltInAggregatorSelect,\n  onHitPolicySelect,\n  selectedBuiltInAggregator,\n  selectedHitPolicy,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [hitPolicySelectOpen, setHitPolicySelectOpen] = useState(false);\n  const [builtInAggregatorSelectOpen, setBuiltInAggregatorSelectOpen] = useState(false);\n  const [builtInAggregatorSelectDisabled, setBuiltInAggregatorSelectDisabled] = useState(\n    !_.includes(BUILT_IN_AGGREGATION_AVAILABILITY, selectedHitPolicy)\n  );\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const onHitPolicySelectToggle = useCallback((isOpen) => setHitPolicySelectOpen(isOpen), []);\n  const onBuiltInAggregatorSelectToggle = useCallback((isOpen) => setBuiltInAggregatorSelectOpen(isOpen), []);\n\n  const hitPolicySelectionCallback = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, itemId: string) => {\n      const updatedHitPolicy = itemId as HitPolicy;\n      const hitPolicySupportsAggregation = _.includes(BUILT_IN_AGGREGATION_AVAILABILITY, updatedHitPolicy);\n      onHitPolicySelect(updatedHitPolicy);\n      if (hitPolicySupportsAggregation) {\n        setBuiltInAggregatorSelectDisabled(false);\n      } else {\n        setBuiltInAggregatorSelectDisabled(true);\n        onBuiltInAggregatorSelect(\"<None>\" as BuiltinAggregation);\n      }\n      setHitPolicySelectOpen(false);\n    },\n    [onBuiltInAggregatorSelect, onHitPolicySelect]\n  );\n\n  const renderHitPolicyItems = useCallback(\n    () =>\n      _.map(Object.values(HitPolicy), (key) => (\n        <SelectOption key={key} value={key} data-ouia-component-id={key}>\n          {key}\n        </SelectOption>\n      )),\n    []\n  );\n\n  const builtInAggregatorSelectionCallback = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, itemId: string) => {\n      onBuiltInAggregatorSelect(itemId as BuiltinAggregation);\n      setBuiltInAggregatorSelectOpen(false);\n    },\n    [onBuiltInAggregatorSelect]\n  );\n\n  const renderBuiltInAggregationItems = useCallback(\n    () =>\n      _.map(Object.keys(BuiltinAggregation), (key) => (\n        <SelectOption key={key} value={key} data-ouia-component-id={key}>\n          {key}\n        </SelectOption>\n      )),\n    []\n  );\n\n  const renderAggregator = useCallback((builtInAggregator: BuiltinAggregation, hitPolicy: HitPolicy) => {\n    if (_.includes(BUILT_IN_AGGREGATION_AVAILABILITY, hitPolicy)) {\n      return builtInAggregator;\n    }\n    return \"\";\n  }, []);\n\n  return (\n    <PopoverMenu\n      title={i18n.editHitPolicy}\n      appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n      className=\"hit-policy-popover\"\n      hasAutoWidth\n      body={\n        <div className=\"hit-policy-container\">\n          <div className=\"hit-policy-section\">\n            <label>{i18n.hitPolicy}</label>\n            <Select\n              className=\"hit-policy-selector\"\n              menuAppendTo={globalContext.boxedExpressionEditorRef?.current ?? \"inline\"}\n              ouiaId=\"hit-policy-selector\"\n              variant={SelectVariant.single}\n              onToggle={onHitPolicySelectToggle}\n              onSelect={hitPolicySelectionCallback}\n              isOpen={hitPolicySelectOpen}\n              selections={selectedHitPolicy}\n            >\n              {renderHitPolicyItems()}\n            </Select>\n          </div>\n          <div className=\"builtin-aggregator-section\">\n            <label>{i18n.builtInAggregator}</label>\n            <Select\n              className=\"builtin-aggregator-selector\"\n              menuAppendTo={globalContext.boxedExpressionEditorRef?.current ?? \"inline\"}\n              ouiaId=\"builtin-aggregator-selector\"\n              isDisabled={builtInAggregatorSelectDisabled}\n              variant={SelectVariant.single}\n              onToggle={onBuiltInAggregatorSelectToggle}\n              onSelect={builtInAggregatorSelectionCallback}\n              isOpen={builtInAggregatorSelectOpen}\n              selections={getEnumKeyByEnumValue(BuiltinAggregation, selectedBuiltInAggregator)!}\n            >\n              {renderBuiltInAggregationItems()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      <div className=\"selected-hit-policy\">{`${_.first(selectedHitPolicy)}${renderAggregator(\n        selectedBuiltInAggregator,\n        selectedHitPolicy\n      )}`}</div>\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ListExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextEntryRecord,\n  DataType,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord, Row } from \"react-table\";\nimport * as _ from \"lodash\";\nimport { hashfy } from \"../Resizer\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport nextId from \"react-id-generator\";\n\nconst LIST_EXPRESSION_MIN_WIDTH = 430;\n\nexport const ListExpression: React.FunctionComponent<ListProps> = ({\n  isHeadless,\n  items,\n  onUpdatingRecursiveExpression,\n  uid,\n  width = LIST_EXPRESSION_MIN_WIDTH,\n}: ListProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = useMemo(\n    () => [\n      {\n        group: i18n.rows,\n        items: [\n          { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n          { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n          { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n          { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n        ],\n      },\n    ],\n    [\n      i18n.rowOperations.clear,\n      i18n.rowOperations.delete,\n      i18n.rowOperations.insertAbove,\n      i18n.rowOperations.insertBelow,\n      i18n.rows,\n    ]\n  );\n\n  const generateLiteralExpression = useCallback(\n    () =>\n      ({\n        uid: nextId(),\n        name: \"\",\n        dataType: DataType.Undefined,\n        logicType: LogicType.LiteralExpression,\n        content: \"\",\n      } as LiteralExpressionProps),\n    []\n  );\n\n  const initialListOfItems = useCallback(() => {\n    if (_.isEmpty(items)) {\n      return [{ entryExpression: generateLiteralExpression() } as DataRecord];\n    } else {\n      return _.map(items, (item) => ({ entryExpression: item } as DataRecord));\n    }\n  }, [generateLiteralExpression, items]);\n\n  const [listItems, setListItems] = useState(initialListOfItems());\n  const [listWidth, setListWidth] = useState(width || LIST_EXPRESSION_MIN_WIDTH);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  const listTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryExpression.uid!, []);\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryExpression: generateLiteralExpression(),\n    }),\n    [generateLiteralExpression]\n  );\n\n  useEffect(() => {\n    const updatedDefinition: ListProps = {\n      uid,\n      logicType: LogicType.List,\n      width: listWidth,\n      items: _.map(listItems, (listItem: DataRecord) => listItem.entryExpression as ExpressionProps),\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(updatedDefinition);\n    } else {\n      setSupervisorHash(hashfy(updatedDefinition));\n      window.beeApi?.broadcastListExpressionDefinition?.(updatedDefinition);\n    }\n  }, [listWidth, listItems, isHeadless, onUpdatingRecursiveExpression, uid, setSupervisorHash]);\n\n  const resetRowCustomFunction = useCallback((row: DataRecord) => {\n    return { entryExpression: { uid: (row.entryExpression as ExpressionProps).uid } };\n  }, []);\n\n  const onRowsUpdate = useCallback((rows) => {\n    setListItems(rows);\n  }, []);\n\n  const columns = useMemo(() => [{ accessor: \"list\", width: listWidth, setWidth: setListWidth }], [listWidth]);\n\n  return useMemo(\n    () => (\n      <div className=\"list-expression\">\n        <Table\n          tableId={uid}\n          headerVisibility={TableHeaderVisibility.None}\n          defaultCell={{ list: ContextEntryExpressionCell }}\n          columns={columns}\n          rows={listItems as DataRecord[]}\n          onRowsUpdate={onRowsUpdate}\n          onRowAdding={onRowAdding}\n          handlerConfiguration={handlerConfiguration}\n          getRowKey={listTableGetRowKey}\n          resetRowCustomFunction={resetRowCustomFunction}\n        />\n      </div>\n    ),\n    [\n      columns,\n      handlerConfiguration,\n      listItems,\n      listTableGetRowKey,\n      onRowAdding,\n      onRowsUpdate,\n      resetRowCustomFunction,\n      uid,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./InvocationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  EntryInfo,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  InvocationProps,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell, ContextEntryInfoCell } from \"../ContextExpression\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { hashfy } from \"../Resizer\";\n\nconst DEFAULT_PARAMETER_NAME = \"p-1\";\nconst DEFAULT_PARAMETER_DATA_TYPE = DataType.Undefined;\n\nexport const InvocationExpression: React.FunctionComponent<InvocationProps> = ({\n  bindingEntries,\n  dataType = DEFAULT_PARAMETER_DATA_TYPE,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  invokedFunction = \"\",\n  isHeadless,\n  logicType,\n  name = DEFAULT_PARAMETER_NAME,\n  onUpdatingNameAndDataType,\n  onUpdatingRecursiveExpression,\n  uid,\n}: InvocationProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [rows, setRows] = useState(\n    bindingEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_PARAMETER_NAME,\n          dataType: DEFAULT_PARAMETER_DATA_TYPE,\n        },\n        entryExpression: {\n          name: DEFAULT_PARAMETER_NAME,\n          dataType: DEFAULT_PARAMETER_DATA_TYPE,\n        },\n        editInfoPopoverLabel: i18n.editParameter,\n        nameAndDataTypeSynchronized: true,\n      } as DataRecord,\n    ]\n  );\n\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const [functionName, setFunctionName] = useState(invokedFunction);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  useEffect(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: InvocationProps = {\n      uid,\n      logicType,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      bindingEntries: rows as ContextEntries,\n      invokedFunction: functionName,\n      entryInfoWidth: infoWidth,\n      entryExpressionWidth: expressionWidth,\n    };\n\n    const expression = _.omit(updatedDefinition, [\"name\", \"dataType\"]);\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(expression);\n    } else {\n      setSupervisorHash(hashfy(expression));\n      window.beeApi?.broadcastInvocationExpressionDefinition?.(updatedDefinition);\n    }\n  }, [\n    expressionWidth,\n    functionName,\n    infoWidth,\n    isHeadless,\n    logicType,\n    onUpdatingRecursiveExpression,\n    rows,\n    setSupervisorHash,\n    uid,\n  ]);\n\n  const onBlurCallback = useCallback((event) => {\n    setFunctionName(event.target.value);\n  }, []);\n\n  const headerCellElement = (\n    <div className=\"function-definition-container\">\n      <input\n        className=\"function-definition pf-u-text-truncate\"\n        type=\"text\"\n        placeholder={i18n.enterFunction}\n        defaultValue={functionName}\n        onBlur={onBlurCallback}\n      />\n    </div>\n  );\n\n  const columns = useRef([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          headerCellElement,\n          accessor: \"functionDefinition\",\n          disableHandlerOnHeader: true,\n          columns: [\n            {\n              accessor: \"entryInfo\",\n              disableHandlerOnHeader: true,\n              width: infoWidth,\n              setWidth: setInfoWidth,\n              minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n            },\n            {\n              accessor: \"entryExpression\",\n              disableHandlerOnHeader: true,\n              width: expressionWidth,\n              setWidth: setExpressionWidth,\n              minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n            },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label as string, expressionColumn.dataType);\n\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label as string;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onRowAdding = useCallback(() => {\n    const generatedName = generateNextAvailableEntryName(\n      _.map(rows, (row: ContextEntryRecord) => row.entryInfo) as EntryInfo[],\n      \"p\"\n    );\n    return {\n      entryInfo: {\n        name: generatedName,\n        dataType: DEFAULT_PARAMETER_DATA_TYPE,\n      },\n      entryExpression: {\n        name: generatedName,\n        dataType: DEFAULT_PARAMETER_DATA_TYPE,\n      },\n      editInfoPopoverLabel: i18n.editParameter,\n      nameAndDataTypeSynchronized: true,\n    };\n  }, [i18n.editParameter, rows]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.SecondToLastLevel : TableHeaderVisibility.Full;\n  }, [isHeadless]);\n\n  const setRowsCallback = useCallback((entries) => setRows(entries), []);\n  const getRowKeyCallback = useCallback((row) => getEntryKey(row), []);\n  const resetEntryCallback = useCallback((row) => resetEntry(row), []);\n\n  return useMemo(\n    () => (\n      <div className={`invocation-expression ${uid}`}>\n        <Table\n          tableId={uid}\n          headerLevels={2}\n          headerVisibility={getHeaderVisibility()}\n          skipLastHeaderGroup\n          defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n          columns={columns.current}\n          rows={rows as DataRecord[]}\n          onColumnsUpdate={onColumnsUpdate}\n          onRowAdding={onRowAdding}\n          onRowsUpdate={setRowsCallback}\n          handlerConfiguration={getHandlerConfiguration(i18n, i18n.parameters)}\n          getRowKey={getRowKeyCallback}\n          resetRowCustomFunction={resetEntryCallback}\n        />\n      </div>\n    ),\n    [\n      getHeaderVisibility,\n      getRowKeyCallback,\n      i18n,\n      onColumnsUpdate,\n      onRowAdding,\n      resetEntryCallback,\n      rows,\n      setRowsCallback,\n      uid,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditParameters.css\";\nimport * as _ from \"lodash\";\nimport { DataTypeSelector } from \"../EditExpressionMenu\";\nimport { Button } from \"@patternfly/react-core\";\nimport { OutlinedTrashAltIcon } from \"@patternfly/react-icons\";\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback } from \"react\";\nimport { DataType, EntryInfo, generateNextAvailableEntryName } from \"../../api\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\n\nexport interface EditParametersProps {\n  /** List of parameters */\n  parameters: EntryInfo[];\n  /** Function for mutating parameters state */\n  setParameters: React.Dispatch<React.SetStateAction<EntryInfo[]>>;\n}\n\nexport const EditParameters: React.FunctionComponent<EditParametersProps> = ({ parameters, setParameters }) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const addParameter = useCallback(() => {\n    setParameters((parameters) => [\n      ...parameters,\n      {\n        name: generateNextAvailableEntryName(parameters, \"p\"),\n        dataType: DataType.Undefined,\n      },\n    ]);\n  }, [setParameters]);\n\n  const onNameChange = useCallback(\n    (index: number) => (event: ChangeEvent<HTMLInputElement>) =>\n      setParameters((parameters) => {\n        parameters[index].name = event.target.value;\n        return [...parameters];\n      }),\n    [setParameters]\n  );\n\n  const onDataTypeChange = useCallback(\n    (index: number) => (dataType: DataType) => {\n      setParameters((parameters) => {\n        parameters[index].dataType = dataType;\n        return [...parameters];\n      });\n    },\n    [setParameters]\n  );\n\n  const onParameterRemove = useCallback(\n    (index: number) => () =>\n      setParameters((parameters) => [...parameters.slice(0, index), ...parameters.slice(index + 1)]),\n    [setParameters]\n  );\n\n  return (\n    <div className=\"parameters-editor\">\n      <Button variant=\"tertiary\" onClick={addParameter} className=\"add-parameter\">\n        {i18n.addParameter}\n      </Button>\n      <div className=\"parameters-container\">\n        {_.map(parameters, (parameter, index) => {\n          return (\n            <div key={`${parameter.name}_${index}`} className=\"parameter-entry\">\n              <input\n                className=\"parameter-name\"\n                type=\"text\"\n                onBlur={onNameChange(index)}\n                defaultValue={parameter.name}\n              />\n              <DataTypeSelector\n                selectedDataType={parameter.dataType}\n                onDataTypeChange={onDataTypeChange(index)}\n                menuAppendTo=\"parent\"\n              />\n              <Button\n                variant=\"danger\"\n                className=\"delete-parameter\"\n                icon={<OutlinedTrashAltIcon />}\n                iconPosition=\"left\"\n                onClick={onParameterRemove(index)}\n              >\n                {i18n.delete}\n              </Button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { FunctionKind } from \"../../api\";\n\nexport interface FunctionKindSelectorProps {\n  /** Pre-selected function kind */\n  selectedFunctionKind: FunctionKind;\n  /** Callback invoked when function kind selection changes */\n  onFunctionKindSelect: (functionKind: FunctionKind) => void;\n}\n\nexport const FunctionKindSelector: React.FunctionComponent<FunctionKindSelectorProps> = ({\n  selectedFunctionKind,\n  onFunctionKindSelect,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const functionKindSelectionCallback = useCallback(\n    (hide: () => void) => (event: MouseEvent, itemId: string) => {\n      onFunctionKindSelect(itemId as FunctionKind);\n      hide();\n    },\n    [onFunctionKindSelect]\n  );\n\n  const renderFunctionKindItems = useCallback(\n    () =>\n      _.map(Object.values(FunctionKind), (key) => (\n        <MenuItem key={key} itemId={key} data-ouia-component-id={key}>\n          {key}\n        </MenuItem>\n      )),\n    []\n  );\n\n  return (\n    <PopoverMenu\n      title={i18n.selectFunctionKind}\n      appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n      className=\"function-kind-popover\"\n      hasAutoWidth\n      body={(hide: () => void) => (\n        <Menu onSelect={functionKindSelectionCallback(hide)}>\n          <MenuList>{renderFunctionKindItems()}</MenuList>\n        </Menu>\n      )}\n    >\n      <div className=\"selected-function-kind\">{_.first(selectedFunctionKind)}</div>\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./FunctionExpression.css\";\nimport * as React from \"react\";\nimport { PropsWithChildren, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  ExpressionProps,\n  FeelFunctionProps,\n  FunctionKind,\n  FunctionProps,\n  JavaFunctionProps,\n  LiteralExpressionProps,\n  LogicType,\n  PmmlFunctionProps,\n  PMMLLiteralExpressionProps,\n  resetEntry,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { FunctionKindSelector } from \"./FunctionKindSelector\";\nimport { EditParameters } from \"./EditParameters\";\nimport { hashfy } from \"../Resizer\";\n\nexport const DEFAULT_FIRST_PARAM_NAME = \"p-1\";\n\nexport const FunctionExpression: React.FunctionComponent<FunctionProps> = (props: PropsWithChildren<FunctionProps>) => {\n  const parametersWidth =\n    props.parametersWidth === undefined ? DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH : props.parametersWidth;\n  const formalParameters = props.formalParameters === undefined ? [] : props.formalParameters;\n  const functionKind = props.functionKind === undefined ? FunctionKind.Feel : props.functionKind;\n  const [width, setWidth] = useState(parametersWidth);\n\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const { boxedExpressionEditorRef, setSupervisorHash, pmmlParams } = useContext(BoxedExpressionGlobalContext);\n\n  const [parameters, setParameters] = useState(formalParameters);\n\n  const name = useRef(props.name === undefined ? DEFAULT_FIRST_PARAM_NAME : props.name);\n  const dataType = useRef(props.dataType === undefined ? DataType.Undefined : props.dataType);\n\n  const document = useRef((props as PmmlFunctionProps).document);\n  const model = useRef((props as PmmlFunctionProps).model);\n\n  const editParametersPopoverAppendTo = useCallback(() => {\n    return () => boxedExpressionEditorRef.current!;\n  }, [boxedExpressionEditorRef]);\n\n  const headerCellElement = useMemo(\n    () => (\n      <PopoverMenu\n        title={i18n.editParameters}\n        appendTo={editParametersPopoverAppendTo()}\n        className=\"parameters-editor-popover\"\n        minWidth=\"400px\"\n        body={<EditParameters parameters={parameters} setParameters={setParameters} />}\n      >\n        <div className={`parameters-list ${_.isEmpty(parameters) ? \"empty-parameters\" : \"\"}`}>\n          <p className=\"pf-u-text-truncate\">\n            {_.isEmpty(parameters)\n              ? i18n.editParameters\n              : `(${_.join(\n                  _.map(parameters, (parameter) => parameter.name),\n                  \", \"\n                )})`}\n          </p>\n        </div>\n      </PopoverMenu>\n    ),\n    [editParametersPopoverAppendTo, i18n.editParameters, parameters]\n  );\n\n  const evaluateColumns = useCallback(\n    () =>\n      [\n        {\n          label: name.current,\n          accessor: name.current,\n          dataType: dataType.current,\n          disableHandlerOnHeader: true,\n          columns: [\n            {\n              headerCellElement,\n              accessor: \"parameters\",\n              disableHandlerOnHeader: true,\n              width: width,\n              minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n            },\n          ],\n        },\n      ] as ColumnInstance[],\n    [headerCellElement, width]\n  );\n\n  const extractContextEntriesFromJavaProps = useCallback(\n    (javaProps: JavaFunctionProps & { children?: React.ReactNode }) => {\n      return [\n        {\n          entryInfo: { name: i18n.class, dataType: DataType.String },\n          entryExpression: {\n            noClearAction: true,\n            logicType: LogicType.LiteralExpression,\n            content: javaProps.class,\n          } as LiteralExpressionProps,\n        },\n        {\n          entryInfo: { name: i18n.methodSignature, dataType: DataType.String },\n          entryExpression: {\n            noClearAction: true,\n            logicType: LogicType.LiteralExpression,\n            content: javaProps.method,\n          } as LiteralExpressionProps,\n        },\n      ];\n    },\n    [i18n.class, i18n.methodSignature]\n  );\n\n  const extractContextEntriesFromPmmlProps = useCallback(() => {\n    return [\n      {\n        entryInfo: { name: i18n.document, dataType: DataType.String },\n        entryExpression: {\n          noClearAction: true,\n          logicType: LogicType.PMMLLiteralExpression,\n          noOptionsLabel: i18n.pmml.firstSelection,\n          getOptions: () => _.map(pmmlParams, \"document\"),\n          selected: document.current,\n        } as PMMLLiteralExpressionProps,\n      },\n      {\n        entryInfo: { name: i18n.model, dataType: DataType.String },\n        entryExpression: {\n          noClearAction: true,\n          logicType: LogicType.PMMLLiteralExpression,\n          noOptionsLabel: i18n.pmml.secondSelection,\n          getOptions: () =>\n            _.map(_.find(pmmlParams, (param) => param.document === document.current)?.modelsFromDocument, \"model\"),\n          selected: model.current,\n        } as PMMLLiteralExpressionProps,\n      },\n    ];\n  }, [i18n.document, i18n.model, i18n.pmml.firstSelection, i18n.pmml.secondSelection, pmmlParams]);\n\n  const extractParametersFromPmmlProps = useCallback(() => {\n    return (\n      _.find(_.find(pmmlParams, { document: document.current })?.modelsFromDocument, {\n        model: model.current,\n      })?.parametersFromModel || []\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const evaluateRows = useCallback(\n    (functionKind: FunctionKind) => {\n      switch (functionKind) {\n        case FunctionKind.Java: {\n          const javaProps: PropsWithChildren<JavaFunctionProps> = props as PropsWithChildren<JavaFunctionProps>;\n          return [\n            {\n              entryExpression: {\n                logicType: LogicType.Context,\n                noClearAction: true,\n                renderResult: false,\n                noHandlerMenu: true,\n                contextEntries: extractContextEntriesFromJavaProps(javaProps),\n              },\n            } as DataRecord,\n          ];\n        }\n        case FunctionKind.Pmml: {\n          return [\n            {\n              entryExpression: {\n                logicType: LogicType.Context,\n                noClearAction: true,\n                renderResult: false,\n                noHandlerMenu: true,\n                contextEntries: extractContextEntriesFromPmmlProps(),\n              },\n            } as DataRecord,\n          ];\n        }\n        case FunctionKind.Feel:\n        default: {\n          const feelProps: PropsWithChildren<FeelFunctionProps> = props as PropsWithChildren<FeelFunctionProps>;\n          return [\n            { entryExpression: feelProps.expression || { logicType: LogicType.LiteralExpression } } as DataRecord,\n          ];\n        }\n      }\n    },\n    [extractContextEntriesFromJavaProps, extractContextEntriesFromPmmlProps, props]\n  );\n\n  const columns = useRef(evaluateColumns());\n  const [selectedFunctionKind, setSelectedFunctionKind] = useState(functionKind);\n  const [rows, setRows] = useState(evaluateRows(selectedFunctionKind));\n\n  const retrieveModelValue = useCallback(\n    (documentValue: string, contextProps: ContextProps) =>\n      documentValue === document.current\n        ? _.includes(\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as PMMLLiteralExpressionProps)?.getOptions(),\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as PMMLLiteralExpressionProps)?.selected\n          )\n          ? (_.nth(contextProps.contextEntries, 1)?.entryExpression as PMMLLiteralExpressionProps)?.selected\n          : \"\"\n        : \"\",\n    []\n  );\n\n  const setParametersBasedOnDocumentAndModel = useCallback(\n    (documentHasBeenChanged: boolean, modelHasBeenChanged: boolean) => {\n      if (documentHasBeenChanged) {\n        setParameters([]);\n      }\n      if (modelHasBeenChanged) {\n        const parametersFromPmmlProps = extractParametersFromPmmlProps();\n        if (!_.isEmpty(parametersFromPmmlProps)) {\n          setParameters(parametersFromPmmlProps);\n        }\n      }\n    },\n    [extractParametersFromPmmlProps]\n  );\n\n  const extendDefinitionBasedOnFunctionKind = useCallback(\n    (definition: FunctionProps, functionKind: FunctionKind) => {\n      switch (functionKind) {\n        case FunctionKind.Java: {\n          const contextProps = _.first(rows)?.entryExpression as ContextProps;\n          const className =\n            (_.nth(contextProps.contextEntries, 0)?.entryExpression as LiteralExpressionProps)?.content || \"\";\n          const methodName =\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as LiteralExpressionProps)?.content || \"\";\n          return _.extend(definition, { class: className, method: methodName });\n        }\n        case FunctionKind.Pmml: {\n          const contextProps = _.first(rows)?.entryExpression as ContextProps;\n          const documentValue =\n            (_.nth(contextProps.contextEntries, 0)?.entryExpression as PMMLLiteralExpressionProps)?.selected || \"\";\n          const modelValue = retrieveModelValue(documentValue, contextProps);\n          const documentHasBeenChanged = documentValue !== document.current;\n          const modelHasBeenChanged = modelValue !== model.current;\n          document.current = documentValue;\n          model.current = modelValue;\n          setParametersBasedOnDocumentAndModel(documentHasBeenChanged, modelHasBeenChanged);\n          return _.extend(definition, { document: documentValue, model: modelValue });\n        }\n        case FunctionKind.Feel:\n        default: {\n          return _.extend(definition, { expression: _.first(rows)?.entryExpression as ExpressionProps });\n        }\n      }\n    },\n    [retrieveModelValue, rows, setParametersBasedOnDocumentAndModel]\n  );\n\n  const spreadFunctionExpressionDefinition = useCallback(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: FunctionProps = extendDefinitionBasedOnFunctionKind(\n      {\n        uid: props.uid,\n        logicType: props.logicType,\n        name: expressionColumn.accessor,\n        dataType: expressionColumn.dataType,\n        functionKind: selectedFunctionKind,\n        formalParameters: parameters,\n        parametersWidth: width,\n      },\n      selectedFunctionKind\n    );\n\n    if (props.isHeadless) {\n      props.onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]));\n    } else {\n      setSupervisorHash(hashfy(rows));\n      window.beeApi?.broadcastFunctionExpressionDefinition?.(updatedDefinition);\n    }\n  }, [extendDefinitionBasedOnFunctionKind, setSupervisorHash, parameters, props, selectedFunctionKind, rows, width]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return props.isHeadless ? TableHeaderVisibility.LastLevel : TableHeaderVisibility.Full;\n  }, [props.isHeadless]);\n\n  const onFunctionKindSelect = useCallback(\n    (itemId: string) => {\n      const kind = itemId as FunctionKind;\n      setSelectedFunctionKind(kind);\n      // Resetting table content, every time function kind gets selected\n      setRows([{ entryExpression: { logicType: LogicType.Undefined } }]);\n      // Need to wait for the next rendering cycle before setting the correct table rows, based on function kind\n      setTimeout(() => {\n        setRows(evaluateRows(kind));\n      }, 0);\n    },\n    [evaluateRows]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      props.onUpdatingNameAndDataType?.(expressionColumn.label as string, expressionColumn.dataType);\n      setWidth(expressionColumn.width as number);\n\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label as string;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n      spreadFunctionExpressionDefinition();\n    },\n    [columns, props, spreadFunctionExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Everytime the list of parameters or the function definition change, we need to spread expression's updated definition */\n    spreadFunctionExpressionDefinition();\n  }, [rows, spreadFunctionExpressionDefinition]);\n\n  useEffect(() => {\n    columns.current = evaluateColumns();\n    // Watching for changes of the parameters, in order to update the columns passed to the table\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parameters]);\n\n  const resetRowCustomFunction = useCallback((row) => {\n    setSelectedFunctionKind(FunctionKind.Feel);\n    return resetEntry(row);\n  }, []);\n\n  return (\n    <div className={`function-expression ${props.uid}`}>\n      <Table\n        handlerConfiguration={[\n          {\n            group: _.upperCase(i18n.function),\n            items: [{ name: i18n.rowOperations.clear, type: TableOperation.RowClear }],\n          },\n        ]}\n        columns={columns.current}\n        onColumnsUpdate={onColumnsUpdate}\n        rows={rows}\n        onRowsUpdate={setRows}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        controllerCell={useMemo(\n          () => (\n            <FunctionKindSelector\n              selectedFunctionKind={selectedFunctionKind}\n              onFunctionKindSelect={onFunctionKindSelect}\n            />\n          ),\n          [onFunctionKindSelect, selectedFunctionKind]\n        )}\n        defaultCell={{ parameters: ContextEntryExpressionCell }}\n        resetRowCustomFunction={resetRowCustomFunction}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionProps,\n  FunctionKind,\n  FunctionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  PMMLLiteralExpressionProps,\n  RelationProps,\n} from \"../../api\";\nimport { LiteralExpression, PMMLLiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\nimport nextId from \"react-id-generator\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DecisionTableExpression } from \"../DecisionTableExpression\";\nimport { ListExpression } from \"../ListExpression\";\nimport { InvocationExpression } from \"../InvocationExpression\";\nimport { FunctionExpression } from \"../FunctionExpression\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const expression = _.extend(selectedExpression, {\n    uid: selectedExpression.uid || nextId(),\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.PMMLLiteralExpression:\n        return <PMMLLiteralExpression {...(expression as PMMLLiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n        return <DecisionTableExpression {...(expression as DecisionTableProps)} />;\n      case LogicType.Invocation:\n        return <InvocationExpression {...(expression as InvocationProps)} />;\n      case LogicType.List:\n        return <ListExpression {...(expression as ListProps)} />;\n      case LogicType.Function:\n        return <FunctionExpression {..._.defaults(expression, { functionKind: FunctionKind.Feel } as FunctionProps)} />;\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getSelectableLogicTypes = useCallback(\n    () =>\n      Object.values(LogicType).filter(\n        (logicType) => !_.includes([LogicType.Undefined, LogicType.PMMLLiteralExpression], logicType)\n      ),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () =>\n      _.map(getSelectableLogicTypes(), (key) => (\n        <MenuItem key={key} itemId={key}>\n          {key}\n        </MenuItem>\n      )),\n    [getSelectableLogicTypes]\n  );\n\n  const getArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const getAppendToPlacement = useCallback(() => {\n    return globalContext.boxedExpressionEditorRef?.current ?? getArrowPlacement;\n  }, [getArrowPlacement, globalContext.boxedExpressionEditorRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (event: MouseEvent, itemId: string) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = itemId as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getArrowPlacement}\n        appendTo={getAppendToPlacement()}\n        className=\"logic-type-popover\"\n        hasAutoWidth\n        body={\n          <Menu onSelect={onLogicTypeSelect}>\n            <MenuList>{renderLogicTypeItems()}</MenuList>\n          </Menu>\n        }\n      />\n    ),\n    [i18n.selectLogicType, getArrowPlacement, getAppendToPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {!selectedExpression.noClearAction && contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        uid: previousSelectedExpression.uid,\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <div className=\"expression-name-and-logic-type\">\n        <span className=\"expression-title\">{selectedExpression.name}</span>\n        <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n      </div>\n\n      <div\n        className=\"expression-container-box\"\n        ref={expressionContainerRef}\n        data-ouia-component-id=\"expression-container\"\n      >\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useMemo, useRef, useState } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base-no-reset.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport \"./BoxedExpressionEditor.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport { hashfy, ResizerSupervisor } from \"../Resizer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport * as _ from \"lodash\";\nimport { PMMLParams } from \"../../api\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n  /** PMML parameters */\n  pmmlParams?: PMMLParams;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => {\n  const [currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback] = useState(() => _.identity);\n  const boxedExpressionEditorRef = useRef<HTMLDivElement>(null);\n  const [supervisorHash, setSupervisorHash] = useState(hashfy(props.expressionDefinition));\n\n  return useMemo(\n    () => (\n      <I18nDictionariesProvider\n        defaults={boxedExpressionEditorI18nDefaults}\n        dictionaries={boxedExpressionEditorDictionaries}\n        initialLocale={navigator.language}\n        ctx={BoxedExpressionEditorI18nContext}\n      >\n        <BoxedExpressionGlobalContext.Provider\n          value={{\n            pmmlParams: props.pmmlParams,\n            supervisorHash,\n            setSupervisorHash,\n            boxedExpressionEditorRef,\n            currentlyOpenedHandlerCallback,\n            setCurrentlyOpenedHandlerCallback,\n          }}\n        >\n          <ResizerSupervisor>\n            <div className=\"boxed-expression-editor\" ref={boxedExpressionEditorRef}>\n              <ExpressionContainer {...props.expressionDefinition} />\n            </div>\n          </ResizerSupervisor>\n        </BoxedExpressionGlobalContext.Provider>\n      </I18nDictionariesProvider>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.expressionDefinition]\n  );\n};\n\nexport { BoxedExpressionEditor };\n"],"sourceRoot":""}