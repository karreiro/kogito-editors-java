{"version":3,"sources":["boxed_expression_editor/index.tsx","boxed_expression_editor/api/BuiltinAggregation.ts","boxed_expression_editor/api/ContextEntry.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/FunctionKind.ts","boxed_expression_editor/api/HitPolicy.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/api/index.ts","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/components/EditExpressionMenu/DataTypeSelector.tsx","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/context/BoxedExpressionGlobalContext.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/common/index.ts","boxed_expression_editor/components/Resizer/dom/Cell.ts","boxed_expression_editor/components/Resizer/dom/DOMSession.ts","boxed_expression_editor/components/Resizer/dom/ResizerSupervisorDOM.ts","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/Resizer/ResizerSupervisor.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableBody.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/TableHandler.tsx","boxed_expression_editor/components/Table/TableHeader.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/DecisionTableExpression/DecisionTableExpression.tsx","boxed_expression_editor/components/ListExpression/ListExpression.tsx","boxed_expression_editor/components/InvocationExpression/InvocationExpression.tsx","boxed_expression_editor/components/FunctionExpression/EditParameters.tsx","boxed_expression_editor/components/FunctionExpression/FunctionKindSelector.tsx","boxed_expression_editor/components/FunctionExpression/FunctionExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx"],"names":["window","renderBoxedExpressionEditor","selector","definition","ReactDOM","expressionDefinition","selectedExpression","document","getElementById","BuiltinAggregation","DEFAULT_ENTRY_INFO_MIN_WIDTH","DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH","getHandlerConfiguration","i18n","groupName","group","items","name","rowOperations","insertAbove","type","TableOperation","RowInsertAbove","insertBelow","RowInsertBelow","delete","RowDelete","clear","RowClear","generateNextAvailableEntryName","entryInfos","namePrefix","lastIndex","length","candidateName","entryWithCandidateName","_","getEntryKey","row","original","entryInfo","resetEntry","entryExpression","uid","DataType","FunctionKind","HitPolicy","LogicType","en","en_common","addParameter","choose","class","columnOperations","insertLeft","insertRight","columns","context","contextEntry","dataType","decisionTable","editContextEntry","editExpression","editParameter","editParameters","editRelation","enterFunction","function","invocation","list","literalExpression","methodSignature","parameters","relation","rows","selectExpression","selectFunctionKind","selectLogicType","boxedExpressionEditorI18nDefaults","locale","dictionary","boxedExpressionEditorDictionaries","Map","BoxedExpressionEditorI18nContext","React","useBoxedExpressionEditorI18n","useContext","App","Undefined","useState","updatedExpression","setUpdatedExpression","beeApi","resetExpressionDefinition","broadcastLiteralExpressionDefinition","broadcastRelationExpressionDefinition","broadcastContextExpressionDefinition","broadcastListExpressionDefinition","broadcastInvocationExpressionDefinition","broadcastFunctionExpressionDefinition","className","JSON","stringify","TableHeaderVisibility","DataTypeSelector","selectedDataType","onDataTypeChange","menuAppendTo","dataTypeSelectOpen","setDataTypeSelectOpen","onDataTypeSelect","useCallback","event","selection","getDataTypes","Object","values","key","SelectOption","value","data-ouia-component-id","onDataTypeFilter","e","input","RegExp","target","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","PopoverMenu","children","arrowPlacement","body","title","appendTo","hasAutoWidth","minWidth","Popover","position","distance","id","reference","headerContent","bodyContent","BoxedExpressionGlobalContext","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","selectedExpressionName","onExpressionUpdate","globalContext","boxedExpressionEditorRef","current","undefined","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","onChange","onBlur","placeholder","DEFAULT_MIN_WIDTH","widthValue","width","Math","max","round","parseFloat","hashfy","obj","Cell","element","depth","lastColumn","rect","parentRow","this","slice","call","classList","c","match","getBoundingClientRect","getParentRow","lastChild","closest","cellWidth","dispatchEvent","CustomEvent","detail","notifyCell","getId","style","setWidth","fetchChildWidth","isLastColumn","parentRect","right","getRect","x","thead","querySelector","DOMSession","cells","buildCells","fetchCellElements","forEach","cellElement","buildCell","htmlElement","depthLevel","exitingElement","find","cell","map","push","parent","htmlElements","querySelectorAll","applyDOMSupervisor","SupervisorExecution","execute","domSession","getCells","sort","c1","c2","refreshWidthAsParent","refreshWidthAsLastColumn","Resizer","height","onHorizontalResizeStop","resizerWidth","setResizerWidth","initalResizerWidth","setInitialResizerWidth","setCells","setSupervisorHash","useMemo","uuid","resizerMinWidth","resizerClassName","useLayoutEffect","listener","addEventListener","removeEventListener","commonWidthValue","getApplicableCells","allCells","currentCell","applicableCells","currentRect","hasSameParent","contains","hasSomeLastColumn","isCellParent","cellRect","containsCurrent","dataset","initialWidth","onResizeStart","onResize","data","newResizerWidth","parseInt","size","delta","celllElement","cellInitialWidth","onResizeStop","minConstraints","axis","handle","ResizerSupervisor","supervisorHash","setTimeout","clearTimeout","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","useRef","literalExpressionWidth","spreadLiteralExpressionDefinition","logicType","onContentChange","renderElementWithResizeHandler","renderLiteralExpressionHeader","getBodyContent","TextArea","defaultValue","aria-label","TableBody","tableInstance","headerVisibility","Full","getRowKey","getColumnKey","onColumnsUpdate","renderCell","cellIndex","rowIndex","cellType","column","allColumns","cellTemplate","render","Td","getTdProps","renderBodyRow","rowProps","getRowProps","Tr","renderAdditiveRow","role","childIndex","Tbody","None","getTableBodyProps","prepareRow","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","groupOperation","MenuGroup","label","operation","MenuList","MenuItem","isDisabled","TableHandler","columnPrefix","tableColumns","lastSelectedColumnIndex","lastSelectedRowIndex","tableRows","onRowsUpdate","onRowAdding","showTableHandler","setShowTableHandler","tableHandlerTarget","tableHandlerAllowedOperations","resetRowCustomFunction","selectedColumnIndex","setSelectedColumnIndex","selectedRowIndex","setSelectedRowIndex","insertBefore","elements","index","insertAfter","deleteAt","generateNextAvailableColumnName","accessor","generateNextAvailableColumn","updateColumnsThenRows","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","TableHeader","editColumnLabel","skipLastHeaderGroup","updateColumnNameInRows","prevColumnName","newColumnName","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","updatedTableColumns","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderHeaderCellInfo","headerCellElement","columnWidth","renderResizableHeaderCell","headerProps","thProps","getThProps","renderColumn","isCountColumn","getHeaderGroups","headerGroups","renderHeaderGroups","headerGroup","getHeaderGroupProps","headers","renderAtLevelInHeaderGroups","level","Thead","noWrap","LastLevel","SecondToLastLevel","NO_TABLE_CONTEXT_MENU_CLASS","Table","tableId","controllerCell","defaultCell","headerLevels","tableRef","currentControllerCell","setCurrentControllerCell","generateNumberOfRowsSubColumnRecursively","disableResizing","hideFilter","generateNumberOfRowsColumn","numberOfRowsColumn","setTableHandlerTarget","toString","setTableHandlerAllowedOperations","setLastSelectedColumnIndex","setLastSelectedRowIndex","onColumnsUpdateCallback","onRowsUpdateCallback","onCellUpdate","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","defaultColumn","cellRef","initialValue","setValue","EditableCell","contextMenuIsAvailable","targetIsContainedInCurrentTable","contextMenuAvailableForTarget","tableHandlerStateUpdate","currentlyOpenedHandlerCallback","setCurrentlyOpenedHandlerCallback","useTable","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","useBlockLayout","useResizeColumns","TableComposable","getTableProps","ref","RelationExpression","relationProps","spreadRelationExpressionDefinition","convertColumnsForTheTable","convertRowsForTheTable","tableRow","onSavingRows","onSavingColumns","columnInstance","ContextEntryExpression","expression","onExpressionResetting","expressionContainerRef","getLogicTypeSelectorRef","onLogicTypeUpdating","onLogicTypeResetting","getPlacementRef","ContextEntryExpressionCell","ContextEntryInfo","onContextEntryUpdate","editInfoPopoverLabel","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","renderEntryDefinition","additionalCssClass","renderEntryDefinitionWithPopoverMenu","ContextEntryInfoCell","setEntryInfo","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","contextEntries","result","renderResult","entryInfoWidth","entryExpressionWidth","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setExpressionWidth","setRows","getHeaderVisibility","expressionColumn","updatedDefinition","Context","DecisionTableExpression","ListExpression","generateLiteralExpression","initialListOfItems","item","listItems","setListItems","listWidth","setListWidth","listTableGetRowKey","List","listItem","DEFAULT_PARAMETER_DATA_TYPE","InvocationExpression","bindingEntries","invokedFunction","functionName","setFunctionName","updatedExpressionColumn","setRowsCallback","entries","getRowKeyCallback","resetEntryCallback","EditParameters","setParameters","onNameChange","onParameterRemove","Button","onClick","parameter","icon","iconPosition","FunctionKindSelector","selectedFunctionKind","onFunctionKindSelect","functionKindSelectionCallback","hide","renderFunctionKindItems","FunctionExpression","parametersWidth","formalParameters","functionKind","Feel","evaluateColumns","extractContextEntriesFromJavaProps","javaProps","String","noClearAction","method","evaluateRows","Java","noHandlerMenu","Pmml","setSelectedFunctionKind","extendDefinitionBasedOnFunctionKind","contextProps","methodName","spreadFunctionExpressionDefinition","kind","LogicTypeSelector","nextId","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","DecisionTable","Invocation","Function","getLogicTypesWithoutUndefined","renderLogicTypeItems","getArrowPlacement","getAppendToPlacement","onLogicTypeSelect","buildLogicSelectorMenu","executeClearAction","buildContextMenu","top","left","isSmall","ButtonVariant","primary","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","previousSelectedExpression","BoxedExpressionEditor","defaults","dictionaries","initialLocale","navigator","language","ctx","Provider"],"mappings":"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","file":"static/js/main.dde6e189.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditor } from \"./components\";\nimport * as React from \"react\";\nimport { ExpressionProps } from \"./api\";\nimport * as ReactDOM from \"react-dom\";\n\nexport * from \"./components\";\nexport * from \"./api\";\n\nwindow.renderBoxedExpressionEditor = (selector: string, definition: ExpressionProps) => {\n  ReactDOM.render(\n    <BoxedExpressionEditor expressionDefinition={{ selectedExpression: definition }} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum BuiltinAggregation {\n  Sum = \"+\",\n  Count = \"#\",\n  Min = \"<\",\n  Max = \">\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport { ExpressionProps } from \"./ExpressionProps\";\nimport * as _ from \"lodash\";\nimport { DataRecord, Row } from \"react-table\";\nimport { TableHandlerConfiguration, TableOperation } from \"./Table\";\nimport { BoxedExpressionEditorI18n } from \"../i18n\";\n\nexport interface EntryInfo {\n  /** Entry name */\n  name: string;\n  /** Entry data type */\n  dataType: DataType;\n}\n\nexport interface ContextEntryRecord {\n  entryInfo: EntryInfo;\n  /** Entry expression */\n  entryExpression: ExpressionProps;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel?: string;\n  /** Callback to be invoked on expression resetting */\n  onExpressionResetting?: () => void;\n}\n\nexport type ContextEntries = ContextEntryRecord[];\n\nexport const DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nexport const DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const getHandlerConfiguration = (\n  i18n: BoxedExpressionEditorI18n,\n  groupName: string\n): TableHandlerConfiguration => [\n  {\n    group: groupName,\n    items: [\n      { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n      { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n      { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n    ],\n  },\n];\n\nexport const generateNextAvailableEntryName = (\n  entryInfos: EntryInfo[],\n  namePrefix: string,\n  lastIndex: number = entryInfos.length\n): string => {\n  const candidateName = `${namePrefix}-${lastIndex === 0 ? 1 : lastIndex}`;\n  const entryWithCandidateName = _.find(entryInfos, { name: candidateName });\n  return entryWithCandidateName ? generateNextAvailableEntryName(entryInfos, namePrefix, lastIndex + 1) : candidateName;\n};\n\nexport const getEntryKey = (row: Row): string => (row.original as ContextEntryRecord).entryInfo.name;\n\nexport const resetEntry = (row: DataRecord): DataRecord => ({\n  ...row,\n  entryExpression: { uid: (row.entryExpression as ExpressionProps).uid },\n});\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps } from \"./ExpressionProps\";\n\nexport enum FunctionKind {\n  Feel = \"FEEL\",\n  Java = \"JAVA\",\n  Pmml = \"PMML\",\n}\n\nexport interface FeelFunctionProps {\n  /** Feel Function */\n  functionKind: FunctionKind.Feel;\n  /** The Expression related to the function */\n  expression?: ExpressionProps;\n}\n\nexport interface JavaFunctionProps {\n  /** Java Function */\n  functionKind: FunctionKind.Java;\n  /** Java class */\n  class?: string;\n  /** Method signature */\n  method?: string;\n}\n\nexport interface PmmlFunctionProps {\n  /** Pmml Function */\n  functionKind: FunctionKind.Pmml;\n  /** PMML document */\n  document?: string;\n  /** PMML model */\n  model?: string;\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HitPolicy {\n  Unique = \"UNIQUE\",\n  First = \"FIRST\",\n  Priority = \"PRIORITY\",\n  Any = \"ANY\",\n  Collect = \"COLLECT\",\n  RuleOrder = \"RULE ORDER\",\n  OutputOrder = \"OUTPUT ORDER\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  addParameter: \"Add parameter\",\n  choose: \"Choose...\",\n  class: \"class\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  delete: \"Delete\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editParameter: \"Edit Parameter\",\n  editParameters: \"Edit parameters\",\n  editRelation: \"Edit Relation\",\n  enterFunction: \"Enter function\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  methodSignature: \"method signature\",\n  name: \"Name\",\n  parameters: \"PARAMETERS\",\n  relation: \"Relation\",\n  rowOperations: {\n    clear: \"Clear\",\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectFunctionKind: \"Select Function Kind\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// noinspection ES6PreferShortImport\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  FunctionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression: ExpressionProps = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n    broadcastListExpressionDefinition: (definition: ListProps) => setUpdatedExpression(definition),\n    broadcastInvocationExpressionDefinition: (definition: InvocationProps) => setUpdatedExpression(definition),\n    broadcastFunctionExpressionDefinition: (definition: FunctionProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation, context, list, invocation and function\n          logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./BuiltinAggregation\";\nexport * from \"./ContextEntry\";\nexport * from \"./DataType\";\nexport * from \"./DecisionTableRule\";\nexport * from \"./ExpressionProps\";\nexport * from \"./FunctionKind\";\nexport * from \"./HitPolicy\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport * as React from \"react\";\nimport { Column as ReactTableColumn, DataRecord, Row as ReactTableRow } from \"react-table\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** Top-left cell custom content */\n  controllerCell?: string | JSX.Element;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: ReactTableColumn[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: ReactTableColumn[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration?: TableHandlerConfiguration;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Number of levels in the header, 0-based */\n  headerLevels?: number;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup?: boolean;\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey?: (row: ReactTableRow) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey?: (column: ReactTableColumn) => string;\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n}\n\n/** Possible status for the visibility of the Table's Header */\nexport enum TableHeaderVisibility {\n  Full,\n  LastLevel,\n  SecondToLastLevel,\n  None,\n}\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n  RowClear,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n  /** Set column width */\n  setWidth?: (width: string | number) => void;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { DataType } from \"../../api\";\n\nexport interface DataTypeSelectorProps {\n  /** The pre-selected data type */\n  selectedDataType: DataType;\n  /** On DataType selection callback */\n  onDataTypeChange: (dataType: DataType) => void;\n  /** By default the menu will be appended inline, but it is possible to append on the parent or on other elements */\n  menuAppendTo?: HTMLElement | \"inline\" | (() => HTMLElement) | \"parent\";\n}\n\nexport const DataTypeSelector: React.FunctionComponent<DataTypeSelectorProps> = ({\n  selectedDataType,\n  onDataTypeChange,\n  menuAppendTo,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      onDataTypeChange(selection);\n    },\n    [onDataTypeChange]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key} data-ouia-component-id={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <Select\n      menuAppendTo={menuAppendTo}\n      ouiaId=\"edit-expression-data-type\"\n      variant={SelectVariant.typeahead}\n      typeAheadAriaLabel={i18n.choose}\n      onToggle={onDataTypeSelectToggle}\n      onSelect={onDataTypeSelect}\n      onFilter={onDataTypeFilter}\n      isOpen={dataTypeSelectOpen}\n      selections={selectedDataType}\n      hasInlineFilter\n      inlineFilterPlaceholderText={i18n.choose}\n    >\n      {getDataTypes()}\n    </Select>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Additional classname to be used for the popover */\n  className?: string;\n  /** True to have width automatically computed */\n  hasAutoWidth?: boolean;\n  /** Popover min width */\n  minWidth?: string;\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n  className,\n  hasAutoWidth,\n  minWidth,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className={`popover-menu-selector${className ? \" \" + className : \"\"}`}\n      hasAutoWidth={hasAutoWidth}\n      minWidth={minWidth}\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nexport interface BoxedExpressionGlobalContextProps {\n  supervisorHash: string;\n  setSupervisorHash: (hash: string) => void;\n  boxedExpressionEditorRef: React.RefObject<HTMLDivElement>;\n  currentlyOpenedHandlerCallback: React.Dispatch<React.SetStateAction<boolean>>;\n  setCurrentlyOpenedHandlerCallback: React.Dispatch<\n    React.SetStateAction<React.Dispatch<React.SetStateAction<boolean>>>\n  >;\n}\n\nexport const BoxedExpressionGlobalContext = React.createContext<BoxedExpressionGlobalContextProps>(\n  {} as BoxedExpressionGlobalContextProps\n);\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DataTypeSelector } from \"./DataTypeSelector\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n  appendTo = appendTo ?? globalContext.boxedExpressionEditorRef?.current ?? undefined;\n\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeChange = useCallback(\n    (dataType: DataType) => {\n      setDataType(dataType);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: dataType,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <DataTypeSelector selectedDataType={dataType} onDataTypeChange={onDataTypeChange} />\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_MIN_WIDTH = 150;\n\n/*\n * Returns a valid width value.\n */\nexport const widthValue = (width: number | string | undefined | null): number => {\n  return Math.max(Math.round(parseFloat(width + \"\")), DEFAULT_MIN_WIDTH);\n};\n\n/*\n * Generates a global supervisor hash for a given object.\n */\nexport const hashfy = (obj = {}): string => {\n  return JSON.stringify(obj);\n};\n\n/*\n * Propagate Cell width from DOM to React state.\n */\nexport const notifyCell = (id: string, width: number = DEFAULT_MIN_WIDTH): void => {\n  document.dispatchEvent(\n    new CustomEvent(id, {\n      detail: { width },\n    })\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport { notifyCell, widthValue } from \"../common\";\n\nconst RESIZER_PADDING = 14;\nconst BORDER = 1;\n\nexport class Cell {\n  private id?: string;\n  private lastColumn?: boolean;\n  private rect?: DOMRect;\n  private parentRow?: HTMLTableRowElement | null;\n\n  constructor(public element: HTMLElement, public children: Cell[], public depth: number) {}\n\n  getId(): string {\n    if (!this.id) {\n      this.id = _.first([].slice.call(this.element.classList).filter((c: string) => c.match(/uuid-/g))) || \"\";\n    }\n    return this.id;\n  }\n\n  getRect(): DOMRect {\n    if (!this.rect) {\n      this.rect = this.element.getBoundingClientRect();\n    }\n    return this.rect;\n  }\n\n  isLastColumn(): boolean {\n    if (!this.lastColumn) {\n      this.lastColumn = this.getParentRow()?.lastChild === this.element.closest(\"th, td\");\n    }\n    return this.lastColumn;\n  }\n\n  setWidth(width: number): void {\n    const cellWidth = widthValue(width);\n    notifyCell(this.getId(), cellWidth);\n    this.element.style.width = cellWidth + \"px\";\n  }\n\n  refreshWidthAsParent(): void {\n    if (this.children.length > 0) {\n      this.setWidth(this.fetchChildWidth() + RESIZER_PADDING);\n    }\n  }\n\n  refreshWidthAsLastColumn(): void {\n    if (!this.isLastColumn()) {\n      return;\n    }\n\n    const parentRect = this.getParentRow()?.getBoundingClientRect();\n\n    if (parentRect) {\n      this.setWidth(Math.round(parentRect.right) - Math.round(this.getRect().x) - BORDER);\n    }\n  }\n\n  private getParentRow() {\n    if (!this.parentRow) {\n      this.parentRow = this.element.closest(\"tr\");\n    }\n    return this.parentRow;\n  }\n\n  private fetchChildWidth() {\n    const thead = this.element.querySelector(\"thead, tbody\");\n    return widthValue(thead?.getBoundingClientRect().width);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cell } from \"./\";\n\nexport const CELL_CSS_SELCTOR = \".react-resizable\";\n\nexport class DOMSession {\n  private cells: Cell[] | undefined;\n\n  getCells(): Cell[] {\n    if (this.cells === undefined) {\n      this.cells = this.buildCells();\n    }\n    return this.cells;\n  }\n\n  private buildCells() {\n    const cells: Cell[] = [];\n    this.fetchCellElements(document.body).forEach((cellElement) => {\n      this.buildCell(cellElement, cells, 0);\n    });\n    return cells;\n  }\n\n  private buildCell(htmlElement: HTMLElement, cells: Cell[], depthLevel: number): Cell {\n    const exitingElement = cells.find((c) => c.element === htmlElement);\n    if (exitingElement) {\n      return exitingElement;\n    }\n\n    const cell = new Cell(\n      htmlElement,\n      this.fetchCellElements(htmlElement)\n        .map((child) => this.buildCell(child, cells, depthLevel + 1))\n        .filter((c) => c.depth == depthLevel + 1),\n      depthLevel\n    );\n\n    cells.push(cell);\n\n    return cell;\n  }\n\n  private fetchCellElements(parent: HTMLElement): HTMLElement[] {\n    const htmlElements = parent.querySelectorAll(CELL_CSS_SELCTOR);\n    return [].slice.call(htmlElements);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMSession, Cell } from \"../dom\";\n\n/*\n * =============================================================================\n * React state + hooks abstractions have a level of granularity that limits the\n * frame hate in the context of resizable boxed expression cells.\n *\n * This component intentionally accesses DOM elements, but it also propagates\n * new width information across React components once users commit an action.\n * =============================================================================\n */\nexport const applyDOMSupervisor = (): void => {\n  new SupervisorExecution().execute();\n};\n\nclass SupervisorExecution {\n  domSession: DOMSession;\n\n  constructor() {\n    this.domSession = new DOMSession();\n  }\n\n  execute() {\n    const cells = this.domSession.getCells();\n    cells.sort((c1, c2) => c2.depth - c1.depth).forEach(this.refreshWidthAsParent);\n    cells.sort((c1, c2) => c1.depth - c2.depth).forEach(this.refreshWidthAsLastColumn);\n  }\n\n  private refreshWidthAsParent(cell: Cell) {\n    cell.refreshWidthAsParent();\n  }\n\n  private refreshWidthAsLastColumn(cell: Cell) {\n    cell.refreshWidthAsLastColumn();\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Resizer.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useMemo, useState, useLayoutEffect } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport { v4 as uuid } from \"uuid\";\nimport * as _ from \"lodash\";\nimport { Cell, DOMSession } from \"./dom\";\nimport { DEFAULT_MIN_WIDTH, widthValue as commonWidthValue } from \"./common\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface ResizerProps {\n  width: number;\n  height?: number | \"100%\";\n  minWidth?: number;\n  onHorizontalResizeStop?: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height = \"100%\",\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  /*\n   * States\n   */\n\n  const [resizerWidth, setResizerWidth] = useState(width);\n  const [initalResizerWidth, setInitialResizerWidth] = useState(0);\n  const [cells, setCells] = useState<Cell[]>([]);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  /*\n   * Memos\n   */\n\n  const id = useMemo(() => {\n    return `uuid-${uuid()}`;\n  }, []);\n\n  const resizerMinWidth = useMemo(() => {\n    return minWidth ?? DEFAULT_MIN_WIDTH;\n  }, [minWidth]);\n\n  const resizerClassName = useMemo(() => {\n    const heightClass = height === \"100%\" ? \"height-based-on-content\" : \"\";\n    return `${heightClass} ${id}`;\n  }, [height, id]);\n\n  /*\n   * Effects\n   */\n\n  useLayoutEffect(() => {\n    function listener(event: CustomEvent) {\n      const width = Math.round(event.detail.width);\n      setResizerWidth(width);\n      onHorizontalResizeStop?.(width);\n    }\n\n    document.addEventListener(id, listener);\n    return () => {\n      document.removeEventListener(id, listener);\n    };\n  }, [id, onHorizontalResizeStop, resizerWidth]);\n\n  /*\n   * Callbacks\n   */\n\n  const widthValue = useCallback(commonWidthValue, []);\n\n  const getApplicableCells = useCallback((allCells: Cell[], currentCell: Cell) => {\n    const applicableCells: Cell[] = [];\n    const parent = currentCell.element.closest(\"table\");\n    const currentRect = currentCell.getRect();\n\n    const hasSameParent = (cell: Cell) => parent?.contains(cell.element);\n    const isCellParent = (cell: Cell) => cell.element?.contains(currentCell.element);\n    const containsCurrent = (cell: Cell) => {\n      const cellRect = cell.getRect();\n      return cellRect.x <= currentRect.x && cellRect.right >= currentRect.right;\n    };\n\n    if (currentCell.isLastColumn()) {\n      allCells\n        .filter((cell) => cell.isLastColumn())\n        .forEach((cell) => {\n          applicableCells.push(cell);\n        });\n    } else {\n      let hasSomeLastColumn = false;\n\n      allCells.forEach((cell) => {\n        if ((hasSameParent(cell) || isCellParent(cell)) && containsCurrent(cell)) {\n          applicableCells.push(cell);\n          if (cell.isLastColumn()) {\n            hasSomeLastColumn = true;\n          }\n        }\n      });\n\n      if (hasSomeLastColumn) {\n        allCells\n          .filter((cell) => {\n            return cell.isLastColumn() && !hasSameParent(cell);\n          })\n          .forEach((cell) => {\n            applicableCells.push(cell);\n          });\n      }\n    }\n\n    applicableCells.forEach((cell) => {\n      cell.element.dataset.initialWidth = cell.element.style.width;\n    });\n\n    return _.uniqBy(applicableCells, (cell) => cell.getId());\n  }, []);\n\n  const onResizeStart = useCallback(() => {\n    const allCells = new DOMSession().getCells();\n    const currentCell = allCells.find((c) => c.getId() === id)!;\n    const applicableCells = getApplicableCells(allCells, currentCell);\n    const initialWidth = widthValue(currentCell.getRect().width);\n\n    setCells(applicableCells);\n    setInitialResizerWidth(initialWidth);\n  }, [getApplicableCells, id, widthValue]);\n\n  const onResize = useCallback(\n    (_, data) => {\n      const newResizerWidth = parseInt(data.size.width + \"\");\n      cells.forEach((cell) => {\n        const delta = newResizerWidth - initalResizerWidth;\n        const celllElement = cell.element;\n        const isSameCell = cell.getId() === id;\n\n        if (!isSameCell) {\n          const cellInitialWidth = parseInt(celllElement.dataset.initialWidth + \"\");\n          celllElement.style.width = cellInitialWidth + delta + \"px\";\n        }\n      });\n    },\n    [cells, id, initalResizerWidth]\n  );\n\n  const onResizeStop = useCallback(\n    (_, data) => {\n      const newResizerWidth = widthValue(data.size.width);\n\n      cells.forEach((cell) => {\n        const delta = newResizerWidth - initalResizerWidth;\n        const cellInitialWidth = widthValue(cell.element.dataset.initialWidth);\n        cell.setWidth(cellInitialWidth + delta);\n      });\n\n      setSupervisorHash(\"-\");\n    },\n    [cells, initalResizerWidth, setSupervisorHash, widthValue]\n  );\n\n  return useMemo(() => {\n    return (\n      <ResizableBox\n        className={resizerClassName}\n        width={resizerWidth}\n        minConstraints={[resizerMinWidth, 0]}\n        height={0}\n        axis=\"x\"\n        onResize={onResize}\n        onResizeStop={onResizeStop}\n        onResizeStart={onResizeStart}\n        handle={\n          <div className=\"pf-c-drawer\">\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\"></div>\n            </div>\n          </div>\n        }\n      >\n        {children}\n      </ResizableBox>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resizerClassName, onResize, onResizeStop, onResizeStart, children]);\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Resizer.css\";\nimport * as React from \"react\";\nimport { applyDOMSupervisor } from \"./dom\";\nimport { useEffect, useContext } from \"react\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface ResizerSupervisorProps {\n  children?: React.ReactElement;\n}\n\nexport const ResizerSupervisor: React.FunctionComponent<ResizerSupervisorProps> = ({ children }) => {\n  const { supervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  useEffect(() => {\n    const id = setTimeout(applyDOMSupervisor, 0);\n    return () => clearTimeout(id);\n  }, [supervisorHash]);\n\n  return <div>{children}</div>;\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  uid,\n  content = \"\",\n  dataType = DataType.Undefined,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n\n  const [expressionName, setExpressionName] = useState<string>(name);\n  const [expressionDataType, setExpressionDataType] = useState<DataType>(dataType);\n  const literalExpressionContent = useRef<string>(content);\n  const literalExpressionWidth = useRef<number>(width || HEADER_WIDTH);\n\n  const spreadLiteralExpressionDefinition = useCallback(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      uid,\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent.current,\n      ...(!isHeadless && literalExpressionWidth.current !== HEADER_WIDTH\n        ? { width: literalExpressionWidth.current }\n        : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [expressionDataType, expressionName, isHeadless, onUpdatingRecursiveExpression, uid]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n      spreadLiteralExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadLiteralExpressionDefinition]\n  );\n\n  const onContentChange = useCallback(\n    (event) => {\n      literalExpressionContent.current = event.target.value;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (width) => {\n      literalExpressionWidth.current = width;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth.current}\n        minWidth={HEADER_WIDTH}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <EditExpressionMenu\n            selectedExpressionName={expressionName}\n            selectedDataType={expressionDataType}\n            onExpressionUpdate={onExpressionUpdate}\n          >\n            <div className=\"expression-info\">\n              <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n              <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n            </div>\n          </EditExpressionMenu>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, onExpressionUpdate, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <TextArea\n        defaultValue={literalExpressionContent.current}\n        onBlur={onContentChange}\n        aria-label=\"literal-expression-content\"\n      />\n    ),\n    [onContentChange]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadLiteralExpressionDefinition();\n  }, [spreadLiteralExpressionDefinition]);\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { TableHeaderVisibility, Column as IColumn } from \"../../api\";\nimport { Cell, Column, Row, TableInstance } from \"react-table\";\nimport { DEFAULT_MIN_WIDTH, Resizer } from \"../Resizer\";\n\nexport interface TableBodyProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey: (row: Row) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: Column[]) => void;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  tableInstance,\n  children,\n  headerVisibility = TableHeaderVisibility.Full,\n  getRowKey,\n  getColumnKey,\n  onColumnsUpdate,\n}) => {\n  const renderCell = useCallback(\n    (cellIndex: number, cell: Cell, rowIndex: number) => {\n      const cellType = cellIndex === 0 ? \"counter-cell\" : \"data-cell\";\n      const column = (tableInstance.allColumns[cellIndex] as unknown) as IColumn;\n\n      const getWidth = (): number => {\n        if (typeof column?.width === \"number\") {\n          return column?.width;\n        }\n        return DEFAULT_MIN_WIDTH;\n      };\n      const setWidth = (width: number) => {\n        column?.setWidth?.(width);\n        tableInstance.allColumns[cellIndex].width = width;\n      };\n      const onResize = (width: number) => {\n        if (column.setWidth) {\n          setWidth(width);\n          onColumnsUpdate?.(tableInstance.columns);\n        }\n      };\n      const cellTemplate =\n        cellIndex === 0 ? (\n          <>{rowIndex + 1}</>\n        ) : (\n          <Resizer width={getWidth()} onHorizontalResizeStop={onResize}>\n            <>{cell.render(\"Cell\")}</>\n          </Resizer>\n        );\n\n      return (\n        <Td\n          {...tableInstance.getTdProps(cellIndex, rowIndex)}\n          key={`${getColumnKey(cell.column)}-${cellIndex}`}\n          data-ouia-component-id={\"expression-column-\" + cellIndex}\n          className={`${cellType}`}\n        >\n          {cellTemplate}\n        </Td>\n      );\n    },\n    [getColumnKey, onColumnsUpdate, tableInstance]\n  );\n\n  const renderBodyRow = useCallback(\n    (row: Row, rowIndex: number) => {\n      const rowProps = { ...row.getRowProps(), style: {} };\n      return (\n        <Tr\n          className=\"table-row\"\n          {...rowProps}\n          key={`${getRowKey(row)}-${rowIndex}`}\n          ouiaId={\"expression-row-\" + rowIndex}\n        >\n          {row.cells.map((cell: Cell, cellIndex: number) => renderCell(cellIndex, cell, rowIndex))}\n        </Tr>\n      );\n    },\n    [getRowKey, renderCell]\n  );\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td role=\"cell\" key={childIndex} className=\"row-remainder-content\">\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children]\n  );\n\n  return (\n    <Tbody\n      className={`${headerVisibility === TableHeaderVisibility.None ? \"missing-header\" : \"\"}`}\n      {...tableInstance.getTableBodyProps()}\n    >\n      {tableInstance.rows.map((row: Row, rowIndex: number) => {\n        tableInstance.prepareRow(row);\n        return renderBodyRow(row, rowIndex);\n      })}\n      {children ? renderAdditiveRow : null}\n    </Tbody>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerMenuProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerMenuProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface TableHandlerProps {\n  /** The prefix to be used for the column name */\n  columnPrefix: string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Last selected column index */\n  lastSelectedColumnIndex: number;\n  /** Last selected row index */\n  lastSelectedRowIndex: number;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding: () => DataRecord;\n  /** Show/hide table handler */\n  showTableHandler: boolean;\n  /** Function to programmatically show/hide table handler */\n  setShowTableHandler: React.Dispatch<React.SetStateAction<boolean>>;\n  /** Target for showing the table handler  */\n  tableHandlerTarget: HTMLElement;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Table handler allowed operations */\n  tableHandlerAllowedOperations: TableOperation[];\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHandler: React.FunctionComponent<TableHandlerProps> = ({\n  columnPrefix,\n  tableColumns,\n  lastSelectedColumnIndex,\n  lastSelectedRowIndex,\n  tableRows,\n  onRowsUpdate,\n  onRowAdding,\n  showTableHandler,\n  setShowTableHandler,\n  tableHandlerTarget,\n  handlerConfiguration,\n  tableHandlerAllowedOperations,\n  resetRowCustomFunction = () => ({}),\n  onColumnsUpdate,\n}) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(lastSelectedColumnIndex);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(lastSelectedRowIndex);\n\n  useEffect(() => {\n    setSelectedColumnIndex(lastSelectedColumnIndex);\n  }, [lastSelectedColumnIndex]);\n\n  useEffect(() => {\n    setSelectedRowIndex(lastSelectedRowIndex);\n  }, [lastSelectedRowIndex]);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const clearAt = <T extends unknown>(elements: T[], index: number) => {\n    return [\n      ...elements.slice(0, index),\n      resetRowCustomFunction(elements[index] as DataRecord),\n      ...elements.slice(index + 1),\n    ];\n  };\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns.current, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      } as ColumnInstance;\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  /** These column operations have impact also on the collection of cells */\n  const updateColumnsThenRows = useCallback(\n    (columns) => {\n      onColumnsUpdate(columns);\n      onRowsUpdate(tableRows.current);\n    },\n    [onColumnsUpdate, onRowsUpdate, tableRows]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          updateColumnsThenRows(\n            insertBefore(tableColumns.current, selectedColumnIndex, generateNextAvailableColumn(tableColumns.current))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          updateColumnsThenRows(\n            insertAfter(tableColumns.current, selectedColumnIndex, generateNextAvailableColumn(tableColumns.current))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          updateColumnsThenRows(deleteAt(tableColumns.current, selectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          onRowsUpdate(insertBefore(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          onRowsUpdate(insertAfter(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          onRowsUpdate(deleteAt(tableRows.current, selectedRowIndex));\n          break;\n        case TableOperation.RowClear:\n          onRowsUpdate(clearAt(tableRows.current, selectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      generateNextAvailableColumn,\n      updateColumnsThenRows,\n      onRowAdding,\n      onRowsUpdate,\n      selectedColumnIndex,\n      selectedRowIndex,\n      setShowTableHandler,\n      tableColumns,\n      tableRows,\n    ]\n  );\n\n  return useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [\n      showTableHandler,\n      globalContext.boxedExpressionEditorRef,\n      handlerConfiguration,\n      tableHandlerAllowedOperations,\n      handlingOperation,\n      setShowTableHandler,\n      tableHandlerTarget,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord, HeaderGroup, TableInstance } from \"react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType, TableHeaderVisibility } from \"../../api\";\nimport { DEFAULT_MIN_WIDTH, Resizer } from \"../Resizer\";\n\nexport interface TableHeaderProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup: boolean;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHeader: React.FunctionComponent<TableHeaderProps> = ({\n  tableInstance,\n  tableRows,\n  onRowsUpdate,\n  editColumnLabel,\n  headerVisibility = TableHeaderVisibility.Full,\n  skipLastHeaderGroup,\n  getColumnKey,\n  tableColumns,\n  onColumnsUpdate,\n}) => {\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      onRowsUpdate(\n        _.map(tableRows.current, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        })\n      ),\n    [onRowsUpdate, tableRows]\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns.current[columnIndex] as ColumnInstance).accessor as string;\n        const updatedTableColumns = [...tableColumns.current] as ColumnInstance[];\n        updatedTableColumns[columnIndex].label = name;\n        updatedTableColumns[columnIndex].accessor = name;\n        updatedTableColumns[columnIndex].dataType = dataType;\n        onColumnsUpdate(updatedTableColumns);\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [onColumnsUpdate, tableColumns, updateColumnNameInRows]\n  );\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th\n        {...column.getHeaderProps()}\n        className=\"fixed-column no-clickable-cell\"\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    [getColumnKey]\n  );\n\n  const renderHeaderCellInfo = useCallback(\n    (column) => (\n      <div className=\"header-cell-info\" data-ouia-component-type=\"expression-column-header-cell-info\">\n        {column.headerCellElement ? column.headerCellElement : <p className=\"pf-u-text-truncate\">{column.label}</p>}\n        {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n      </div>\n    ),\n    []\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (columnIndex, columnWidth) => {\n      tableColumns.current[columnIndex].width = columnWidth;\n      onColumnsUpdate(tableColumns.current);\n    },\n    [onColumnsUpdate, tableColumns]\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => {\n      const headerProps = {\n        ...column.getHeaderProps(),\n        style: {},\n      };\n      const thProps = tableInstance.getThProps(column, columnIndex);\n      const width = column.width || DEFAULT_MIN_WIDTH;\n      return (\n        <Th\n          {...headerProps}\n          {...thProps}\n          className={`resizable-column ${!column.dataType ? \"no-clickable-cell\" : null}`}\n          key={`${getColumnKey(column)}-${columnIndex}`}\n        >\n          <Resizer\n            width={width}\n            onHorizontalResizeStop={(columnWidth) => onHorizontalResizeStop(columnIndex, columnWidth)}\n          >\n            <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n              {column.dataType ? (\n                <EditExpressionMenu\n                  title={editColumnLabel}\n                  selectedExpressionName={column.label}\n                  selectedDataType={column.dataType}\n                  onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n                  key={`${getColumnKey(column)}-${columnIndex}`}\n                >\n                  {renderHeaderCellInfo(column)}\n                </EditExpressionMenu>\n              ) : (\n                renderHeaderCellInfo(column)\n              )}\n            </div>\n          </Resizer>\n        </Th>\n      );\n    },\n    [\n      editColumnLabel,\n      getColumnKey,\n      onColumnNameOrDataTypeUpdate,\n      onHorizontalResizeStop,\n      renderHeaderCellInfo,\n      tableInstance,\n    ]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableHeaderCell(column, columnIndex),\n    [renderCountColumn, renderResizableHeaderCell]\n  );\n\n  const getHeaderGroups = useCallback(\n    (tableInstance) => {\n      return skipLastHeaderGroup ? _.dropRight(tableInstance.headerGroups) : tableInstance.headerGroups;\n    },\n    [skipLastHeaderGroup]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      getHeaderGroups(tableInstance).map((headerGroup: HeaderGroup) => {\n        const { key, ...props } = { ...headerGroup.getHeaderGroupProps(), style: {} };\n        return (\n          <Tr key={key} {...props}>\n            {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) =>\n              renderColumn(column, columnIndex)\n            )}\n          </Tr>\n        );\n      }),\n    [getHeaderGroups, renderColumn, tableInstance]\n  );\n\n  const renderAtLevelInHeaderGroups = useCallback(\n    (level: number) => (\n      <Tr>\n        {_.nth(\n          tableInstance.headerGroups as HeaderGroup[],\n          level\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  switch (headerVisibility) {\n    case TableHeaderVisibility.Full:\n      return <Thead noWrap>{renderHeaderGroups}</Thead>;\n    case TableHeaderVisibility.LastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-1)}</Thead>;\n    case TableHeaderVisibility.SecondToLastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-2)}</Thead>;\n    default:\n      return null;\n  }\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useRef, useState, useEffect } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { TableHeaderVisibility, TableOperation, TableProps } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { TableBody } from \"./TableBody\";\nimport { TableHandler } from \"./TableHandler\";\nimport { TableHeader } from \"./TableHeader\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\nconst NUMBER_OF_ROWS_COLUMN = \"#\";\nconst NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onRowAdding = () => ({}),\n  controllerCell = NUMBER_OF_ROWS_COLUMN,\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  headerVisibility,\n  headerLevels = 0,\n  skipLastHeaderGroup = false,\n  getRowKey = (row) => row.id as string,\n  getColumnKey = (column) => column.id as string,\n  resetRowCustomFunction,\n}: TableProps) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [currentControllerCell, setCurrentControllerCell] = useState(controllerCell);\n\n  const generateNumberOfRowsSubColumnRecursively: (column: ColumnInstance, headerLevels: number) => void = useCallback(\n    (column, headerLevels) => {\n      if (headerLevels > 0) {\n        _.assign(column, {\n          columns: [\n            {\n              label: headerVisibility === TableHeaderVisibility.Full ? NUMBER_OF_ROWS_SUBCOLUMN : currentControllerCell,\n              accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n              minWidth: 60,\n              width: 60,\n              disableResizing: true,\n              isCountColumn: true,\n              hideFilter: true,\n            },\n          ],\n        });\n\n        generateNumberOfRowsSubColumnRecursively(column.columns[0], headerLevels - 1);\n      }\n    },\n    [currentControllerCell, headerVisibility]\n  );\n\n  const generateNumberOfRowsColumn = useCallback(\n    (currentControllerCell: string | JSX.Element, columns: Column[]) => {\n      const numberOfRowsColumn = {\n        label: currentControllerCell,\n        accessor: NUMBER_OF_ROWS_COLUMN,\n        width: 60,\n        minWidth: 60,\n        isCountColumn: true,\n      } as ColumnInstance;\n      generateNumberOfRowsSubColumnRecursively(numberOfRowsColumn, headerLevels);\n      return [numberOfRowsColumn, ...columns];\n    },\n    [generateNumberOfRowsSubColumnRecursively, headerLevels]\n  );\n\n  const tableColumns = useRef<Column[]>(generateNumberOfRowsColumn(currentControllerCell, columns));\n  const tableRows = useRef<DataRecord[]>(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  useEffect(() => {\n    tableColumns.current = generateNumberOfRowsColumn(controllerCell, tableColumns.current.slice(1));\n    setCurrentControllerCell(controllerCell);\n  }, [controllerCell, generateNumberOfRowsColumn]);\n\n  useEffect(() => {\n    tableColumns.current = generateNumberOfRowsColumn(currentControllerCell, columns);\n    // Watching for external changes of the columns\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columns]);\n\n  useEffect(() => {\n    tableRows.current = rows;\n    // Watching for external changes of the rows\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const onColumnsUpdateCallback = useCallback(\n    (columns: Column[]) => {\n      tableColumns.current = columns;\n      onColumnsUpdate?.(columns.slice(1)); //Removing \"# of rows\" column\n    },\n    [onColumnsUpdate]\n  );\n\n  const onRowsUpdateCallback = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = rows;\n      onRowsUpdate?.(rows);\n    },\n    [onRowsUpdate]\n  );\n\n  const onCellUpdate = useCallback(\n    (rowIndex: number, columnId: string, value: string) => {\n      const updatedTableCells = [...tableRows.current];\n      updatedTableCells[rowIndex][columnId] = value;\n      onRowsUpdateCallback(updatedTableCells);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      const updatedRows = [...tableRows.current];\n      updatedRows[rowIndex] = updatedRow;\n      onRowsUpdateCallback(updatedRows);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const defaultColumn = {\n    Cell: useCallback((cellRef) => {\n      const column = cellRef.column as ColumnInstance;\n      if (column.isCountColumn) {\n        return cellRef.value;\n      } else {\n        return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n      }\n      // Table performance optimization: no need to re-render cells, since nested component themselves will re-render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const tableHandlerStateUpdate = (target: HTMLElement, columnIndex: number) => {\n    setTableHandlerTarget(target);\n    globalContext.currentlyOpenedHandlerCallback?.(false);\n    setShowTableHandler(true);\n    globalContext.setCurrentlyOpenedHandlerCallback?.(() => setShowTableHandler);\n    setLastSelectedColumnIndex(columnIndex);\n  };\n\n  const getThProps = (column: ColumnInstance, columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.current.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.current.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.current.length > 1 ? [TableOperation.RowDelete] : []),\n          TableOperation.RowClear,\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns.current,\n      data: tableRows.current,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <TableHeader\n          tableInstance={tableInstance}\n          editColumnLabel={editColumnLabel}\n          headerVisibility={headerVisibility}\n          skipLastHeaderGroup={skipLastHeaderGroup}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          tableColumns={tableColumns}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n        <TableBody\n          tableInstance={tableInstance}\n          getRowKey={getRowKey}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n          headerVisibility={headerVisibility}\n        >\n          {children}\n        </TableBody>\n      </TableComposable>\n      {showTableHandler && handlerConfiguration ? (\n        <TableHandler\n          tableColumns={tableColumns}\n          columnPrefix={columnPrefix}\n          handlerConfiguration={handlerConfiguration}\n          lastSelectedColumnIndex={lastSelectedColumnIndex}\n          lastSelectedRowIndex={lastSelectedRowIndex}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          onRowAdding={onRowAdding}\n          showTableHandler={showTableHandler}\n          setShowTableHandler={setShowTableHandler}\n          tableHandlerAllowedOperations={tableHandlerAllowedOperations}\n          tableHandlerTarget={tableHandlerTarget}\n          resetRowCustomFunction={resetRowCustomFunction}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { Column as RelationColumn, DataType, RelationProps, Row, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const tableColumns = useRef<RelationColumn[]>(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const tableRows = useRef<Row[]>(relationProps.rows === undefined ? [[\"\"]] : relationProps.rows);\n\n  const spreadRelationExpressionDefinition = useCallback(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns.current,\n      rows: tableRows.current,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns.current,\n        (column: RelationColumn) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows.current, (row) =>\n        _.reduce(\n          tableColumns.current,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    []\n  );\n\n  const onSavingRows = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = _.map(rows, (tableRow: DataRecord) =>\n        _.reduce(\n          tableColumns.current,\n          (row: string[], column: RelationColumn) => {\n            row.push((tableRow[column.name]! as string) || \"\");\n            return row;\n          },\n          []\n        )\n      );\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) => {\n      tableColumns.current = _.map(columns, (columnInstance: ColumnInstance) => ({\n        name: columnInstance.accessor,\n        dataType: columnInstance.dataType,\n        width: columnInstance.width,\n      }));\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadRelationExpressionDefinition();\n  }, [spreadRelationExpressionDefinition]);\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n  /** Function invoked when resetting expression */\n  onExpressionResetting?: () => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n  onExpressionResetting,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const entryExpression = useRef(expression);\n\n  useEffect(() => {\n    entryExpression.current = _.omit(expression, \"isHeadless\");\n    // Every time, for an expression, its logic type changes, it means that corresponding entry has been just updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback(\n    (logicType) => {\n      entryExpression.current.logicType = logicType;\n      onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n    },\n    [onUpdatingRecursiveExpression]\n  );\n\n  const onLogicTypeResetting = useCallback(() => {\n    entryExpression.current.logicType = LogicType.Undefined;\n    onExpressionResetting?.();\n    onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n  }, [onExpressionResetting, onUpdatingRecursiveExpression]);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression.current}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryExpressionCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryExpression = useRef({\n    uid: contextEntry.entryExpression.uid,\n    ...contextEntry.entryExpression,\n  } as ExpressionProps);\n\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n    onRowUpdate(index, { ...contextEntry, entryExpression: entryExpression.current });\n    // Every time, for an expression, its logic type changes, it means that corresponding entry has been just updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contextEntry.entryExpression.logicType]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    entryExpression.current = expression;\n    onRowUpdate(index, { ...contextEntry, entryExpression: expression });\n    // Callback should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression.current}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        onExpressionResetting={contextEntry.onExpressionResetting}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel?: string;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n  editInfoPopoverLabel,\n}) => {\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  const renderEntryDefinition = useCallback(\n    (additionalCssClass?: string) => (\n      <div className={`entry-definition ${additionalCssClass}`}>\n        <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n          {entryName}\n        </p>\n        <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n          ({entryDataType})\n        </p>\n      </div>\n    ),\n    [entryDataType, entryName]\n  );\n\n  const renderEntryDefinitionWithPopoverMenu = useMemo(\n    () => (\n      <EditExpressionMenu\n        title={editInfoPopoverLabel}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        {renderEntryDefinition(\"with-popover-menu\")}\n      </EditExpressionMenu>\n    ),\n    [editInfoPopoverLabel, entryDataType, entryName, onEntryNameOrDataTypeUpdate, renderEntryDefinition]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      {editInfoPopoverLabel ? renderEntryDefinitionWithPopoverMenu : renderEntryDefinition()}\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryInfo, setEntryInfo] = useState(contextEntry.entryInfo);\n\n  useEffect(() => {\n    setEntryInfo(contextEntry.entryInfo);\n  }, [contextEntry.entryInfo]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      onRowUpdate(index, { ...contextEntry, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.name}\n        dataType={entryInfo.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n        editInfoPopoverLabel={contextEntry.editInfoPopoverLabel}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  EntryInfo,\n  ExpressionProps,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  LogicType,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\nimport { hashfy, Resizer } from \"../Resizer\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  contextEntries,\n  result = {} as ExpressionProps,\n  renderResult = true,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const { setSupervisorHash } = React.useContext(BoxedExpressionGlobalContext);\n\n  const columns = useMemo(\n    () => [\n      {\n        label: name,\n        accessor: name,\n        dataType,\n        disableHandlerOnHeader: true,\n        columns: [\n          {\n            accessor: \"entryInfo\",\n            disableHandlerOnHeader: true,\n            width: infoWidth,\n            setWidth: setInfoWidth,\n            minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n          },\n          {\n            accessor: \"entryExpression\",\n            disableHandlerOnHeader: true,\n            width: expressionWidth,\n            setWidth: setExpressionWidth,\n            minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n          },\n        ],\n      },\n    ],\n    [dataType, expressionWidth, infoWidth, name]\n  );\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {},\n        editInfoPopoverLabel: i18n.editContextEntry,\n      } as DataRecord,\n    ]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(\n          _.map(rows, (row: ContextEntryRecord) => row.entryInfo) as EntryInfo[],\n          \"ContextEntry\"\n        ),\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {},\n      editInfoPopoverLabel: i18n.editContextEntry,\n    }),\n    [i18n.editContextEntry, rows]\n  );\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.None : TableHeaderVisibility.SecondToLastLevel;\n  }, [isHeadless]);\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      uid,\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      entryInfoWidth: infoWidth,\n      entryExpressionWidth: expressionWidth,\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]));\n    } else {\n      setSupervisorHash(hashfy(updatedDefinition));\n      window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n    }\n  }, [\n    columns,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    rows,\n    resultExpression,\n    infoWidth,\n    expressionWidth,\n    uid,\n    setSupervisorHash,\n  ]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={getHandlerConfiguration(i18n, i18n.contextEntry)}\n        getRowKey={useCallback(getEntryKey, [])}\n        resetRowCustomFunction={useCallback(resetEntry, [])}\n      >\n        {renderResult\n          ? [\n              <Resizer\n                key=\"context-result\"\n                width={infoWidth}\n                minWidth={DEFAULT_ENTRY_INFO_MIN_WIDTH}\n                onHorizontalResizeStop={(width) => setInfoWidth(width)}\n              >\n                <div className=\"context-result\">{`<result>`}</div>\n              </Resizer>,\n              <Resizer\n                key=\"context-expression\"\n                width={expressionWidth}\n                minWidth={DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH}\n                onHorizontalResizeStop={(width) => setExpressionWidth(width)}\n              >\n                <ContextEntryExpression\n                  expression={resultExpression}\n                  onUpdatingRecursiveExpression={setResultExpression}\n                />\n              </Resizer>,\n            ]\n          : undefined}\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DecisionTableProps } from \"../../api\";\nimport * as React from \"react\";\n\nexport const DecisionTableExpression: React.FunctionComponent<DecisionTableProps> = () => {\n  return <div>Decision Table</div>;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ListExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextEntryRecord,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord, Row } from \"react-table\";\nimport * as _ from \"lodash\";\nimport { hashfy } from \"../Resizer\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nconst LIST_EXPRESSION_MIN_WIDTH = 430;\n\nexport const ListExpression: React.FunctionComponent<ListProps> = ({\n  isHeadless,\n  items,\n  onUpdatingRecursiveExpression,\n  uid,\n  width = LIST_EXPRESSION_MIN_WIDTH,\n}: ListProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = useMemo(\n    () => [\n      {\n        group: i18n.rows,\n        items: [\n          { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n          { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n          { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n          { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n        ],\n      },\n    ],\n    [\n      i18n.rowOperations.clear,\n      i18n.rowOperations.delete,\n      i18n.rowOperations.insertAbove,\n      i18n.rowOperations.insertBelow,\n      i18n.rows,\n    ]\n  );\n\n  const generateLiteralExpression = useCallback(\n    () => ({ logicType: LogicType.LiteralExpression } as LiteralExpressionProps),\n    []\n  );\n\n  const initialListOfItems = useCallback(() => {\n    if (_.isEmpty(items)) {\n      return [{ entryExpression: generateLiteralExpression() } as DataRecord];\n    } else {\n      return _.map(items, (item) => ({ entryExpression: item } as DataRecord));\n    }\n  }, [generateLiteralExpression, items]);\n\n  const [listItems, setListItems] = useState(initialListOfItems());\n  const [listWidth, setListWidth] = useState(width || LIST_EXPRESSION_MIN_WIDTH);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  const listTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryExpression.uid!, []);\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryExpression: generateLiteralExpression(),\n    }),\n    [generateLiteralExpression]\n  );\n\n  useEffect(() => {\n    const updatedDefinition: ListProps = {\n      uid,\n      logicType: LogicType.List,\n      width: listWidth,\n      items: _.map(listItems, (listItem: DataRecord) => listItem.entryExpression as ExpressionProps),\n    };\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(updatedDefinition);\n    } else {\n      setSupervisorHash(hashfy(updatedDefinition));\n      window.beeApi?.broadcastListExpressionDefinition?.(updatedDefinition);\n    }\n  }, [listWidth, listItems, isHeadless, onUpdatingRecursiveExpression, uid, setSupervisorHash]);\n\n  const resetRowCustomFunction = useCallback((row: DataRecord) => {\n    return { entryExpression: { uid: (row.entryExpression as ExpressionProps).uid } };\n  }, []);\n\n  const onRowsUpdate = useCallback((rows) => {\n    setListItems(rows);\n  }, []);\n\n  const columns = useMemo(() => [{ accessor: \"list\", width: listWidth, setWidth: setListWidth }], [listWidth]);\n\n  return useMemo(\n    () => (\n      <div className=\"list-expression\">\n        <Table\n          tableId={uid}\n          headerVisibility={TableHeaderVisibility.None}\n          defaultCell={{ list: ContextEntryExpressionCell }}\n          columns={columns}\n          rows={listItems as DataRecord[]}\n          onRowsUpdate={onRowsUpdate}\n          onRowAdding={onRowAdding}\n          handlerConfiguration={handlerConfiguration}\n          getRowKey={listTableGetRowKey}\n          resetRowCustomFunction={resetRowCustomFunction}\n        />\n      </div>\n    ),\n    [\n      columns,\n      handlerConfiguration,\n      listItems,\n      listTableGetRowKey,\n      onRowAdding,\n      onRowsUpdate,\n      resetRowCustomFunction,\n      uid,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./InvocationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useContext, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  EntryInfo,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  InvocationProps,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell, ContextEntryInfoCell } from \"../ContextExpression\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { hashfy } from \"../Resizer\";\n\nconst DEFAULT_PARAMETER_NAME = \"p-1\";\nconst DEFAULT_PARAMETER_DATA_TYPE = DataType.Undefined;\n\nexport const InvocationExpression: React.FunctionComponent<InvocationProps> = ({\n  bindingEntries,\n  dataType = DEFAULT_PARAMETER_DATA_TYPE,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  invokedFunction = \"\",\n  isHeadless,\n  logicType,\n  name = DEFAULT_PARAMETER_NAME,\n  onUpdatingNameAndDataType,\n  onUpdatingRecursiveExpression,\n  uid,\n}: InvocationProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  const [rows, setRows] = useState(\n    bindingEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_PARAMETER_NAME,\n          dataType: DEFAULT_PARAMETER_DATA_TYPE,\n        },\n        entryExpression: {},\n        editInfoPopoverLabel: i18n.editParameter,\n      } as DataRecord,\n    ]\n  );\n\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const [functionName, setFunctionName] = useState(invokedFunction);\n  const { setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  useEffect(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: InvocationProps = {\n      uid,\n      logicType,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      bindingEntries: rows as ContextEntries,\n      invokedFunction: functionName,\n      entryInfoWidth: infoWidth,\n      entryExpressionWidth: expressionWidth,\n    };\n\n    const expression = _.omit(updatedDefinition, [\"name\", \"dataType\"]);\n\n    if (isHeadless) {\n      onUpdatingRecursiveExpression?.(expression);\n    } else {\n      setSupervisorHash(hashfy(expression));\n      window.beeApi?.broadcastInvocationExpressionDefinition?.(updatedDefinition);\n    }\n  }, [\n    expressionWidth,\n    functionName,\n    infoWidth,\n    isHeadless,\n    logicType,\n    onUpdatingRecursiveExpression,\n    rows,\n    setSupervisorHash,\n    uid,\n  ]);\n\n  const headerCellElement = (\n    <div className=\"function-definition-container\">\n      <input\n        className=\"function-definition pf-u-text-truncate\"\n        type=\"text\"\n        placeholder={i18n.enterFunction}\n        defaultValue={functionName}\n        onBlur={(e) => setFunctionName(e.target.value)}\n      />\n    </div>\n  );\n\n  const columns = useRef([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          headerCellElement,\n          accessor: \"functionDefinition\",\n          disableHandlerOnHeader: true,\n          columns: [\n            {\n              accessor: \"entryInfo\",\n              disableHandlerOnHeader: true,\n              width: infoWidth,\n              setWidth: setInfoWidth,\n              minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n            },\n            {\n              accessor: \"entryExpression\",\n              disableHandlerOnHeader: true,\n              width: expressionWidth,\n              setWidth: setExpressionWidth,\n              minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n            },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label as string, expressionColumn.dataType);\n\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label as string;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(\n          _.map(rows, (row: ContextEntryRecord) => row.entryInfo) as EntryInfo[],\n          \"p\"\n        ),\n        dataType: DEFAULT_PARAMETER_DATA_TYPE,\n      },\n      entryExpression: {},\n      editInfoPopoverLabel: i18n.editParameter,\n    }),\n    [i18n.editParameter, rows]\n  );\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.SecondToLastLevel : TableHeaderVisibility.Full;\n  }, [isHeadless]);\n\n  const setRowsCallback = useCallback((entries) => setRows(entries), []);\n  const getRowKeyCallback = useCallback((row) => getEntryKey(row), []);\n  const resetEntryCallback = useCallback((row) => resetEntry(row), []);\n\n  return useMemo(\n    () => (\n      <div className={`invocation-expression ${uid}`}>\n        <Table\n          tableId={uid}\n          headerLevels={2}\n          headerVisibility={getHeaderVisibility()}\n          skipLastHeaderGroup\n          defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n          columns={columns.current}\n          rows={rows as DataRecord[]}\n          onColumnsUpdate={onColumnsUpdate}\n          onRowAdding={onRowAdding}\n          onRowsUpdate={setRowsCallback}\n          handlerConfiguration={getHandlerConfiguration(i18n, i18n.parameters)}\n          getRowKey={getRowKeyCallback}\n          resetRowCustomFunction={resetEntryCallback}\n        />\n      </div>\n    ),\n    [\n      getHeaderVisibility,\n      getRowKeyCallback,\n      i18n,\n      onColumnsUpdate,\n      onRowAdding,\n      resetEntryCallback,\n      rows,\n      setRowsCallback,\n      uid,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditParameters.css\";\nimport * as _ from \"lodash\";\nimport { DataTypeSelector } from \"../EditExpressionMenu\";\nimport { Button } from \"@patternfly/react-core\";\nimport { OutlinedTrashAltIcon } from \"@patternfly/react-icons\";\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback } from \"react\";\nimport { DataType, EntryInfo, generateNextAvailableEntryName } from \"../../api\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\n\nexport interface EditParametersProps {\n  /** List of parameters */\n  parameters: EntryInfo[];\n  /** Function for mutating parameters state */\n  setParameters: React.Dispatch<React.SetStateAction<EntryInfo[]>>;\n}\n\nexport const EditParameters: React.FunctionComponent<EditParametersProps> = ({ parameters, setParameters }) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const addParameter = useCallback(() => {\n    setParameters((parameters) => [\n      ...parameters,\n      {\n        name: generateNextAvailableEntryName(parameters, \"p\"),\n        dataType: DataType.Undefined,\n      },\n    ]);\n  }, [setParameters]);\n\n  const onNameChange = useCallback(\n    (index: number) => (event: ChangeEvent<HTMLInputElement>) =>\n      setParameters((parameters) => {\n        parameters[index].name = event.target.value;\n        return [...parameters];\n      }),\n    [setParameters]\n  );\n\n  const onDataTypeChange = useCallback(\n    (index: number) => (dataType: DataType) => {\n      setParameters((parameters) => {\n        parameters[index].dataType = dataType;\n        return [...parameters];\n      });\n    },\n    [setParameters]\n  );\n\n  const onParameterRemove = useCallback(\n    (index: number) => () =>\n      setParameters((parameters) => [...parameters.slice(0, index), ...parameters.slice(index + 1)]),\n    [setParameters]\n  );\n\n  return (\n    <div className=\"parameters-editor\">\n      <Button variant=\"tertiary\" onClick={addParameter} className=\"add-parameter\">\n        {i18n.addParameter}\n      </Button>\n      <div className=\"parameters-container\">\n        {_.map(parameters, (parameter, index) => {\n          return (\n            <div key={`${parameter.name}_${index}`} className=\"parameter-entry\">\n              <input\n                className=\"parameter-name\"\n                type=\"text\"\n                onBlur={onNameChange(index)}\n                defaultValue={parameter.name}\n              />\n              <DataTypeSelector\n                selectedDataType={parameter.dataType}\n                onDataTypeChange={onDataTypeChange(index)}\n                menuAppendTo=\"parent\"\n              />\n              <Button\n                variant=\"danger\"\n                className=\"delete-parameter\"\n                icon={<OutlinedTrashAltIcon />}\n                iconPosition=\"left\"\n                onClick={onParameterRemove(index)}\n              >\n                {i18n.delete}\n              </Button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { FunctionKind } from \"../../api\";\n\nexport interface FunctionKindSelectorProps {\n  /** Pre-selected function kind */\n  selectedFunctionKind: FunctionKind;\n  /** Callback invoked when function kind selection changes */\n  onFunctionKindSelect: (functionKind: FunctionKind) => void;\n}\n\nexport const FunctionKindSelector: React.FunctionComponent<FunctionKindSelectorProps> = ({\n  selectedFunctionKind,\n  onFunctionKindSelect,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const functionKindSelectionCallback = useCallback(\n    (hide: () => void) => (event: MouseEvent, itemId: string) => {\n      onFunctionKindSelect(itemId as FunctionKind);\n      hide();\n    },\n    [onFunctionKindSelect]\n  );\n\n  const renderFunctionKindItems = useCallback(\n    () =>\n      _.map(Object.values(FunctionKind), (key) => (\n        <MenuItem key={key} itemId={key} data-ouia-component-id={key}>\n          {key}\n        </MenuItem>\n      )),\n    []\n  );\n\n  return (\n    <PopoverMenu\n      title={i18n.selectFunctionKind}\n      appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n      className=\"function-kind-popover\"\n      hasAutoWidth\n      body={(hide: () => void) => (\n        <Menu onSelect={functionKindSelectionCallback(hide)}>\n          <MenuList>{renderFunctionKindItems()}</MenuList>\n        </Menu>\n      )}\n    >\n      <div className=\"selected-function-kind\">{_.first(selectedFunctionKind)}</div>\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./FunctionExpression.css\";\nimport * as React from \"react\";\nimport { PropsWithChildren, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  ExpressionProps,\n  FeelFunctionProps,\n  FunctionKind,\n  FunctionProps,\n  JavaFunctionProps,\n  LiteralExpressionProps,\n  LogicType,\n  resetEntry,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { FunctionKindSelector } from \"./FunctionKindSelector\";\nimport { EditParameters } from \"./EditParameters\";\nimport { hashfy } from \"../Resizer\";\n\nexport const DEFAULT_FIRST_PARAM_NAME = \"p-1\";\n\nexport const FunctionExpression: React.FunctionComponent<FunctionProps> = (props: PropsWithChildren<FunctionProps>) => {\n  const parametersWidth =\n    props.parametersWidth === undefined ? DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH : props.parametersWidth;\n  const formalParameters = props.formalParameters === undefined ? [] : props.formalParameters;\n  const functionKind = props.functionKind === undefined ? FunctionKind.Feel : props.functionKind;\n  const name = props.name === undefined ? DEFAULT_FIRST_PARAM_NAME : props.name;\n\n  const [width, setWidth] = useState(parametersWidth);\n\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const { boxedExpressionEditorRef, setSupervisorHash } = useContext(BoxedExpressionGlobalContext);\n\n  const [parameters, setParameters] = useState(formalParameters);\n\n  const headerCellElement = useMemo(\n    () => (\n      <PopoverMenu\n        title={i18n.editParameters}\n        appendTo={boxedExpressionEditorRef?.current ?? undefined}\n        className=\"parameters-editor-popover\"\n        minWidth=\"400px\"\n        body={<EditParameters parameters={parameters} setParameters={setParameters} />}\n      >\n        <div className={`parameters-list ${_.isEmpty(parameters) ? \"empty-parameters\" : \"\"}`}>\n          <p className=\"pf-u-text-truncate\">\n            {_.isEmpty(parameters)\n              ? i18n.editParameters\n              : `(${_.join(\n                  _.map(parameters, (parameter) => parameter.name),\n                  \", \"\n                )})`}\n          </p>\n        </div>\n      </PopoverMenu>\n    ),\n    [boxedExpressionEditorRef, i18n.editParameters, parameters]\n  );\n\n  const evaluateColumns = useCallback(\n    () => [\n      {\n        label: name,\n        accessor: name,\n        dataType: props.dataType,\n        disableHandlerOnHeader: true,\n        columns: [\n          {\n            headerCellElement,\n            accessor: \"parameters\",\n            disableHandlerOnHeader: true,\n            width: width,\n            minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n          },\n        ],\n      },\n    ],\n    [name, props.dataType, headerCellElement, width]\n  );\n\n  const extractContextEntriesFromJavaProps = useCallback(\n    (javaProps: JavaFunctionProps & { children?: React.ReactNode }) => {\n      return [\n        {\n          entryInfo: { name: i18n.class, dataType: DataType.String },\n          entryExpression: {\n            noClearAction: true,\n            logicType: LogicType.LiteralExpression,\n            content: javaProps.class,\n          } as LiteralExpressionProps,\n        },\n        {\n          entryInfo: { name: i18n.methodSignature, dataType: DataType.String },\n          entryExpression: {\n            noClearAction: true,\n            logicType: LogicType.LiteralExpression,\n            content: javaProps.method,\n          } as LiteralExpressionProps,\n        },\n      ];\n    },\n    [i18n.class, i18n.methodSignature]\n  );\n\n  const evaluateRows = useCallback(\n    (functionKind: FunctionKind) => {\n      //TODO PMML kind is still missing\n      switch (functionKind) {\n        case FunctionKind.Java: {\n          const javaProps: PropsWithChildren<JavaFunctionProps> = props as PropsWithChildren<JavaFunctionProps>;\n          return [\n            {\n              entryExpression: {\n                logicType: LogicType.Context,\n                noClearAction: true,\n                renderResult: false,\n                noHandlerMenu: true,\n                contextEntries: extractContextEntriesFromJavaProps(javaProps),\n              },\n            } as DataRecord,\n          ];\n        }\n        case FunctionKind.Pmml:\n        case FunctionKind.Feel:\n        default: {\n          const feelProps: PropsWithChildren<FeelFunctionProps> = props as PropsWithChildren<FeelFunctionProps>;\n          return [\n            { entryExpression: feelProps.expression || { logicType: LogicType.LiteralExpression } } as DataRecord,\n          ];\n        }\n      }\n    },\n    [extractContextEntriesFromJavaProps, props]\n  );\n\n  const columns = useRef(evaluateColumns());\n  const [selectedFunctionKind, setSelectedFunctionKind] = useState(functionKind);\n  const [rows, setRows] = useState(evaluateRows(selectedFunctionKind));\n\n  const extendDefinitionBasedOnFunctionKind = useCallback(\n    (definition: FunctionProps, functionKind: FunctionKind) => {\n      //TODO PMML kind is still missing\n      switch (functionKind) {\n        case FunctionKind.Java: {\n          const contextProps = _.first(rows)?.entryExpression as ContextProps;\n          const className =\n            (_.nth(contextProps.contextEntries, 0)?.entryExpression as LiteralExpressionProps)?.content || \"\";\n          const methodName =\n            (_.nth(contextProps.contextEntries, 1)?.entryExpression as LiteralExpressionProps)?.content || \"\";\n          return _.extend(definition, { class: className, method: methodName });\n        }\n        case FunctionKind.Pmml:\n        case FunctionKind.Feel:\n        default: {\n          return _.extend(definition, { expression: _.first(rows)?.entryExpression as ExpressionProps });\n        }\n      }\n    },\n    [rows]\n  );\n\n  const spreadFunctionExpressionDefinition = useCallback(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: FunctionProps = extendDefinitionBasedOnFunctionKind(\n      {\n        uid: props.uid,\n        logicType: props.logicType,\n        name: expressionColumn.accessor,\n        dataType: expressionColumn.dataType,\n        functionKind: selectedFunctionKind,\n        formalParameters: parameters,\n        parametersWidth: width,\n      },\n      selectedFunctionKind\n    );\n\n    if (props.isHeadless) {\n      props.onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]));\n    } else {\n      setSupervisorHash(hashfy(rows));\n      window.beeApi?.broadcastFunctionExpressionDefinition?.(updatedDefinition);\n    }\n  }, [extendDefinitionBasedOnFunctionKind, setSupervisorHash, parameters, props, selectedFunctionKind, rows, width]);\n\n  const getHeaderVisibility = useCallback(() => {\n    return props.isHeadless ? TableHeaderVisibility.LastLevel : TableHeaderVisibility.Full;\n  }, [props.isHeadless]);\n\n  const onFunctionKindSelect = useCallback(\n    (itemId: string) => {\n      const kind = itemId as FunctionKind;\n      setSelectedFunctionKind(kind);\n      // Resetting table content, every time function kind gets selected\n      setRows([{ entryExpression: { logicType: LogicType.Undefined } }]);\n      // Need to wait for the next rendering cycle before setting the correct table rows, based on function kind\n      setTimeout(() => {\n        setRows(evaluateRows(kind));\n      }, 0);\n    },\n    [evaluateRows]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      props.onUpdatingNameAndDataType?.(expressionColumn.label as string, expressionColumn.dataType);\n      setWidth(expressionColumn.width as number);\n\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label as string;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n      spreadFunctionExpressionDefinition();\n    },\n    [columns, props, spreadFunctionExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Everytime the list of parameters or the function definition change, we need to spread expression's updated definition */\n    spreadFunctionExpressionDefinition();\n  }, [rows, spreadFunctionExpressionDefinition]);\n\n  useEffect(() => {\n    columns.current = evaluateColumns();\n    // Watching for changes of the parameters, in order to update the columns passed to the table\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parameters]);\n\n  const resetRowCustomFunction = useCallback((row) => {\n    setSelectedFunctionKind(FunctionKind.Feel);\n    return resetEntry(row);\n  }, []);\n\n  return (\n    <div className={`function-expression ${props.uid}`}>\n      <Table\n        handlerConfiguration={[\n          {\n            group: _.upperCase(i18n.function),\n            items: [{ name: i18n.rowOperations.clear, type: TableOperation.RowClear }],\n          },\n        ]}\n        columns={columns.current}\n        onColumnsUpdate={onColumnsUpdate}\n        rows={rows}\n        onRowsUpdate={setRows}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        controllerCell={\n          <FunctionKindSelector\n            selectedFunctionKind={selectedFunctionKind}\n            onFunctionKindSelect={onFunctionKindSelect}\n          />\n        }\n        defaultCell={{ parameters: ContextEntryExpressionCell }}\n        resetRowCustomFunction={resetRowCustomFunction}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionProps,\n  FunctionKind,\n  FunctionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  RelationProps,\n} from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\nimport nextId from \"react-id-generator\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DecisionTableExpression } from \"../DecisionTableExpression\";\nimport { ListExpression } from \"../ListExpression\";\nimport { InvocationExpression } from \"../InvocationExpression\";\nimport { FunctionExpression } from \"../FunctionExpression\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const expression = _.extend(selectedExpression, {\n    uid: selectedExpression.uid || nextId(),\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n        return <DecisionTableExpression {...(expression as DecisionTableProps)} />;\n      case LogicType.Invocation:\n        return <InvocationExpression {...(expression as InvocationProps)} />;\n      case LogicType.List:\n        return <ListExpression {...(expression as ListProps)} />;\n      case LogicType.Function:\n        return <FunctionExpression {..._.defaults(expression, { functionKind: FunctionKind.Feel } as FunctionProps)} />;\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () =>\n      _.map(getLogicTypesWithoutUndefined(), (key) => (\n        <MenuItem key={key} itemId={key}>\n          {key}\n        </MenuItem>\n      )),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const getAppendToPlacement = useCallback(() => {\n    return globalContext.boxedExpressionEditorRef?.current ?? getArrowPlacement;\n  }, [getArrowPlacement, globalContext.boxedExpressionEditorRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (event: MouseEvent, itemId: string) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = itemId as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getArrowPlacement}\n        appendTo={getAppendToPlacement()}\n        className=\"logic-type-popover\"\n        hasAutoWidth\n        body={\n          <Menu onSelect={onLogicTypeSelect}>\n            <MenuList>{renderLogicTypeItems()}</MenuList>\n          </Menu>\n        }\n      />\n    ),\n    [i18n.selectLogicType, getArrowPlacement, getAppendToPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {!selectedExpression.noClearAction && contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        uid: previousSelectedExpression.uid,\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <div className=\"expression-name-and-logic-type\">\n        <span className=\"expression-title\">{selectedExpression.name}</span>\n        <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n      </div>\n\n      <div\n        className=\"expression-container-box\"\n        ref={expressionContainerRef}\n        data-ouia-component-id=\"expression-container\"\n      >\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useRef, useState, useMemo } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base-no-reset.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport \"./BoxedExpressionEditor.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport { ResizerSupervisor, hashfy } from \"../Resizer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport * as _ from \"lodash\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => {\n  const [currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback] = useState(() => _.identity);\n  const boxedExpressionEditorRef = useRef<HTMLDivElement>(null);\n  const [supervisorHash, setSupervisorHash] = useState(hashfy(props.expressionDefinition));\n\n  return useMemo(\n    () => (\n      <I18nDictionariesProvider\n        defaults={boxedExpressionEditorI18nDefaults}\n        dictionaries={boxedExpressionEditorDictionaries}\n        initialLocale={navigator.language}\n        ctx={BoxedExpressionEditorI18nContext}\n      >\n        <BoxedExpressionGlobalContext.Provider\n          value={{\n            supervisorHash,\n            setSupervisorHash,\n            boxedExpressionEditorRef,\n            currentlyOpenedHandlerCallback,\n            setCurrentlyOpenedHandlerCallback,\n          }}\n        >\n          <ResizerSupervisor>\n            <div className=\"boxed-expression-editor\" ref={boxedExpressionEditorRef}>\n              <ExpressionContainer {...props.expressionDefinition} />\n            </div>\n          </ResizerSupervisor>\n        </BoxedExpressionGlobalContext.Provider>\n      </I18nDictionariesProvider>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.expressionDefinition]\n  );\n};\n\nexport { BoxedExpressionEditor };\n"],"sourceRoot":""}